package com kaku colorfulnews mvp ui activities import android text method LinkMovementMethod import android text util Linkify import android widget TextView import com kaku colorfulnews R import com kaku colorfulnews mvp ui activities base BaseActivity import butterknife BindView public class AboutActivity extends BaseActivity BindView R id msg tv TextView mMsgTv Override public int getLayoutId return R layout activity about Override public void initInjector Override public void initViews mMsgTv setAutoLinkMask Linkify ALL mMsgTv setMovementMethod LinkMovementMethod getInstancepackage com twitter sdk android core services import com twitter sdk android core models User import retrofit2 Call import retrofit2 http GET import retrofit2 http Query public interface AccountService GET 1 1 account verify credentials json Call User verifyCredentials Query include entities Boolean includeEntities Query skip status Boolean skipStatuspackage com kaku colorfulnews di component import android app Activity import android content Context import com kaku colorfulnews di module ActivityModule import com kaku colorfulnews di scope ContextLife import com kaku colorfulnews di scope PerActivity import com kaku colorfulnews mvp ui activities NewsActivity import com kaku colorfulnews mvp ui activities NewsChannelActivity import com kaku colorfulnews mvp ui activities NewsDetailActivity import com kaku colorfulnews mvp ui activities NewsPhotoDetailActivity import com kaku colorfulnews mvp ui activities PhotoActivity import com kaku colorfulnews mvp ui activities PhotoDetailActivity import dagger Component PerActivity Component dependencies ApplicationComponent class modules ActivityModule class public interface ActivityComponent ContextLife Activity Context getActivityContext ContextLife Application Context getApplicationContext Activity getActivity void inject NewsActivity newsActivity void inject NewsDetailActivity newsDetailActivity void inject NewsChannelActivity newsChannelActivity void inject NewsPhotoDetailActivity newsPhotoDetailActivity void inject PhotoActivity photoActivity void inject PhotoDetailActivity photoDetailActivitypackage com zxy recovery core import android app Activity import android content Intent import android text TextUtils import com zxy recovery tools RecoveryLog import com zxy recovery tools RecoveryUtil import java lang reflect InvocationHandler import java lang reflect Method class ActivityManagerDelegate implements InvocationHandler private Object mBaseActivityManagerProxy ActivityManagerDelegate Object o this mBaseActivityManagerProxy o Override public Object invoke Object proxy Method method Object args throws Throwable String methodName method getName switch methodName case finishActivity case finishActivityAffinity Class extends Activity clazz Recovery getInstance getMainPageClass if clazz null break int count ActivityStackCompat getActivityCount Recovery getInstance getContext String baseActivityName ActivityStackCompat getBaseActivityName Recovery getInstance getContext if TextUtils isEmpty baseActivityName break RecoveryLog e currentActivityCount count RecoveryLog e baseActivityName baseActivityName if count 1 clazz getName equals baseActivityName Intent intent new Intent Recovery getInstance getContext clazz intent addFlags Intent FLAG ACTIVITY NEW TASK Intent FLAG ACTIVITY CLEAR TASK if RecoveryUtil isIntentAvailable Recovery getInstance getContext intent Recovery getInstance getContext startActivity intent break default break return method invoke mBaseActivityManagerProxy argspackage com kaku colorfulnews di module import android app Activity import android content Context import com kaku colorfulnews di scope ContextLife import com kaku colorfulnews di scope PerActivity import dagger Module import dagger Provides Module public class ActivityModule private Activity mActivity public ActivityModule Activity activity mActivity activity Provides PerActivity ContextLife Activity public Context ProvideActivityContext return mActivity Provides PerActivity public Activity ProvideActivity return mActivitypackage com zxy recovery core import android app ActivityManager import android content ComponentName import android content Context import android os Build import java util List public class ActivityStackCompat private static ActivityManager AppTask getTopTaskAfterL Context context ActivityManager activityManager ActivityManager context getSystemService Context ACTIVITY SERVICE if Build VERSION SDK INT Build VERSION CODES LOLLIPOP return activityManager getAppTasks get 0 return null private static ActivityManager RunningTaskInfo getTopTaskBeforeL Context context ActivityManager activityManager ActivityManager context getSystemService Context ACTIVITY SERVICE List ActivityManager RunningTaskInfo tasks null try if Build VERSION SDK INT Build VERSION CODES LOLLIPOP tasks activityManager getRunningTasks 1 catch Exception e return null if tasks null tasks size 0 return null return tasks get 0 public static int getActivityCount Context context if Build VERSION SDK INT Build VERSION CODES LOLLIPOP ActivityManager AppTask appTask getTopTaskAfterL context if appTask null return 0 if Build VERSION SDK INT Build VERSION CODES M return appTask getTaskInfo numActivities else or mActivities return RecoveryStore getInstance getRunningActivityCount else ActivityManager RunningTaskInfo taskInfo getTopTaskBeforeL context if taskInfo null return 0 return taskInfo numActivities public static String getBaseActivityName Context context if Build VERSION SDK INT Build VERSION CODES LOLLIPOP ActivityManager AppTask appTask getTopTaskAfterL context if appTask null return null if Build VERSION SDK INT Build VERSION CODES M return appTask getTaskInfo baseActivity getClassName else ComponentName componentName RecoveryStore getInstance getBaseActivity return componentName null null componentName getClassName else ActivityManager RunningTaskInfo taskInfo getTopTaskBeforeL context if taskInfo null return null return taskInfo baseActivity getClassNamepackage com twitter sdk android tweetui internal import android animation Animator import android animation AnimatorListenerAdapter import android view View import android view ViewPropertyAnimator class AnimationUtils public static ViewPropertyAnimator fadeOut final View from int duration if from getVisibility View VISIBLE from clearAnimation final ViewPropertyAnimator animator from animate animator alpha 0f setDuration duration setListener new AnimatorListenerAdapter Override public void onAnimationEnd Animator animation from setVisibility View INVISIBLE from setAlpha 1f return animator return null public static ViewPropertyAnimator fadeIn View to int duration if to getVisibility View VISIBLE to setAlpha 0f to setVisibility View VISIBLE to clearAnimation final ViewPropertyAnimator animator to animate animator alpha 1f setDuration duration setListener null return animatorpackage com kaku colorfulnews common public class ApiConstants public static final String NETEAST HOST http c m 163 com public static final String END URL 20 html public static final String ENDDETAIL URL full html public static final String NEWS DETAIL NETEAST HOST nc article TYPE public static final String HEADLINE TYPE headline TYPE public static final String HOUSE TYPE house TYPE public static final String OTHER TYPE list public static final String LOCAL TYPE local Id public static final String BEIJING ID 5YyX5Lqs id public static final String HEADLINE ID T1348647909107 id public static final String HOUSE ID 5YyX5Lqs public static final String FOOTBALL ID T1399700447917 public static final String ENTERTAINMENT ID T1348648517839 public static final String SPORTS ID T1348649079062 public static final String FINANCE ID T1348648756099 public static final String TECH ID T1348649580692 public static final String MOVIE ID T1348648650048 public static final String CAR ID T1348654060988 public static final String JOKE ID T1350383429665 public static final String GAME ID T1348654151579 public static final String FASHION ID T1348650593803 public static final String EMOTION ID T1348650839000 public static final String CHOICE ID T1370583240249 public static final String RADIO ID T1379038288239 nba public static final String NBA ID T1348649145984 public static final String DIGITAL ID T1348649776727 public static final String MOBILE ID T1351233117091 public static final String LOTTERY ID T1356600029035 public static final String EDUCATION ID T1348654225495 public static final String FORUM ID T1349837670307 public static final String TOUR ID T1348654204705 public static final String PHONE ID T1348649654285 public static final String BLOG ID T1349837698345 public static final String SOCIETY ID T1348648037603 public static final String FURNISHING ID T1348654105308 public static final String BLIZZARD ID T1397016069906 public static final String PATERNITY ID T1397116135282 CBA public static final String CBA ID T1348649475931 public static final String MSG ID T1371543208049 public static final String MILITARY ID T1348648141035 public static final String Video nc video list public static final String VIDEO CENTER n public static final String VIDEO END URL 10 html public static final String VIDEO HOT ID V9LG4B3A0 public static final String VIDEO ENTERTAINMENT ID V9LG4CHOR public static final String VIDEO FUN ID V9LG4E6VR public static final String VIDEO CHOICE ID 00850FRB public static final String WEATHER HOST http wthrcdn etouch cn public static final String SINA PHOTO HOST http gank io api public static final String SINA PHOTO CHOICE ID hdpic toutiao public static final String SINA PHOTO FUN ID hdpic funny public static final String SINA PHOTO PRETTY ID hdpic pretty public static final String SINA PHOTO STORY ID hdpic story public static final String SINA PHOTO DETAIL ID hdpic hdpic toutiao 4 public static String getType String id switch id case HEADLINE ID return HEADLINE TYPE case HOUSE ID return HOUSE TYPE default break return OTHER TYPE public static String getHost int hostType String host switch hostType case HostType NETEASE NEWS VIDEO host NETEAST HOST break case HostType GANK GIRL PHOTO host SINA PHOTO HOST break case HostType NEWS DETAIL HTML PHOTO host http kaku com break default host break return hostpackage com twitter sdk android core models import com google gson annotations SerializedName public class ApiError SerializedName message public final String message SerializedName code public final int code public ApiError String message int code this message message this code codepackage com twitter sdk android core models import com google gson annotations SerializedName import java util List public class ApiErrors SerializedName errors public final List ApiError errors public ApiErrors List ApiError errors this errors errorspackage com zxy recovery test import android app Application import android util Log import com zxy recovery callback RecoveryCallback import com zxy recovery core Recovery public class App extends Application Override public void onCreate super onCreate Recovery getInstance debug true recoverInBackground false recoverStack true mainPage MainActivity class callback new MyCrashCallback init this static final class MyCrashCallback implements RecoveryCallback Override public void stackTrace String exceptionMessage Log e zxy exceptionMessage exceptionMessage Override public void cause String cause Log e zxy cause cause Override public void exception String exceptionType String throwClassName String throwMethodName int throwLineNumber Log e zxy exceptionClassName exceptionType Log e zxy throwClassName throwClassName Log e zxy throwMethodName throwMethodName Log e zxy throwLineNumber throwLineNumberpackage com twitter sdk android tweetcomposer import android content Context import android net Uri import android util AttributeSet import android view ViewGroup import android widget ImageView import android widget LinearLayout import android widget TextView import com squareup picasso Picasso import com squareup picasso Transformation public class AppCardView extends LinearLayout ImageView appImageView ViewGroup appInfoLayout TextView appInstallButton TextView appNameView TextView appStoreNameView public AppCardView Context context this context null public AppCardView Context context AttributeSet attrs super context attrs init context public AppCardView Context context AttributeSet attrs int defStyle super context attrs defStyle init context void init Context context setOrientation LinearLayout VERTICAL inflate context R layout tw app card this findSubviews setButtonColor void findSubviews appImageView ImageView findViewById R id tw app image appNameView TextView findViewById R id tw app name appStoreNameView TextView findViewById R id tw app store name appInstallButton TextView findViewById R id tw app install button appInfoLayout ViewGroup findViewById R id tw app info layout void setCard Card card setImage Uri parse card imageUri setAppName card appName void setImage Uri uri final int radius getResources getDimensionPixelSize R dimen tw card radius medium final Transformation transformation new RoundedCornerTransformation Builder setRadii radius radius 0 0 build Picasso with getContext load uri transform transformation fit centerCrop into appImageView void setAppName String name appNameView setText name Override protected void onMeasure int widthMeasureSpec int heightMeasureSpec final int maxWidth getResources getDimensionPixelSize R dimen tw card maximum width Adjust width if required final int measuredWidth MeasureSpec getSize widthMeasureSpec if maxWidth 0 maxWidth measuredWidth final int measureMode MeasureSpec getMode widthMeasureSpec widthMeasureSpec MeasureSpec makeMeasureSpec maxWidth measureMode super onMeasure widthMeasureSpec heightMeasureSpec void setButtonColor final int buttonTextColor getResources getColor R color tw composer blue text appInstallButton setTextColor buttonTextColorpackage com kaku colorfulnews di component import android content Context import com kaku colorfulnews di module ApplicationModule import com kaku colorfulnews di scope ContextLife import com kaku colorfulnews di scope PerApp import dagger Component PerApp Component modules ApplicationModule class public interface ApplicationComponent ContextLife Application Context getApplicationpackage com kaku colorfulnews di module import android content Context import com kaku colorfulnews App import com kaku colorfulnews di scope ContextLife import com kaku colorfulnews di scope PerApp import dagger Module import dagger Provides Module public class ApplicationModule private App mApplication public ApplicationModule App application mApplication application Provides PerApp ContextLife Application public Context provideApplicationContext return mApplication getApplicationContextpackage com twitter sdk android core internal util import android content Context import android content res TypedArray import android util AttributeSet import android widget ImageView import com twitter sdk android core R public class AspectRatioImageView extends ImageView private static final float DEFAULT ASPECT RATIO 1 0f private static final int DEFAULT ADJUST DIMENSION 0 defined by attrs xml enum static final int ADJUST DIMENSION HEIGHT 0 static final int ADJUST DIMENSION WIDTH 1 private double aspectRatio width to height ratio private int dimensionToAdjust ADJUST DIMENSION HEIGHT or ADJUST DIMENSION WIDTH public AspectRatioImageView Context context this context null public AspectRatioImageView Context context AttributeSet attrs super context attrs final TypedArray a context obtainStyledAttributes attrs R styleable tw AspectRatioImageView try aspectRatio a getFloat R styleable tw AspectRatioImageView tw image aspect ratio DEFAULT ASPECT RATIO dimensionToAdjust a getInt R styleable tw AspectRatioImageView tw image dimension to adjust DEFAULT ADJUST DIMENSION finally a recycle public double getAspectRatio return aspectRatio public int getDimensionToAdjust return dimensionToAdjust public void setAspectRatio final double aspectRatio this aspectRatio aspectRatio public void resetSize if getMeasuredWidth 0 getMeasuredHeight 0 return measure MeasureSpec makeMeasureSpec 0 MeasureSpec EXACTLY MeasureSpec makeMeasureSpec 0 MeasureSpec EXACTLY layout 0 0 0 0 Override protected void onMeasure int widthMeasureSpec int heightMeasureSpec super onMeasure widthMeasureSpec heightMeasureSpec int width getMeasuredWidth int height getMeasuredHeight if dimensionToAdjust ADJUST DIMENSION HEIGHT height calculateHeight width aspectRatio else width calculateWidth height aspectRatio setMeasuredDimension width height int calculateHeight int width double ratio if ratio 0 return 0 return int Math round width ratio int calculateWidth int height double ratio return int Math round height ratiopackage com twitter sdk android core internal util import android test AndroidTestCase import android view LayoutInflater import android view View import android view ViewGroup import android widget LinearLayout import com twitter sdk android core R public class AspectRatioImageViewTest extends AndroidTestCase private static final double TEST ASPECT RATIO 2 0 private static final float DELTA 0 001f private AspectRatioImageView getHeightAdjustedView return AspectRatioImageView getInflatedLayout findViewById R id height adjusted view private AspectRatioImageView getWidthAdjustedView return AspectRatioImageView getInflatedLayout findViewById R id width adjusted view public void testHeightAdjusted final AspectRatioImageView imageView getHeightAdjustedView assertEquals 1 6 imageView getAspectRatio DELTA assertEquals AspectRatioImageView ADJUST DIMENSION HEIGHT imageView getDimensionToAdjust public void testWidthAdjusted final AspectRatioImageView imageView getWidthAdjustedView assertEquals 1 2 imageView getAspectRatio DELTA assertEquals AspectRatioImageView ADJUST DIMENSION WIDTH imageView getDimensionToAdjust private View getInflatedLayout final ViewGroup group new LinearLayout getContext return LayoutInflater from getContext inflate R layout activity aspect ratio image view test group true public void testSetAspectRatio final AspectRatioImageView av new AspectRatioImageView getContext av setAspectRatio TEST ASPECT RATIO assertEquals TEST ASPECT RATIO av getAspectRatio public void testSetAspectRatio xml final AspectRatioImageView av getHeightAdjustedView av setAspectRatio TEST ASPECT RATIO assertEquals TEST ASPECT RATIO av getAspectRatio public void testCalculateHeight final AspectRatioImageView av new AspectRatioImageView getContext assertEquals 400 av calculateHeight 600 1 5 assertEquals 600 av calculateHeight 300 0 5 assertEquals 300 av calculateHeight 300 1 0 assertEquals 0 av calculateHeight 0 1 3 assertEquals 0 av calculateHeight 100 0 sub pixel space for images mean aspect ratios cannot be respected assertEquals 1 av calculateHeight 10 15 0 public void testCalculateWidth final AspectRatioImageView av new AspectRatioImageView getContext assertEquals 300 av calculateWidth 200 1 5 assertEquals 201 av calculateWidth 401 0 5 assertEquals 200 av calculateWidth 200 1 0 assertEquals 0 av calculateWidth 0 1 3 assertEquals 0 av calculateWidth 100 0 sub pixel space for images mean aspect ratios cannot be respected assertEquals 1 av calculateWidth 10 0 05package com twitter sdk android core identity import android app Activity import android content Intent import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthException import com twitter sdk android core TwitterAuthToken import com twitter sdk android core TwitterSession public abstract class AuthHandler static final String EXTRA TOKEN tk static final String EXTRA TOKEN SECRET ts static final String EXTRA SCREEN NAME screen name static final String EXTRA USER ID user id static final String EXTRA AUTH ERROR auth error static final int RESULT CODE ERROR Activity RESULT FIRST USER protected final int requestCode private final TwitterAuthConfig config private final Callback TwitterSession callback AuthHandler TwitterAuthConfig authConfig Callback TwitterSession callback int requestCode config authConfig this callback callback this requestCode requestCode TwitterAuthConfig getAuthConfig return config Callback TwitterSession getCallback return callback public abstract boolean authorize Activity activity public boolean handleOnActivityResult int requestCode int resultCode Intent data if this requestCode requestCode return false final Callback TwitterSession callback getCallback if callback null if resultCode Activity RESULT OK final String token data getStringExtra EXTRA TOKEN final String tokenSecret data getStringExtra EXTRA TOKEN SECRET final String screenName data getStringExtra EXTRA SCREEN NAME final long userId data getLongExtra EXTRA USER ID 0L callback success new Result new TwitterSession new TwitterAuthToken token tokenSecret userId screenName null else if data null data hasExtra EXTRA AUTH ERROR callback failure TwitterAuthException data getSerializableExtra EXTRA AUTH ERROR else callback failure new TwitterAuthException Authorize failed return truepackage com twitter sdk android core identity import android app Activity import com twitter sdk android core TwitterCore import java util concurrent atomic AtomicReference import io fabric sdk android Fabric class AuthState final AtomicReference AuthHandler authHandlerRef new AtomicReference null public boolean beginAuthorize Activity activity AuthHandler authHandler boolean result false if isAuthorizeInProgress Fabric getLogger w TwitterCore TAG Authorize already in progress else if authHandler authorize activity result authHandlerRef compareAndSet null authHandler if result Fabric getLogger w TwitterCore TAG Failed to update authHandler authorize already in progress return result public void endAuthorize authHandlerRef set null public boolean isAuthorizeInProgress return authHandlerRef get null public AuthHandler getAuthHandler return authHandlerRef getpackage com twitter sdk android core import com google gson annotations SerializedName public abstract class AuthToken SerializedName created at protected final long createdAt public AuthToken createdAt System currentTimeMillis protected AuthToken long createdAt this createdAt createdAt public abstract boolean isExpiredpackage com twitter sdk android core import com google gson Gson import com google gson JsonDeserializationContext import com google gson JsonDeserializer import com google gson JsonElement import com google gson JsonObject import com google gson JsonParseException import com google gson JsonPrimitive import com google gson JsonSerializationContext import com google gson JsonSerializer import com twitter sdk android core internal oauth GuestAuthToken import com twitter sdk android core internal oauth OAuth2Token import java lang reflect Type import java util HashMap import java util Map public class AuthTokenAdapter implements JsonSerializer AuthToken JsonDeserializer AuthToken private static final String AUTH TYPE auth type private static final String AUTH TOKEN auth token static final Map String Class extends AuthToken authTypeRegistry new HashMap static authTypeRegistry put oauth1a TwitterAuthToken class authTypeRegistry put oauth2 OAuth2Token class authTypeRegistry put guest GuestAuthToken class private final Gson gson public AuthTokenAdapter this gson new Gson Override public JsonElement serialize AuthToken src Type typeOfSrc JsonSerializationContext context final JsonObject jsonObject new JsonObject jsonObject addProperty AUTH TYPE getAuthTypeString src getClass jsonObject add AUTH TOKEN gson toJsonTree src return jsonObject Override public AuthToken deserialize JsonElement json Type typeOfT JsonDeserializationContext context throws JsonParseException final JsonObject jsonObject json getAsJsonObject final JsonPrimitive jsonAuthType jsonObject getAsJsonPrimitive AUTH TYPE final String authType jsonAuthType getAsString final JsonElement jsonAuthToken jsonObject get AUTH TOKEN return gson fromJson jsonAuthToken authTypeRegistry get authType static String getAuthTypeString Class extends AuthToken authTokenClass for Map Entry String Class extends AuthToken entry authTypeRegistry entrySet if entry getValue equals authTokenClass return entry getKey returnpackage com zxy recovery test import android os Bundle import android support annotation Nullable import android support v7 app AppCompatActivity import android util Log import com zxy recovery core ActivityStackCompat import com zxy recovery core Recovery public class BaseActivity extends AppCompatActivity Override protected void onCreate Nullable Bundle savedInstanceState super onCreate savedInstanceState Override protected void onStart super onStart getWindow getDecorView post new Runnable Override public void run int count ActivityStackCompat getActivityCount Recovery getInstance getContext Log e zxy realCount count String baseActivity ActivityStackCompat getBaseActivityName Recovery getInstance getContext Log e zxy realBaseActivityName baseActivitypackage com kaku colorfulnews mvp ui fragment base import android os Bundle import android support annotation Nullable import android support v4 app Fragment import android view LayoutInflater import android view View import android view ViewGroup import com kaku colorfulnews App import com kaku colorfulnews di component DaggerFragmentComponent import com kaku colorfulnews di component FragmentComponent import com kaku colorfulnews di module FragmentModule import com kaku colorfulnews mvp presenter base BasePresenter import com kaku colorfulnews utils MyUtils import com squareup leakcanary RefWatcher import butterknife ButterKnife import rx Subscription public abstract class BaseFragment T extends BasePresenter extends Fragment public FragmentComponent getFragmentComponent return mFragmentComponent protected FragmentComponent mFragmentComponent protected T mPresenter private View mFragmentView public abstract void initInjector public abstract void initViews View view public abstract int getLayoutId protected Subscription mSubscription Override public void onCreate Nullable Bundle savedInstanceState super onCreate savedInstanceState mFragmentComponent DaggerFragmentComponent builder applicationComponent App getActivity getApplication getApplicationComponent fragmentModule new FragmentModule this build initInjector Nullable Override public View onCreateView LayoutInflater inflater Nullable ViewGroup container Nullable Bundle savedInstanceState if mFragmentView null mFragmentView inflater inflate getLayoutId container false ButterKnife bind this mFragmentView initViews mFragmentView return mFragmentView Override public void onDestroy super onDestroy RefWatcher refWatcher App getRefWatcher getActivity refWatcher watch this if mPresenter null mPresenter onDestroy MyUtils cancelSubscription mSubscriptionpackage com kaku colorfulnews mvp presenter base import android support annotation NonNull import com kaku colorfulnews mvp view base BaseView public interface BasePresenter void onResume void onCreate void attachView NonNull BaseView view void onDestroypackage com kaku colorfulnews mvp presenter base import android support annotation NonNull import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp view base BaseView import com kaku colorfulnews utils MyUtils import rx Subscription public class BasePresenterImpl T extends BaseView E implements BasePresenter RequestCallBack E protected T mView protected Subscription mSubscription Override public void onCreate Override public void onDestroy MyUtils cancelSubscription mSubscription Override public void attachView NonNull BaseView view TODO mView T view Override public void beforeRequest mView showProgress Override public void success E data mView hideProgress Override public void onError String errorMsg mView hideProgress mView showMsg errorMsgpackage com kaku colorfulnews mvp ui adapter base import android support annotation AnimRes import android support v7 widget RecyclerView import android support v7 widget StaggeredGridLayoutManager import android view LayoutInflater import android view View import android view ViewGroup import android view animation Animation import android view animation AnimationUtils import com kaku colorfulnews listener OnItemClickListener import java util List public class BaseRecyclerViewAdapter T extends RecyclerView Adapter RecyclerView ViewHolder public static final int TYPE ITEM 0 public static final int TYPE FOOTER 1 protected int mLastPosition 1 protected boolean mIsShowFooter protected List T mList protected OnItemClickListener mOnItemClickListener public BaseRecyclerViewAdapter List T list mList list public void setOnItemClickListener OnItemClickListener onItemClickListener mOnItemClickListener onItemClickListener Override public RecyclerView ViewHolder onCreateViewHolder ViewGroup parent int viewType return null Override public void onBindViewHolder RecyclerView ViewHolder holder int position ViewGroup LayoutParams layoutParams holder itemView getLayoutParams if getItemViewType position TYPE FOOTER if layoutParams null if layoutParams instanceof StaggeredGridLayoutManager LayoutParams StaggeredGridLayoutManager LayoutParams params StaggeredGridLayoutManager LayoutParams holder itemView getLayoutParams params setFullSpan true protected View getView ViewGroup parent int layoutId return LayoutInflater from parent getContext inflate layoutId parent false Override public int getItemCount if mList null return 0 int itemSize mList size if mIsShowFooter itemSize 1 return itemSize protected void setItemAppearAnimation RecyclerView ViewHolder holder int position AnimRes int type if position mLastPosition Animation animation AnimationUtils loadAnimation holder itemView getContext type holder itemView startAnimation animation mLastPosition position protected boolean isFooterPosition int position return getItemCount 1 position public void add int position T item mList add position item notifyItemInserted position public void addMore List T data int startPosition mList size mList addAll data notifyItemRangeInserted startPosition mList size public void delete int position mList remove position notifyItemRemoved position public List T getList return mList public void setList List T items mList items public void showFooter mIsShowFooter true notifyItemInserted getItemCount public void hideFooter mIsShowFooter false notifyItemRemoved getItemCount protected class FooterViewHolder extends RecyclerView ViewHolder public FooterViewHolder View itemView super itemViewpackage com twitter sdk android tweetui import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterException import com twitter sdk android core models Tweet import java util List abstract class BaseTimeline protected final TweetUi tweetUi BaseTimeline TweetUi tweetUi if tweetUi null throw new IllegalArgumentException TweetUi instance must not be null this tweetUi tweetUi scribeImpression abstract String getTimelineType private void scribeImpression tweetUi scribe ScribeConstants getSyndicatedSdkTimelineNamespace getTimelineType ScribeConstants getTfwClientTimelineNamespace getTimelineType static Long decrementMaxId Long maxId return maxId null null maxId 1 static class TweetsCallback extends Callback List Tweet final Callback TimelineResult Tweet cb TweetsCallback Callback TimelineResult Tweet cb this cb cb Override public void success Result List Tweet result final List Tweet tweets result data final TimelineResult Tweet timelineResult new TimelineResult new TimelineCursor tweets tweets if cb null cb success new Result timelineResult result response Override public void failure TwitterException exception if cb null cb failure exceptionpackage com twitter sdk android tweetui import com twitter sdk android core Callback import com twitter sdk android core models Tweet class BaseTweetAction protected Callback Tweet actionCallback BaseTweetAction Callback Tweet actionCallback this actionCallback actionCallback Callback Tweet getActionCallback return actionCallbackpackage com twitter sdk android tweetui import android annotation TargetApi import android content Context import android content Intent import android content res TypedArray import android graphics Color import android graphics drawable ColorDrawable import android net Uri import android os Build import android text TextUtils import android util AttributeSet import android view LayoutInflater import android view View import android widget FrameLayout import android widget ImageView import android widget LinearLayout import android widget RelativeLayout import android widget TextView import com squareup picasso Picasso import io fabric sdk android Fabric import com twitter sdk android core Callback import com twitter sdk android core IntentUtils import com twitter sdk android core Result import com twitter sdk android core TwitterException import com twitter sdk android core internal VineCardUtils import com twitter sdk android core internal scribe ScribeItem import com twitter sdk android core models Card import com twitter sdk android core models ImageValue import com twitter sdk android core models MediaEntity import com twitter sdk android core models Tweet import com twitter sdk android core models TweetBuilder import com twitter sdk android core internal UserUtils import com twitter sdk android core models VideoInfo import com twitter sdk android tweetui internal MediaBadgeView import com twitter sdk android tweetui internal SpanClickHandler import com twitter sdk android tweetui internal TweetMediaUtils import com twitter sdk android tweetui internal TweetMediaView import java text DateFormat import java util Date import java util Locale SuppressWarnings TooManyMethods TooManyFields public abstract class BaseTweetView extends LinearLayout private static final String TAG TweetUi LOGTAG private static final int DEFAULT STYLE R style tw TweetLightStyle private static final String EMPTY STRING static final double DEFAULT ASPECT RATIO 16 0 9 0 static final double SECONDARY TEXT COLOR LIGHT OPACITY 0 4 static final double SECONDARY TEXT COLOR DARK OPACITY 0 35 static final double MEDIA BG LIGHT OPACITY 0 08 static final double MEDIA BG DARK OPACITY 0 12 static final long INVALID ID 1L Dependency Provider final DependencyProvider dependencyProvider attributes private LinkClickListener linkClickListener TweetLinkClickListener tweetLinkClickListener TweetMediaClickListener tweetMediaClickListener private Uri permalinkUri Tweet tweet for testing int styleResId layout views RelativeLayout containerView ImageView avatarView TextView fullNameView TextView screenNameView ImageView verifiedCheckView FrameLayout mediaContainerView TweetMediaView mediaView TextView contentView TextView timestampView ImageView twitterLogoView TextView retweetedByView TweetActionBarView tweetActionBarView MediaBadgeView mediaBadgeView View bottomSeparator color values int containerBgColor int primaryTextColor int secondaryTextColor int actionColor int actionHighlightColor int mediaBgColor resource id s int photoErrorResId int birdLogoResId int retweetIconResId boolean tweetActionsEnabled styled drawables for images ColorDrawable mediaBg BaseTweetView Context context Tweet tweet this context tweet DEFAULT STYLE BaseTweetView Context context Tweet tweet int styleResId this context tweet styleResId new DependencyProvider BaseTweetView Context context Tweet tweet int styleResId DependencyProvider dependencyProvider super context null this dependencyProvider dependencyProvider initAttributes styleResId inflateView context findSubviews applyStyles if isTweetUiEnabled return initTweetActions setTweet tweet public BaseTweetView Context context AttributeSet attrs this context attrs new DependencyProvider BaseTweetView Context context AttributeSet attrs DependencyProvider dependencyProvider super context attrs this dependencyProvider dependencyProvider initXmlAttributes context attrs inflateView context public BaseTweetView Context context AttributeSet attrs int defStyle this context attrs defStyle new DependencyProvider BaseTweetView Context context AttributeSet attrs int defStyle DependencyProvider dependencyProvider super context attrs defStyle this dependencyProvider dependencyProvider initXmlAttributes context attrs inflateView context private void initAttributes int styleResId this styleResId styleResId final TypedArray a getContext getTheme obtainStyledAttributes styleResId R styleable tw TweetView try setStyleAttributes a finally a recycle private void initXmlAttributes Context context AttributeSet attrs if attrs null return parse the xml attributes by resolving resource references final TypedArray a context getTheme obtainStyledAttributes attrs R styleable tw TweetView 0 0 try setXmlDataAttributes a setStyleAttributes a finally a recycle private void setXmlDataAttributes TypedArray a final long tweetId Utils numberOrDefault a getString R styleable tw TweetView tw tweet id INVALID ID if tweetId 0 throw new IllegalArgumentException Invalid tw tweet id XML special case The screen name is not known yet A permalink can be constructed and followed Permalink should be updated once the loadTweet call receives the Tweet setPermalinkUri null tweetId this tweet new TweetBuilder setId tweetId build private void setStyleAttributes TypedArray a Styled via attributes containerBgColor a getColor R styleable tw TweetView tw container bg color getResources getColor R color tw tweet light container bg color primaryTextColor a getColor R styleable tw TweetView tw primary text color getResources getColor R color tw tweet light primary text color actionColor a getColor R styleable tw TweetView tw action color getResources getColor R color tw tweet action color actionHighlightColor a getColor R styleable tw TweetView tw action highlight color getResources getColor R color tw tweet action light highlight color tweetActionsEnabled a getBoolean R styleable tw TweetView tw tweet actions enabled false Calculated colors final boolean isLightBg ColorUtils isLightColor containerBgColor if isLightBg photoErrorResId R drawable tw ic tweet photo error light birdLogoResId R drawable tw ic logo blue retweetIconResId R drawable tw ic retweet light else photoErrorResId R drawable tw ic tweet photo error dark birdLogoResId R drawable tw ic logo white retweetIconResId R drawable tw ic retweet dark offset from white when background is light secondaryTextColor ColorUtils calculateOpacityTransform isLightBg SECONDARY TEXT COLOR LIGHT OPACITY SECONDARY TEXT COLOR DARK OPACITY isLightBg Color WHITE Color BLACK primaryTextColor offset from black when background is light mediaBgColor ColorUtils calculateOpacityTransform isLightBg MEDIA BG LIGHT OPACITY MEDIA BG DARK OPACITY isLightBg Color BLACK Color WHITE containerBgColor mediaBg new ColorDrawable mediaBgColor private void inflateView Context context final LayoutInflater localInflater LayoutInflater from context final View v localInflater inflate getLayout null false work around a bug in Android that makes it so that our inflated view doesn t pick up layout params correctly from its style final LayoutParams layoutParams new LayoutParams LayoutParams MATCH PARENT LayoutParams WRAP CONTENT v setLayoutParams layoutParams this addView v Override protected void onFinishInflate super onFinishInflate if isTweetUiEnabled return findSubviews applyStyles initTweetActions loadTweet private void initTweetActions setTweetActionsEnabled tweetActionsEnabled Tweet actions buttons setTweet and clear cache after successful actions tweetActionBarView setOnActionCallback new ResetTweetCallback this dependencyProvider getTweetUi getTweetRepository null boolean isTweetUiEnabled in edit mode halt view creation if isInEditMode return false try dependencyProvider getTweetUi catch IllegalStateException e Fabric getLogger e TAG e getMessage TweetUi kit instance not available halt view creation and disable setEnabled false return false return true void findSubviews Tweet attribution avatar name screen name etc containerView RelativeLayout findViewById R id tw tweet view avatarView ImageView findViewById R id tw tweet author avatar fullNameView TextView findViewById R id tw tweet author full name screenNameView TextView findViewById R id tw tweet author screen name verifiedCheckView ImageView findViewById R id tw tweet author verified mediaContainerView FrameLayout findViewById R id tw tweet media container mediaView TweetMediaView findViewById R id tw tweet media contentView TextView findViewById R id tw tweet text timestampView TextView findViewById R id tw tweet timestamp twitterLogoView ImageView findViewById R id tw twitter logo retweetedByView TextView findViewById R id tw tweet retweeted by tweetActionBarView TweetActionBarView findViewById R id tw tweet action bar mediaBadgeView MediaBadgeView findViewById R id tw tweet media badge bottomSeparator findViewById R id bottom separator abstract int getLayout abstract String getViewTypeName public long getTweetId if tweet null return INVALID ID return tweet id public void setTweet Tweet tweet this tweet tweet render public Tweet getTweet return tweet public void setOnActionCallback Callback Tweet actionCallback tweetActionBarView setOnActionCallback new ResetTweetCallback this dependencyProvider getTweetUi getTweetRepository actionCallback tweetActionBarView setTweet tweet public void setTweetMediaClickListener TweetMediaClickListener tweetMediaClickListener this tweetMediaClickListener tweetMediaClickListener public void setTweetLinkClickListener TweetLinkClickListener tweetLinkClickListener this tweetLinkClickListener tweetLinkClickListener void render final Tweet displayTweet TweetUtils getDisplayTweet tweet setProfilePhotoView displayTweet setName displayTweet setScreenName displayTweet setTimestamp displayTweet setTweetMedia displayTweet setText displayTweet setContentDescription displayTweet setTweetActions tweet showRetweetedBy tweet set permalink if tweet id and screen name are available if TweetUtils isTweetResolvable tweet setPermalinkUri tweet user screenName getTweetId else permalinkUri null set or update the permalink launcher with the current permalinkUri setPermalinkLauncher scribeImpression private void loadTweet final long tweetId getTweetId create a callback to setTweet on the view or log a failure to load the Tweet final Callback Tweet repoCb new Callback Tweet Override public void success Result Tweet result setTweet result data Override public void failure TwitterException exception Fabric getLogger d TAG String format Locale ENGLISH TweetUtils LOAD TWEET DEBUG tweetId dependencyProvider getTweetUi getTweetRepository loadTweet getTweetId repoCb Uri getPermalinkUri return permalinkUri void setPermalinkUri String screenName Long tweetId if tweetId 0 return permalinkUri TweetUtils getPermalink screenName tweetId private void setPermalinkLauncher final OnClickListener listener new PermalinkClickListener this setOnClickListener listener void showRetweetedBy Tweet tweet if tweet null tweet retweetedStatus null retweetedByView setVisibility GONE else retweetedByView setText getResources getString R string tw retweeted by format tweet user name retweetedByView setVisibility VISIBLE void launchPermalink final Intent intent new Intent Intent ACTION VIEW getPermalinkUri if IntentUtils safeStartActivity getContext intent Fabric getLogger e TweetUi LOGTAG Activity cannot be found to open permalink URI void scribeImpression if tweet null dependencyProvider getTweetScribeClient impression tweet getViewTypeName tweetActionsEnabled void scribePermalinkClick if tweet null dependencyProvider getTweetScribeClient click tweet getViewTypeName void scribeCardImpression Long tweetId Card card final ScribeItem scribeItem ScribeItem fromTweetCard tweetId card dependencyProvider getVideoScribeClient impression scribeItem void scribeMediaEntityImpression long tweetId MediaEntity mediaEntity final ScribeItem scribeItem ScribeItem fromMediaEntity tweetId mediaEntity dependencyProvider getVideoScribeClient impression scribeItem protected void applyStyles containerView setBackgroundColor containerBgColor avatarView setImageDrawable mediaBg mediaView setImageDrawable mediaBg fullNameView setTextColor primaryTextColor screenNameView setTextColor secondaryTextColor contentView setTextColor primaryTextColor timestampView setTextColor secondaryTextColor twitterLogoView setImageResource birdLogoResId retweetedByView setTextColor secondaryTextColor private void setName Tweet displayTweet if displayTweet null displayTweet user null fullNameView setText Utils stringOrEmpty displayTweet user name else fullNameView setText EMPTY STRING private void setScreenName Tweet displayTweet if displayTweet null displayTweet user null screenNameView setText UserUtils formatScreenName Utils stringOrEmpty displayTweet user screenName else screenNameView setText EMPTY STRING TargetApi Build VERSION CODES JELLY BEAN private void setText Tweet displayTweet if Build VERSION SDK INT Build VERSION CODES JELLY BEAN contentView setImportantForAccessibility IMPORTANT FOR ACCESSIBILITY NO final CharSequence tweetText Utils charSeqOrEmpty getLinkifiedText displayTweet SpanClickHandler enableClicksOnSpans contentView if TextUtils isEmpty tweetText contentView setText tweetText contentView setVisibility VISIBLE else contentView setText EMPTY STRING contentView setVisibility GONE private void setTimestamp Tweet displayTweet final String formattedTimestamp if displayTweet null displayTweet createdAt null TweetDateUtils isValidTimestamp displayTweet createdAt final Long createdAtTimestamp TweetDateUtils apiTimeToLong displayTweet createdAt final String timestamp TweetDateUtils getRelativeTimeString getResources System currentTimeMillis createdAtTimestamp formattedTimestamp TweetDateUtils dotPrefix timestamp else formattedTimestamp EMPTY STRING timestampView setText formattedTimestamp void setProfilePhotoView Tweet displayTweet final Picasso imageLoader dependencyProvider getImageLoader if imageLoader null return final String url if displayTweet null displayTweet user null url null else url UserUtils getProfileImageUrlHttps displayTweet user UserUtils AvatarSize REASONABLY SMALL imageLoader load url placeholder mediaBg into avatarView final void setTweetMedia Tweet displayTweet clearMediaView if displayTweet null mediaContainerView setVisibility ImageView GONE return if displayTweet card null VineCardUtils isVine displayTweet card final Card vineCard displayTweet card mediaContainerView setVisibility ImageView VISIBLE mediaView setOverlayDrawable getContext getResources getDrawable R drawable tw player overlay mediaBadgeView setCard vineCard setVineCardLauncher displayTweet id vineCard final ImageValue imageValue VineCardUtils getImageValue vineCard if imageValue null setMediaImage imageValue url getAspectRatio imageValue scribeCardImpression displayTweet id vineCard else if TweetMediaUtils hasSupportedVideo displayTweet final MediaEntity mediaEntity TweetMediaUtils getVideoEntity displayTweet set the image view to visible before setting via picasso placeholders into so measurements are done correctly fixes a bug where the placeholder was a small square in the corner of the view mediaContainerView setVisibility ImageView VISIBLE mediaView setOverlayDrawable getContext getResources getDrawable R drawable tw player overlay mediaBadgeView setMediaEntity mediaEntity setAltText mediaEntity altText setMediaLauncher displayTweet mediaEntity setMediaImage mediaEntity mediaUrlHttps getAspectRatio mediaEntity scribeMediaEntityImpression displayTweet id mediaEntity else if TweetMediaUtils hasPhoto displayTweet final MediaEntity mediaEntity TweetMediaUtils getPhotoEntity displayTweet set the image view to visible before setting via picasso placeholders into so measurements are done correctly fixes a bug where the placeholder was a small square in the corner of the view mediaContainerView setVisibility ImageView VISIBLE mediaBadgeView setMediaEntity mediaEntity setAltText mediaEntity altText setPhotoLauncher displayTweet mediaEntity setMediaImage mediaEntity mediaUrlHttps getAspectRatio mediaEntity else mediaContainerView setVisibility ImageView GONE void setAltText String description if TextUtils isEmpty description mediaView setContentDescription description private void setMediaLauncher final Tweet displayTweet final MediaEntity entity mediaView setOnClickListener new OnClickListener Override public void onClick View view if tweetMediaClickListener null tweetMediaClickListener onMediaEntityClick tweet entity else final VideoInfo Variant variant TweetMediaUtils getSupportedVariant entity if variant null final Intent intent new Intent getContext PlayerActivity class final boolean looping TweetMediaUtils isLooping entity final String url TweetMediaUtils getSupportedVariant entity url final PlayerActivity PlayerItem item new PlayerActivity PlayerItem url looping intent putExtra PlayerActivity PLAYER ITEM item IntentUtils safeStartActivity getContext intent private void setPhotoLauncher final Tweet displayTweet final MediaEntity entity mediaView setOnClickListener new OnClickListener Override public void onClick View view if tweetMediaClickListener null tweetMediaClickListener onMediaEntityClick tweet entity else final Intent intent new Intent getContext GalleryActivity class intent putExtra GalleryActivity MEDIA ENTITY entity intent putExtra GalleryActivity TWEET ID displayTweet id IntentUtils safeStartActivity getContext intent private void setVineCardLauncher final Long tweetId final Card vineCard mediaView setOnClickListener new OnClickListener Override public void onClick View view final Intent intent new Intent getContext PlayerActivity class final String playerStreamUrl VineCardUtils getStreamUrl vineCard final String callToActionUrl VineCardUtils getCallToActionUrl vineCard final String callToActionText getContext getResources getString R string tw cta text final PlayerActivity PlayerItem playerItem new PlayerActivity PlayerItem playerStreamUrl true callToActionText callToActionUrl intent putExtra PlayerActivity PLAYER ITEM playerItem final ScribeItem scribeItem ScribeItem fromTweetCard tweetId vineCard intent putExtra PlayerActivity SCRIBE ITEM scribeItem IntentUtils safeStartActivity getContext intent void setMediaImage String imagePath double aspectRatio final Picasso imageLoader dependencyProvider getImageLoader if imageLoader null return Picasso fit is a deferred call to resize w h which waits until the target has a non zero width or height and resizes the bitmap to the target s width and height For recycled targets which already have a width and stale height reset the size target to zero so Picasso fit works correctly mediaView resetSize mediaView setAspectRatio aspectRatio imageLoader load imagePath placeholder mediaBg fit centerCrop into mediaView new PicassoCallback protected double getAspectRatio MediaEntity photoEntity if photoEntity null photoEntity sizes null photoEntity sizes medium null photoEntity sizes medium w 0 photoEntity sizes medium h 0 return DEFAULT ASPECT RATIO return double photoEntity sizes medium w photoEntity sizes medium h protected double getAspectRatio ImageValue imageValue if imageValue null imageValue width 0 imageValue height 0 return DEFAULT ASPECT RATIO return double imageValue width imageValue height TargetApi Build VERSION CODES JELLY BEAN protected void clearMediaView Clear out the background behind any potential error images that we had if Build VERSION SDK INT Build VERSION CODES JELLY BEAN mediaView setBackground null else mediaView setBackgroundDrawable null mediaView setOverlayDrawable null mediaView setOnClickListener null mediaView setClickable false mediaView setContentDescription getResources getString R string tw tweet media class PicassoCallback implements com squareup picasso Callback Override public void onSuccess Override public void onError setErrorImage protected void setErrorImage async load the error image and set the proper background color behind it once it s loaded this does incur the necessity of clearing the background on each load of an image however final Picasso imageLoader dependencyProvider getImageLoader if imageLoader null return imageLoader load photoErrorResId into mediaView new com squareup picasso Callback Override public void onSuccess mediaView setBackgroundColor mediaBgColor Override public void onError protected CharSequence getLinkifiedText Tweet displayTweet final FormattedTweetText formattedText dependencyProvider getTweetUi getTweetRepository formatTweetText displayTweet if formattedText null return null final boolean stripPhotoEntity TweetMediaUtils hasPhoto displayTweet return TweetTextLinkifier linkifyUrls formattedText getLinkClickListener stripPhotoEntity actionColor actionHighlightColor void setContentDescription Tweet displayTweet if TweetUtils isTweetResolvable displayTweet setContentDescription getResources getString R string tw loading tweet return final FormattedTweetText formattedTweetText dependencyProvider getTweetUi getTweetRepository formatTweetText displayTweet String tweetText null if formattedTweetText null tweetText formattedTweetText text final long createdAt TweetDateUtils apiTimeToLong displayTweet createdAt String timestamp null if createdAt TweetDateUtils INVALID DATE timestamp DateFormat getDateInstance format new Date createdAt setContentDescription getResources getString R string tw tweet content description Utils stringOrEmpty displayTweet user name Utils stringOrEmpty tweetText Utils stringOrEmpty timestamp void setTweetActions Tweet tweet tweetActionBarView setTweet tweet public void setTweetActionsEnabled boolean enabled tweetActionsEnabled enabled if tweetActionsEnabled tweetActionBarView setVisibility View VISIBLE bottomSeparator setVisibility View GONE else tweetActionBarView setVisibility View GONE bottomSeparator setVisibility View VISIBLE protected LinkClickListener getLinkClickListener if linkClickListener null linkClickListener new LinkClickListener Override public void onUrlClicked String url if TextUtils isEmpty url return if tweetLinkClickListener null tweetLinkClickListener onLinkClick tweet url else final Intent intent new Intent Intent ACTION VIEW Uri parse url if IntentUtils safeStartActivity getContext intent Fabric getLogger e TweetUi LOGTAG Activity cannot be found to open URL Override public void onPhotoClicked MediaEntity mediaEntity Does nothing return linkClickListener class PermalinkClickListener implements OnClickListener Override public void onClick View v if getPermalinkUri null return scribePermalinkClick launchPermalink static class DependencyProvider TweetScribeClient tweetScribeClient VideoScribeClient videoScribeClient TweetUi getTweetUi return TweetUi getInstance TweetScribeClient getTweetScribeClient if tweetScribeClient null tweetScribeClient new TweetScribeClientImpl getTweetUi return tweetScribeClient VideoScribeClient getVideoScribeClient if videoScribeClient null videoScribeClient new VideoScribeClientImpl getTweetUi return videoScribeClient Picasso getImageLoader return TweetUi getInstance getImageLoaderpackage com kaku colorfulnews mvp view base public interface BaseView void showProgress void hideProgress void showMsg String messagepackage com twitter sdk android core models import java util Collections import java util Map public class BindingValues private final Map String Object bindingValues public BindingValues this Collections EMPTY MAP public BindingValues Map String Object bindingValues this bindingValues Collections unmodifiableMap bindingValues public boolean containsKey String key return bindingValues containsKey key public T T get String key try return T bindingValues get key catch ClassCastException ex return nullpackage com twitter sdk android core models import com google gson JsonDeserializationContext import com google gson JsonDeserializer import com google gson JsonElement import com google gson JsonObject import com google gson JsonParseException import com google gson JsonSerializationContext import com google gson JsonSerializer import java lang reflect Type import java util HashMap import java util Map import java util Set public class BindingValuesAdapter implements JsonSerializer BindingValues JsonDeserializer BindingValues private static final String STRING TYPE STRING private static final String IMAGE TYPE IMAGE private static final String USER TYPE USER private static final String BOOLEAN TYPE BOOLEAN private static final String TYPE MEMBER type private static final String TYPE VALUE MEMBER string value private static final String IMAGE VALUE MEMBER image value private static final String USER VALUE MEMBER user value private static final String BOOLEAN MEMBER boolean value Override public JsonElement serialize BindingValues src Type typeOfSrc JsonSerializationContext context return null Override public BindingValues deserialize JsonElement json Type typeOfT JsonDeserializationContext context throws JsonParseException if json isJsonObject return new BindingValues final JsonObject obj json getAsJsonObject final Set Map Entry String JsonElement members obj entrySet final Map String Object bindingHash new HashMap 32 for Map Entry String JsonElement member members final String key member getKey final JsonObject memberObj member getValue getAsJsonObject final Object value getValue memberObj context bindingHash put key value return new BindingValues bindingHash Object getValue JsonObject obj JsonDeserializationContext context final JsonElement typeObj obj get TYPE MEMBER if typeObj null typeObj isJsonPrimitive return null switch typeObj getAsString case STRING TYPE return context deserialize obj get TYPE VALUE MEMBER String class case IMAGE TYPE return context deserialize obj get IMAGE VALUE MEMBER ImageValue class case USER TYPE return context deserialize obj get USER VALUE MEMBER UserValue class case BOOLEAN TYPE return context deserialize obj get BOOLEAN MEMBER Boolean class default return nullpackage com twitter sdk android core import retrofit2 Call import retrofit2 Response public abstract class Callback T implements retrofit2 Callback T Override public final void onResponse Call T call Response T response if response isSuccessful success new Result response body response else failure new TwitterApiException response Override public final void onFailure Call T call Throwable t failure new TwitterException Request Failure t public abstract void success Result T result public abstract void failure TwitterException exceptionpackage com twitter sdk android tweetcomposer import android content Context import android net Uri import java io Serializable public class Card implements Serializable public static final String APP CARD TYPE promo image app final String cardType final String imageUri final String appName final String appIPadId final String appIPhoneId final String appGooglePlayId Card String cardType String imageUri String appName String appIPhoneId String appIPadId String appGooglePlayId this cardType cardType this imageUri imageUri this appName appName this appIPadId appIPadId this appIPhoneId appIPhoneId this appGooglePlayId appGooglePlayId public String getCardType return cardType static boolean isAppCard Card card return card null card getCardType null card getCardType equals APP CARD TYPE public static class AppCardBuilder private String appName private Uri imageUri private String appIPhoneId private String appIPadId private String appGooglePlayId public AppCardBuilder Context context appName getApplicationName context appGooglePlayId getPackageName context public AppCardBuilder imageUri Uri imageUri this imageUri imageUri return this public AppCardBuilder iPhoneId String appIPhoneId this appIPhoneId appIPhoneId return this public AppCardBuilder iPadId String appIPadId this appIPadId appIPadId return this public AppCardBuilder googlePlayId String appGooglePlayId this appGooglePlayId appGooglePlayId return this public Card build if imageUri null throw new IllegalStateException App Card requires a non null imageUri return new Card APP CARD TYPE imageUri toString appName appIPhoneId appIPadId appGooglePlayId private static String getApplicationName Context context return context getApplicationInfo loadLabel context getPackageManager toString private static String getPackageName Context context return context getPackageNamepackage com twitter sdk android tweetcomposer internal import com google gson annotations SerializedName public class CardCreate SerializedName card uri public final String cardUri SerializedName status public final String status public CardCreate String cardUri String status this cardUri cardUri this status statuspackage com twitter sdk android tweetcomposer internal import com google gson Gson import com google gson annotations SerializedName public class CardData private static Serializer serializer private CardData String card String image String site String description String cardData String callToAction String ctaKey String deviceId String appIPhoneId String appIPadId String appGooglePlayId String appCountry this card card this image image this site site this description description this cardData cardData this callToAction callToAction this ctaKey ctaKey this deviceId deviceId this appIPhoneId appIPhoneId this appIPadId appIPadId this appGooglePlayId appGooglePlayId this appCountry appCountry SerializedName twitter card public final String card SerializedName twitter image public final String image SerializedName twitter site public final String site SerializedName twitter description public final String description SerializedName twitter card data public final String cardData SerializedName twitter text cta public final String callToAction SerializedName twitter cta key public final String ctaKey SerializedName twitter text did value public final String deviceId SerializedName twitter app id iphone public final String appIPhoneId SerializedName twitter app id ipad public final String appIPadId SerializedName twitter app id googleplay public final String appGooglePlayId SerializedName twitter app country public final String appCountry Serializer getSerializer if serializer null serializer new Serializer return serializer Override public String toString Required bc the Cards API accepts form urlencoded requests with nested CardData JSON Retrofit converts Fields to strings without using registered Converters https github com square retrofit blob master retrofit src main java retrofit http Field java L28 return getSerializer serialize this static class Serializer private final Gson gson Serializer this gson new Gson String serialize CardData data return this gson toJson data public static class Builder private String card private String image private String site private String description private String cardData private String callToAction private String ctaKey private String deviceId private String appIPhoneId private String appIPadId private String appGooglePlayId private String appCountry public Builder card String card this card card return this public Builder image String image this image image return this public Builder site String site this site site return this public Builder description String description this description description return this public Builder cardData String data this cardData data return this public Builder callToAction String callToAction this callToAction callToAction return this public Builder ctaKey String ctaKey this ctaKey ctaKey return this public Builder deviceId String deviceId this deviceId deviceId return this public Builder appIPhoneId String appIPhoneId this appIPhoneId appIPhoneId return this public Builder appIPadId String appIPadId this appIPadId appIPadId return this public Builder appGooglePlayId String appGooglePlayId this appGooglePlayId appGooglePlayId return this public Builder appCountry String appCountry this appCountry appCountry return this public CardData build return new CardData card image site description cardData callToAction ctaKey deviceId appIPhoneId appIPadId appGooglePlayId appCountrypackage com twitter sdk android tweetcomposer import com twitter sdk android tweetcomposer internal CardData class CardDataFactory static final String APP CARD TYPE promo image app static final String APP CARD CTA KEY open private static final String MEDIA SCHEME media static CardData createAppCardData Card card Long mediaId String advertisingId return new CardData Builder card APP CARD TYPE image getCardMedia mediaId appIPhoneId card appIPhoneId appIPadId card appIPadId appGooglePlayId card appGooglePlayId cardData ctaKey APP CARD CTA KEY deviceId advertisingId build static String getCardMedia Long mediaId return MEDIA SCHEME Long toString mediaIdpackage com twitter sdk android tweetcomposer internal import retrofit2 Call import retrofit2 http Field import retrofit2 http FormUrlEncoded import retrofit2 http POST public interface CardService FormUrlEncoded POST https caps twitter com v2 cards create json Call CardCreate create Field card data CardData datapackage com twitter sdk android tweetcomposer import android content Context import android view View class CardViewFactory View createCard Context context Card card if card cardType equals Card APP CARD TYPE final AppCardView cardView new AppCardView context cardView setCard card return cardView return nullpackage com kaku colorfulnews event public class ChannelChangeEventpackage com kaku colorfulnews event public class ChannelItemMoveEvent private int fromPosition private int toPosition public int getFromPosition return fromPosition public int getToPosition return toPosition public ChannelItemMoveEvent int fromPosition int toPosition this fromPosition fromPosition this toPosition toPositionpackage com twitter sdk android tweetui internal import android graphics Color import android text TextPaint import android text style ClickableSpan public abstract class ClickableLinkSpan extends ClickableSpan implements HighlightedClickableSpan public final int linkColor private final int selectedColor private final boolean colored private final boolean underlined private boolean selected public ClickableLinkSpan int selectedColor this selectedColor 0 false false public ClickableLinkSpan int selectedColor int linkColor boolean underlined this selectedColor linkColor true underlined ClickableLinkSpan int selectedColor int linkColor boolean colored boolean underlined this selectedColor selectedColor this linkColor linkColor this colored colored this underlined underlined Override public void updateDrawState TextPaint ds if colored ds setColor linkColor else ds setColor ds linkColor if selected ds bgColor selectedColor else ds bgColor Color TRANSPARENT if underlined ds setUnderlineText true Override public void select boolean selected this selected selected Override public boolean isSelected return selectedpackage com kaku colorfulnews utils import android os SystemClock public class ClickUtil private static long mLastClickTime 0 private static final int SPACE TIME 500 public static boolean isFastDoubleClick long time SystemClock elapsedRealtime if time mLastClickTime SPACE TIME return true else mLastClickTime time return falsepackage com twitter sdk android core services import com twitter sdk android core internal TwitterCollection import retrofit2 Call import retrofit2 http GET import retrofit2 http Query public interface CollectionService GET 1 1 collections entries json tweet mode extended include cards true cards platform TwitterKit 13 Call TwitterCollection collection Query id String id Query count Integer count Query max position Long maxPosition Query min position Long minPositionpackage com twitter sdk android tweetui import com twitter sdk android core Callback import com twitter sdk android core TwitterCore import com twitter sdk android core internal TwitterCollection import com twitter sdk android core Result import com twitter sdk android core TwitterException import com twitter sdk android core models Tweet import com twitter sdk android core models TweetBuilder import com twitter sdk android core models User import java util ArrayList import java util Collections import java util HashMap import java util List import java util Map import retrofit2 Call public class CollectionTimeline extends BaseTimeline implements Timeline Tweet static final String COLLECTION PREFIX custom private static final String SCRIBE SECTION collection final String collectionIdentifier final Integer maxItemsPerRequest CollectionTimeline TweetUi tweetUi Long collectionId Integer maxItemsPerRequest super tweetUi prefix the collection id with the collection prefix if collectionId null this collectionIdentifier null else this collectionIdentifier COLLECTION PREFIX Long toString collectionId this maxItemsPerRequest maxItemsPerRequest Override public void next Long minPosition Callback TimelineResult Tweet cb createCollectionRequest minPosition null enqueue new CollectionCallback cb Override public void previous Long maxPosition Callback TimelineResult Tweet cb createCollectionRequest null maxPosition enqueue new CollectionCallback cb Override String getTimelineType return SCRIBE SECTION Call TwitterCollection createCollectionRequest final Long minPosition final Long maxPosition return TwitterCore getInstance getApiClient getCollectionService collection collectionIdentifier maxItemsPerRequest maxPosition minPosition class CollectionCallback extends Callback TwitterCollection final Callback TimelineResult Tweet cb CollectionCallback Callback TimelineResult Tweet cb this cb cb Override public void success Result TwitterCollection result final TimelineCursor timelineCursor getTimelineCursor result data final List Tweet tweets getOrderedTweets result data final TimelineResult Tweet timelineResult if timelineCursor null timelineResult new TimelineResult timelineCursor tweets else timelineResult new TimelineResult null Collections Tweet emptyList if cb null cb success new Result timelineResult result response Override public void failure TwitterException exception if cb null cb failure exception static List Tweet getOrderedTweets TwitterCollection collection if collection null collection contents null collection contents tweetMap null collection contents userMap null collection metadata null collection metadata timelineItems null collection metadata position null return Collections emptyList final List Tweet tweets new ArrayList final Map Long Tweet tweetMap new HashMap for Tweet trimmedTweet collection contents tweetMap values read user id from the trimmed Tweet final Long userId trimmedTweet user id lookup User in the collection response s UserMap final User user collection contents userMap get userId build the Tweet with the hydrated User final Tweet tweet new TweetBuilder copy trimmedTweet setUser user build tweetMap put tweet id tweet for TwitterCollection TimelineItem item collection metadata timelineItems final Tweet tweet tweetMap get item tweetItem id tweets add tweet return tweets static TimelineCursor getTimelineCursor TwitterCollection twitterCollection if twitterCollection null twitterCollection metadata null twitterCollection metadata position null return null final Long minPosition twitterCollection metadata position minPosition final Long maxPosition twitterCollection metadata position maxPosition return new TimelineCursor minPosition maxPosition public static class Builder private final TweetUi tweetUi private Long collectionId private Integer maxItemsPerRequest 30 public Builder this TweetUi getInstance public Builder TweetUi tweetUi if tweetUi null throw new IllegalArgumentException TweetUi instance must not be null this tweetUi tweetUi public Builder id Long collectionId this collectionId collectionId return this public Builder maxItemsPerRequest Integer maxItemsPerRequest this maxItemsPerRequest maxItemsPerRequest return this public CollectionTimeline build if collectionId null throw new IllegalStateException collection id must not be null return new CollectionTimeline tweetUi collectionId maxItemsPerRequestpackage com twitter sdk android tweetui import android graphics Color final class ColorUtils private ColorUtils static int calculateOpacityTransform final double opacity final int overlayColor final int primaryColor final int redPrimary Color red primaryColor final int redOverlay Color red overlayColor final int greenPrimary Color green primaryColor final int greenOverlay Color green overlayColor final int bluePrimary Color blue primaryColor final int blueOverlay Color blue overlayColor final int redCalculated int 1 opacity redPrimary opacity redOverlay final int greenCalculated int 1 opacity greenPrimary opacity greenOverlay final int blueCalculated int 1 opacity bluePrimary opacity blueOverlay return Color rgb redCalculated greenCalculated blueCalculated static boolean isLightColor final int color final int r Color red color final int g Color green color final int b Color blue color final double threshold 0 21 r 0 72 g 0 07 b return threshold 128package com twitter sdk android mopub import android graphics Color import org junit Test import org junit runner RunWith import org robolectric RobolectricGradleTestRunner import org robolectric annotation Config import static org junit Assert assertEquals import static org junit Assert assertFalse import static org junit Assert assertTrue RunWith RobolectricGradleTestRunner class Config constants BuildConfig class sdk 21 public class ColorUtilsTest Test public void testIsLightColor black assertFalse ColorUtils isLightColor Color BLACK Test public void testIsLightColor white assertTrue ColorUtils isLightColor Color WHITE Test public void testDefaultCtaButtonIsDarkColor assertFalse ColorUtils isLightColor R color tw ad cta default Test public void testCtaTextColorIsLightForDarkBgColor assertEquals Color WHITE ColorUtils calculateCtaTextColor R color tw ad cta default assertEquals Color WHITE ColorUtils calculateCtaTextColor Color BLACK assertEquals Color WHITE ColorUtils calculateCtaTextColor Color DKGRAY Test public void testCtaTextColorIsDarkForLightBgColor assertTrue Color WHITE ColorUtils calculateCtaTextColor Color WHITE assertTrue Color WHITE ColorUtils calculateCtaTextColor Color LTGRAY Test public void testCTAOnTapColorIsLighterForDarkBgColor final int darkColor Color BLACK final int originalRed Color red darkColor final int originalGreen Color green darkColor final int originalBlue Color blue darkColor final int lighterColor ColorUtils calculateCtaOnTapColor darkColor final int lighterRed Color red lighterColor final int lighterGreen Color green lighterColor final int lighterBlue Color blue lighterColor assertTrue lighterRed originalRed lighterGreen originalGreen lighterBlue originalBlue Test public void testCTAOnTapColorIsDarkerForLightBgColor final int lightColor Color WHITE final int originalRed Color red lightColor final int originalGreen Color green lightColor final int originalBlue Color blue lightColor final int darkerColor ColorUtils calculateCtaOnTapColor lightColor final int darkerRed Color red darkerColor final int darkerGreen Color green darkerColor final int darkerBlue Color blue darkerColor assertTrue originalRed darkerRed originalGreen darkerGreen originalBlue darkerBlue Test public void testContrastColorForDarkColor final int darkColor Color BLACK final int contrastingLightColor ColorUtils calculateContrastingColor darkColor assertTrue ColorUtils isLightColor contrastingLightColor Test public void testContrastColorForLightColor final int lightColor Color WHITE final int contrastingDarkColor ColorUtils calculateContrastingColor lightColor assertFalse ColorUtils isLightColor contrastingDarkColorpackage com twitter sdk android tweetui import android content Context import android util AttributeSet import com twitter sdk android core models MediaEntity import com twitter sdk android core models Tweet public class CompactTweetView extends BaseTweetView private static final String VIEW TYPE NAME compact private static final double SQUARE ASPECT RATIO 1 0 private static final double MAX LANDSCAPE ASPECT RATIO 3 0 private static final double MIN LANDSCAPE ASPECT RATIO 4 0 3 0 public CompactTweetView Context context Tweet tweet super context tweet public CompactTweetView Context context Tweet tweet int styleResId super context tweet styleResId CompactTweetView Context context Tweet tweet int styleResId DependencyProvider dependencyProvider super context tweet styleResId dependencyProvider public CompactTweetView Context context AttributeSet attrs super context attrs public CompactTweetView Context context AttributeSet attrs int defStyle super context attrs defStyle Override protected int getLayout return R layout tw tweet compact Override void render super render Redraw screen name on recycle screenNameView requestLayout Override protected double getAspectRatio MediaEntity photoEntity final double ratio super getAspectRatio photoEntity if ratio SQUARE ASPECT RATIO portrait tall photos should be cropped to be square aspect ratio return SQUARE ASPECT RATIO else if ratio MAX LANDSCAPE ASPECT RATIO the widest landscape photos allowed are 3 1 return MAX LANDSCAPE ASPECT RATIO else if ratio MIN LANDSCAPE ASPECT RATIO the tallest landscape photos allowed are 4 3 return MIN LANDSCAPE ASPECT RATIO else landscape photos between 3 1 to 4 3 present the original width to height ratio return ratio Override String getViewTypeName return VIEW TYPE NAMEpackage com twitter sdk android tweetcomposer import android app Activity import android content Context import android content Intent import android os Bundle import com twitter Regex import com twitter sdk android core TwitterAuthToken import com twitter sdk android core TwitterSession public class ComposerActivity extends Activity static final String EXTRA USER TOKEN EXTRA USER TOKEN static final String EXTRA CARD EXTRA CARD static final String EXTRA THEME EXTRA THEME static final String EXTRA HASHTAGS EXTRA HASHTAGS private static final int PLACEHOLDER ID 1 private static final String PLACEHOLDER SCREEN NAME Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState final Intent intent getIntent final TwitterAuthToken token intent getParcelableExtra EXTRA USER TOKEN final TwitterSession session new TwitterSession token PLACEHOLDER ID PLACEHOLDER SCREEN NAME final Card card Card intent getSerializableExtra EXTRA CARD final String hashtags intent getStringExtra EXTRA HASHTAGS final int themeResId intent getIntExtra EXTRA THEME R style ComposerLight setTheme themeResId setContentView R layout tw activity composer final ComposerView composerView ComposerView findViewById R id tw composer view new ComposerController composerView session card hashtags new FinisherImpl interface Finisher void finish FinisherImpl allows sub components to finish the host Activity class FinisherImpl implements Finisher Override public void finish ComposerActivity this finish public static class Builder private final Context context private TwitterAuthToken token private int themeResId R style ComposerLight private Card card private String hashtags public Builder Context context if context null throw new IllegalArgumentException Context must not be null this context context public Builder session TwitterSession session if session null throw new IllegalArgumentException TwitterSession must not be null final TwitterAuthToken token session getAuthToken if token null throw new IllegalArgumentException TwitterSession token must not be null session passed via the parcelable auth token this token token return this public Builder card Card card this card card return this public Builder hashtags String hashtags if hashtags null return this final StringBuilder sb new StringBuilder for String hashtag hashtags final boolean isValid Regex VALID HASHTAG matcher hashtag find if isValid sb append append hashtag this hashtags sb length 0 null sb toString return this public Builder darkTheme themeResId R style ComposerDark return this public Intent createIntent if token null throw new IllegalStateException Must set a TwitterSession final Intent intent new Intent context ComposerActivity class intent putExtra EXTRA USER TOKEN token intent putExtra EXTRA CARD card intent putExtra EXTRA THEME themeResId intent putExtra EXTRA HASHTAGS hashtags return intentpackage com twitter sdk android tweetcomposer import com twitter sdk android core TwitterApiClient import com twitter sdk android core TwitterSession import com twitter sdk android tweetcomposer internal CardService class ComposerApiClient extends TwitterApiClient ComposerApiClient TwitterSession session super session StatusesService getComposerStatusesService return getService StatusesService class CardService getCardService return getService CardService classpackage com twitter sdk android tweetcomposer import android content Intent import android text TextUtils import android view View import com twitter Validator import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterApiClient import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterException import com twitter sdk android core TwitterSession import com twitter sdk android core internal TwitterApiConstants import com twitter sdk android core models User class ComposerController final ComposerView composerView final TwitterSession session final Card card final ComposerActivity Finisher finisher final DependencyProvider dependencyProvider ComposerController final ComposerView composerView TwitterSession session Card card String hashtags ComposerActivity Finisher finisher this composerView session card hashtags finisher new DependencyProvider testing purposes ComposerController final ComposerView composerView TwitterSession session Card card String hashtags ComposerActivity Finisher finisher DependencyProvider dependencyProvider this composerView composerView this session session this card card this finisher finisher this dependencyProvider dependencyProvider composerView setCallbacks new ComposerCallbacksImpl composerView setTweetText hashtags setProfilePhoto setCardView card dependencyProvider getScribeClient impression card void setProfilePhoto dependencyProvider getApiClient session getAccountService verifyCredentials false true enqueue new Callback User Override public void success Result User result composerView setProfilePhotoView result data Override public void failure TwitterException exception show placeholder background color composerView setProfilePhotoView null void setCardView Card card if card null final CardViewFactory cardViewFactory dependencyProvider getCardViewFactory final View view cardViewFactory createCard composerView getContext card composerView setCardView view public interface ComposerCallbacks void onTextChanged String text void onTweetPost String text void onCloseClick class ComposerCallbacksImpl implements ComposerCallbacks Override public void onTextChanged String text final int charCount tweetTextLength text composerView setCharCount remainingCharCount charCount character count overflow red color if isTweetTextOverflow charCount composerView setCharCountTextStyle R style tw ComposerCharCountOverflow else composerView setCharCountTextStyle R style tw ComposerCharCount Tweet post button enable disable composerView postTweetEnabled isPostEnabled charCount Override public void onTweetPost String text dependencyProvider getScribeClient click card ScribeConstants SCRIBE TWEET ELEMENT final Intent intent new Intent composerView getContext TweetUploadService class intent putExtra TweetUploadService EXTRA USER TOKEN session getAuthToken intent putExtra TweetUploadService EXTRA TWEET TEXT text intent putExtra TweetUploadService EXTRA TWEET CARD card composerView getContext startService intent finisher finish Override public void onCloseClick dependencyProvider getScribeClient click card ScribeConstants SCRIBE CANCEL ELEMENT finisher finish int tweetTextLength String text if TextUtils isEmpty text return 0 return dependencyProvider getTweetValidator getTweetLength text static int remainingCharCount int charCount return TwitterApiConstants MAX TWEET CHARS charCount static boolean isPostEnabled int charCount return charCount 0 charCount TwitterApiConstants MAX TWEET CHARS static boolean isTweetTextOverflow int charCount return charCount TwitterApiConstants MAX TWEET CHARS static class DependencyProvider final CardViewFactory cardViewFactory new CardViewFactory final Validator tweetValidator new Validator TwitterApiClient getApiClient TwitterSession session return TwitterCore getInstance getApiClient session CardViewFactory getCardViewFactory return cardViewFactory Validator getTweetValidator return tweetValidator ComposerScribeClient getScribeClient return new ComposerScribeClientImpl TweetComposer getInstance getScribeClientpackage com twitter sdk android tweetcomposer interface ComposerScribeClient void impression Card card void click Card card String elementpackage com twitter sdk android tweetcomposer import com twitter sdk android core internal scribe EventNamespace import com twitter sdk android core internal scribe ScribeItem import java util ArrayList import java util List class ComposerScribeClientImpl implements ComposerScribeClient private final ScribeClient scribeClient ComposerScribeClientImpl ScribeClient scribeClient if scribeClient null throw new NullPointerException scribeClient must not be null this scribeClient scribeClient Override public void impression Card card final EventNamespace ns ScribeConstants ComposerEventBuilder setComponent ScribeConstants SCRIBE COMPONENT setElement ScribeConstants SCRIBE IMPRESSION ELEMENT setAction ScribeConstants SCRIBE IMPRESSION ACTION builder final List ScribeItem items new ArrayList items add ScribeConstants newCardScribeItem card scribeClient scribe ns items Override public void click Card card String element final EventNamespace ns ScribeConstants ComposerEventBuilder setComponent ScribeConstants SCRIBE COMPONENT setElement element setAction ScribeConstants SCRIBE CLICK ACTION builder final List ScribeItem items new ArrayList items add ScribeConstants newCardScribeItem card scribeClient scribe ns itemspackage com twitter sdk android tweetcomposer import android content Context import android graphics drawable ColorDrawable import android text Editable import android text TextWatcher import android util AttributeSet import android view KeyEvent import android view View import android view ViewGroup import android widget Button import android widget EditText import android widget ImageView import android widget LinearLayout import android widget TextView import com squareup picasso Picasso import com twitter sdk android core internal UserUtils import com twitter sdk android core internal util ObservableScrollView import com twitter sdk android core models User import java util Locale public class ComposerView extends LinearLayout ImageView avatarView ImageView closeView EditText tweetEditView TextView charCountView Button tweetButton ObservableScrollView scrollView View divider styled drawables for images ColorDrawable mediaBg callbacks ViewGroup cardView ComposerController ComposerCallbacks callbacks private Picasso imageLoader public ComposerView Context context this context null public ComposerView Context context AttributeSet attrs super context attrs init context public ComposerView Context context AttributeSet attrs int defStyle super context attrs defStyle init context private void init Context context imageLoader Picasso with getContext TODO make color vary depending on the style mediaBg new ColorDrawable context getResources getColor R color tw composer light gray inflate context R layout tw composer view this Override protected void onFinishInflate super onFinishInflate findSubviews closeView setOnClickListener new OnClickListener Override public void onClick View view callbacks onCloseClick tweetButton setOnClickListener new OnClickListener Override public void onClick View view callbacks onTweetPost getTweetText tweetEditView setOnEditorActionListener new TextView OnEditorActionListener Override public boolean onEditorAction TextView textView int i KeyEvent keyEvent callbacks onTweetPost getTweetText return true tweetEditView addTextChangedListener new TextWatcher Override public void beforeTextChanged CharSequence charSequence int i int i1 int i2 Override public void onTextChanged CharSequence charSequence int i int i1 int i2 Override public void afterTextChanged Editable editable callbacks onTextChanged getTweetText scrollView setScrollViewListener new ObservableScrollView ScrollViewListener Override public void onScrollChanged int scrollY if scrollY 0 divider setVisibility View VISIBLE else divider setVisibility View INVISIBLE void findSubviews avatarView ImageView findViewById R id tw author avatar closeView ImageView findViewById R id tw composer close tweetEditView EditText findViewById R id tw edit tweet charCountView TextView findViewById R id tw char count tweetButton Button findViewById R id tw post tweet scrollView ObservableScrollView findViewById R id tw composer scroll view divider findViewById R id tw composer profile divider cardView ViewGroup findViewById R id tw card view void setCallbacks ComposerController ComposerCallbacks callbacks this callbacks callbacks void setProfilePhotoView User user final String url UserUtils getProfileImageUrlHttps user UserUtils AvatarSize REASONABLY SMALL if imageLoader null Passing null url will not trigger any request but will set the placeholder bg imageLoader load url placeholder mediaBg into avatarView String getTweetText return tweetEditView getText toString void setTweetText String text tweetEditView setText text void setCharCount int remainingCount charCountView setText String format Locale getDefault d remainingCount void setCharCountTextStyle int textStyleResId charCountView setTextAppearance getContext textStyleResId void postTweetEnabled boolean enabled tweetButton setEnabled enabled void setCardView View card cardView addView card cardView setVisibility View VISIBLEpackage com twitter sdk android core models import com google gson annotations SerializedName import java util List public class Configuration SerializedName dm text character limit public final int dmTextCharacterLimit SerializedName non username paths public final List String nonUsernamePaths SerializedName photo size limit public final long photoSizeLimit SerializedName photo sizes public final MediaEntity Sizes photoSizes SerializedName short url length https public final int shortUrlLengthHttps public Configuration int dmTextCharacterLimit List String nonUsernamePaths long photoSizeLimit MediaEntity Sizes photoSizes int shortUrlLengthHttps this dmTextCharacterLimit dmTextCharacterLimit this nonUsernamePaths nonUsernamePaths this photoSizeLimit photoSizeLimit this photoSizes photoSizes this shortUrlLengthHttps shortUrlLengthHttpspackage com twitter sdk android core services import com twitter sdk android core models Configuration import retrofit2 Call import retrofit2 http GET public interface ConfigurationService GET 1 1 help configuration json Call Configuration configurationpackage com kaku colorfulnews common public class Constants public static final String DB NAME NewsChannelTable public static final String SHARES COLOURFUL NEWS shares colourful news public static final String NIGHT THEME MODE night theme mode public static final String INIT DB init db public static final String NEWS ID news id public static final String NEWS TYPE news type public static final String CHANNEL POSITION channel position public static final String NEWS POST ID news post id public static final String NEWS IMG RES news img res public static final String TRANSITION ANIMATION NEWS PHOTOS transition animation news photos public static final String SHOW NEWS PHOTO show news photo public static final int NEWS CHANNEL MINE 0 public static final int NEWS CHANNEL MORE 1 public static final String PHOTO DETAIL photo detail public static final String PHOTO DETAIL IMGSRC photo detail imgsrc public static final String NEWS LINK news link public static final String NEWS TITLE news titlepackage com kaku colorfulnews di scope import java lang annotation Documented import java lang annotation Retention import java lang annotation RetentionPolicy import javax inject Qualifier Qualifier Documented Retention RetentionPolicy RUNTIME public interface ContextLife String value default Applicationpackage com twitter sdk android core models import com google gson annotations SerializedName import java util ArrayList import java util List public class Coordinates public static final int INDEX LONGITUDE 0 public static final int INDEX LATITUDE 1 SerializedName coordinates public final List Double coordinates SerializedName type public final String type public Coordinates Double longitude Double latitude String type final List Double coords new ArrayList 2 coords add INDEX LONGITUDE longitude coords add INDEX LATITUDE latitude this coordinates coords this type type public Double getLongitude return coordinates get INDEX LONGITUDE public Double getLatitude return coordinates get INDEX LATITUDEpackage com zxy recovery core public class CrashData public long crashTime public int crashCount public boolean shouldRestart private CrashData public static CrashData newInstance return new CrashData public CrashData time long time this crashTime time return this public CrashData count int count this crashCount count return this public CrashData restart boolean restart this shouldRestart restart return this Override public String toString return CrashData crashCount crashCount crashTime crashTime shouldRestart shouldRestartpackage com colorfulnews import de greenrobot daogenerator DaoGenerator import de greenrobot daogenerator Entity import de greenrobot daogenerator Schema public class DaoAutoGenerator public static void main String args throws Exception int version 1 String defaultJavaPackage com kaku colorfulnews greendao Entity Schema Schema schema new Schema version defaultJavaPackage Bean DAO Schema schema new Schema 1 me itangqi bean schema setDefaultJavaPackageDao me itangqi dao Schema flags entity activie keep sections schema2 enableActiveEntitiesByDefault schema2 enableKeepSectionsByDefault Schema Entities createTable schema DAOGenerator generateAll java gen build gradle new DaoGenerator generateAll schema app src main java gen private static void createTable Schema schema Note Entity entity schema addEntity NewsChannelTable note setTableName NODE greenDAO Java For example a property called creationDate will become a database column CREATION DATE note addIdProperty entity addStringProperty newsChannelName notNull primaryKey index entity addStringProperty newsChannelId notNull entity addStringProperty newsChannelType notNull entity addBooleanProperty newsChannelSelect notNull entity addIntProperty newsChannelIndex notNull entity addBooleanProperty newsChannelFixedpackage com example public class DaoGeneratorpackage com kaku colorfulnews greendao import android content Context import android database sqlite SQLiteDatabase import android database sqlite SQLiteDatabase CursorFactory import android database sqlite SQLiteOpenHelper import android util Log import de greenrobot dao AbstractDaoMaster import de greenrobot dao identityscope IdentityScopeType import com kaku colorfulnews greendao NewsChannelTableDao THIS CODE IS GENERATED BY greenDAO DO NOT EDIT public class DaoMaster extends AbstractDaoMaster public static final int SCHEMA VERSION 1 public static void createAllTables SQLiteDatabase db boolean ifNotExists NewsChannelTableDao createTable db ifNotExists public static void dropAllTables SQLiteDatabase db boolean ifExists NewsChannelTableDao dropTable db ifExists public static abstract class OpenHelper extends SQLiteOpenHelper public OpenHelper Context context String name CursorFactory factory super context name factory SCHEMA VERSION Override public void onCreate SQLiteDatabase db Log i greenDAO Creating tables for schema version SCHEMA VERSION createAllTables db false public static class DevOpenHelper extends OpenHelper public DevOpenHelper Context context String name CursorFactory factory super context name factory Override public void onUpgrade SQLiteDatabase db int oldVersion int newVersion Log i greenDAO Upgrading schema from version oldVersion to newVersion by dropping all tables dropAllTables db true onCreate db public DaoMaster SQLiteDatabase db super db SCHEMA VERSION registerDaoClass NewsChannelTableDao class public DaoSession newSession return new DaoSession db IdentityScopeType Session daoConfigMap public DaoSession newSession IdentityScopeType type return new DaoSession db type daoConfigMappackage com kaku colorfulnews greendao import android database sqlite SQLiteDatabase import java util Map import de greenrobot dao AbstractDao import de greenrobot dao AbstractDaoSession import de greenrobot dao identityscope IdentityScopeType import de greenrobot dao internal DaoConfig import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews greendao NewsChannelTableDao THIS CODE IS GENERATED BY greenDAO DO NOT EDIT public class DaoSession extends AbstractDaoSession private final DaoConfig newsChannelTableDaoConfig private final NewsChannelTableDao newsChannelTableDao public DaoSession SQLiteDatabase db IdentityScopeType type Map Class extends AbstractDao DaoConfig daoConfigMap super db newsChannelTableDaoConfig daoConfigMap get NewsChannelTableDao class clone newsChannelTableDaoConfig initIdentityScope type newsChannelTableDao new NewsChannelTableDao newsChannelTableDaoConfig this registerDao NewsChannelTable class newsChannelTableDao public void clear newsChannelTableDaoConfig getIdentityScope clear public NewsChannelTableDao getNewsChannelTableDao return newsChannelTableDaopackage com zxy recovery tools import com zxy recovery exception RecoveryException public class DefaultHandlerUtil private DefaultHandlerUtil throw new RecoveryException Stub private static Thread UncaughtExceptionHandler getDefaultUncaughtExceptionHandler Object object Reflect on com android internal os RuntimeInit UncaughtHandler constructor newInstance return object null null Thread UncaughtExceptionHandler object public static boolean isSystemDefaultUncaughtExceptionHandler Thread UncaughtExceptionHandler handler Thread UncaughtExceptionHandler defHandler getDefaultUncaughtExceptionHandler return defHandler null defHandler getClass isInstance handlerpackage com twitter sdk android core internal scribe import android os Build import android text TextUtils import com google gson FieldNamingPolicy import com google gson Gson import com google gson GsonBuilder import com twitter sdk android core BuildConfig import com twitter sdk android core GuestSession import com twitter sdk android core GuestSessionProvider import com twitter sdk android core Session import com twitter sdk android core SessionManager import com twitter sdk android core TwitterAuthToken import com twitter sdk android core TwitterCore import java util Collections import java util List import java util concurrent ScheduledExecutorService import io fabric sdk android Kit import io fabric sdk android services common ExecutorUtils import io fabric sdk android services common IdManager import io fabric sdk android services settings Settings import io fabric sdk android services settings SettingsData public class DefaultScribeClient extends ScribeClient private static final String SCRIBE URL https syndication twitter com private static final String SCRIBE PATH VERSION i private static final String SCRIBE PATH TYPE sdk private static final String DEBUG BUILD debug private static volatile ScheduledExecutorService executor private final Kit kit private final SessionManager extends Session TwitterAuthToken sessionManager private final String advertisingId public DefaultScribeClient Kit kit String kitName SessionManager extends Session TwitterAuthToken sessionManager GuestSessionProvider guestSessionProvider IdManager idManager this kit kitName getGson sessionManager guestSessionProvider idManager DefaultScribeClient Kit kit String kitName Gson gson SessionManager extends Session TwitterAuthToken sessionManager GuestSessionProvider guestSessionProvider IdManager idManager super kit getExecutor getScribeConfig Settings getInstance awaitSettingsData getUserAgent kitName kit new ScribeEvent Transform gson TwitterCore getInstance getAuthConfig sessionManager guestSessionProvider TwitterCore getInstance getSSLSocketFactory idManager this sessionManager sessionManager this kit kit this advertisingId idManager getAdvertisingId public void scribe EventNamespace namespaces for EventNamespace ns namespaces scribe ns Collections ScribeItem emptyList public void scribe EventNamespace namespace List ScribeItem items final String language getLanguageFromKit final long timestamp System currentTimeMillis scribe ScribeEventFactory newScribeEvent namespace timestamp language advertisingId items public void scribe ScribeEvent event super scribe event getScribeSessionId getActiveSession public void scribe EventNamespace namespace String eventInfo final String language getLanguageFromKit final long timestamp System currentTimeMillis scribe ScribeEventFactory newScribeEvent namespace eventInfo timestamp language advertisingId Collections ScribeItem emptyList visible for tests Session getActiveSession return sessionManager getActiveSession visible for tests long getScribeSessionId Session activeSession final long scribeSessionId if activeSession null scribeSessionId activeSession getId else It s possible that we re attempting to load a tweet before we have a valid session Store the scribe event locally with the logged out user id so that we can send it up at a later time with the logged out session scribeSessionId GuestSession LOGGED OUT USER ID return scribeSessionId private String getLanguageFromKit final String language if kit getContext null language kit getContext getResources getConfiguration locale getLanguage else language return language private static Gson getGson return new GsonBuilder setFieldNamingPolicy FieldNamingPolicy LOWER CASE WITH UNDERSCORES create private static ScheduledExecutorService getExecutor if executor null synchronized DefaultScribeClient class if executor null executor ExecutorUtils buildSingleThreadScheduledExecutorService scribe return executor static ScribeConfig getScribeConfig SettingsData settingsData String userAgent Get scribe configuration using analytics settings which is used by crashlytics for configuring Answers This is temporary until we have can get our scribe settings from the backend If analytics settings are not available fallback to defaults final int maxFilesToKeep final int sendIntervalSeconds if settingsData null settingsData analyticsSettingsData null maxFilesToKeep settingsData analyticsSettingsData maxPendingSendFileCount sendIntervalSeconds settingsData analyticsSettingsData flushIntervalSeconds else maxFilesToKeep ScribeConfig DEFAULT MAX FILES TO KEEP sendIntervalSeconds ScribeConfig DEFAULT SEND INTERVAL SECONDS final String scribeUrl getScribeUrl SCRIBE URL BuildConfig SCRIBE ENDPOINT OVERRIDE return new ScribeConfig isEnabled scribeUrl SCRIBE PATH VERSION SCRIBE PATH TYPE BuildConfig SCRIBE SEQUENCE userAgent maxFilesToKeep sendIntervalSeconds private static boolean isEnabled return BuildConfig BUILD TYPE equals DEBUG BUILD static String getUserAgent String kitName Kit kit return new StringBuilder append Fabric append kit getFabric getVersion append Android append Build VERSION SDK INT append append kitName append append kit getVersion toString visible for tests static String getScribeUrl String defaultUrl String overrideUrl if TextUtils isEmpty overrideUrl return overrideUrl else return defaultUrlpackage com twitter sdk android core internal scribe import android os Build import io fabric sdk android Fabric import io fabric sdk android FabricAndroidTestCase import io fabric sdk android FabricTestUtils import io fabric sdk android Kit import io fabric sdk android services common IdManager import io fabric sdk android services settings AnalyticsSettingsData import io fabric sdk android services settings Settings import io fabric sdk android services settings SettingsData import io fabric sdk android services settings TestSettingsController import com twitter sdk android core BuildConfig import com twitter sdk android core GuestSessionProvider import com twitter sdk android core Session import com twitter sdk android core SessionManager import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterSession import java util Locale import static org mockito Mockito mock import static org mockito Mockito when public class DefaultScribeClientTest extends FabricAndroidTestCase private static final int TEST SEND INTERVAL SECONDS 6000000 60 6 million minutes private static final int TEST MAX FILES TO KEEP 100000 private static final String TEST USER AGENT user agent private static final String TEST DEFAULT SCRIBE URL https syndication twitter com private static final String TEST OVERRIDE SCRIBE URL http api twitter com private static final String TEST SCRIBE USER AGENT FORMAT Fabric s Android s ExampleKit s private static final String TEST SCRIBE KIT NAME ExampleKit private static final String TEST KIT VERSION 1000 private static final String ANY KIT IDENTIFIER private static final String REQUIRED SCRIBE URL COMPONENT https syndication twitter com private static final long REQUIRED LOGGED OUT USER ID 0L private static final long TEST ACTIVE SESSION ID 1L private static final String DEBUG BUILD TYPE debug private ExampleKit testKit private DefaultScribeClient scribeClient private SessionManager TwitterSession mockTwitterSessionManager private GuestSessionProvider mockGuestSessionProvider Override public void setUp throws Exception super setUp FabricTestUtils resetFabric Settings getInstance setSettingsController new TestSettingsController Fabric with getContext new TwitterCore new TwitterAuthConfig new ExampleKit testKit Fabric getKit ExampleKit class mockTwitterSessionManager mock SessionManager class mockGuestSessionProvider mock GuestSessionProvider class scribeClient new DefaultScribeClient testKit TEST SCRIBE KIT NAME mockTwitterSessionManager mockGuestSessionProvider mock IdManager class Override protected void tearDown throws Exception super tearDown FabricTestUtils resetFabric private class ExampleKit extends Kit Override public String getIdentifier return ANY KIT IDENTIFIER Override public String getVersion return TEST KIT VERSION Override protected Object doInBackground return null public void testGetScribeConfig settingsDataNull final ScribeConfig scribeConfig DefaultScribeClient getScribeConfig null TEST USER AGENT assertScribeConfig TEST USER AGENT ScribeConfig DEFAULT MAX FILES TO KEEP ScribeConfig DEFAULT SEND INTERVAL SECONDS scribeConfig public void testGetScribeConfig settingsDataAnalyticsSettingsDataNull final SettingsData settingsData new SettingsData 0L null null null null null null 0 0 final ScribeConfig scribeConfig DefaultScribeClient getScribeConfig settingsData TEST USER AGENT assertScribeConfig TEST USER AGENT ScribeConfig DEFAULT MAX FILES TO KEEP ScribeConfig DEFAULT SEND INTERVAL SECONDS scribeConfig public void testGetScribeConfig settingsDataValid final AnalyticsSettingsData analyticsSettingsData new AnalyticsSettingsData null TEST SEND INTERVAL SECONDS 0 0 TEST MAX FILES TO KEEP true final SettingsData settingsData new SettingsData 0L null null null null analyticsSettingsData null 0 0 final ScribeConfig scribeConfig DefaultScribeClient getScribeConfig settingsData TEST USER AGENT assertScribeConfig TEST USER AGENT TEST MAX FILES TO KEEP TEST SEND INTERVAL SECONDS scribeConfig public void testGetScribeUrl nullOverride final String scribeUrl DefaultScribeClient getScribeUrl TEST DEFAULT SCRIBE URL null assertEquals TEST DEFAULT SCRIBE URL scribeUrl public void testGetScribeUrl emptyOverride final String scribeUrl DefaultScribeClient getScribeUrl TEST DEFAULT SCRIBE URL assertEquals TEST DEFAULT SCRIBE URL scribeUrl public void testGetScribeUrl override final String scribeUrl DefaultScribeClient getScribeUrl TEST DEFAULT SCRIBE URL TEST OVERRIDE SCRIBE URL assertEquals TEST OVERRIDE SCRIBE URL scribeUrl private void assertScribeConfig String expectedUserAgent int expectedMaxFilesToKeep int expectedSendIntervalSeconds ScribeConfig scribeConfig assertEquals BuildConfig BUILD TYPE equals DEBUG BUILD TYPE scribeConfig isEnabled assertEquals REQUIRED SCRIBE URL COMPONENT scribeConfig baseUrl assertEquals BuildConfig SCRIBE SEQUENCE scribeConfig sequence assertEquals expectedUserAgent scribeConfig userAgent assertEquals expectedMaxFilesToKeep scribeConfig maxFilesToKeep assertEquals expectedSendIntervalSeconds scribeConfig sendIntervalSeconds public void testGetScribeUserAgent Fabric with getContext new ExampleKit final Kit kit Fabric getKit ExampleKit class final String userAgent String format Locale ENGLISH TEST SCRIBE USER AGENT FORMAT kit getFabric getVersion Build VERSION SDK INT kit getVersion assertEquals userAgent DefaultScribeClient getUserAgent TEST SCRIBE KIT NAME kit public void testGetActiveSession activeSessionDoesNotExist assertNull scribeClient getActiveSession public void testGetActiveSession activeSessionFirstManager final TwitterSession mockSession mock TwitterSession class when mockTwitterSessionManager getActiveSession thenReturn mockSession assertSame mockSession scribeClient getActiveSession public void testGetScribeSessionId nullSession assertEquals REQUIRED LOGGED OUT USER ID scribeClient getScribeSessionId null public void testGetScribeSessionId activeSession final DefaultScribeClient scribeClient new DefaultScribeClient testKit TEST SCRIBE KIT NAME mockTwitterSessionManager mockGuestSessionProvider mock IdManager class final Session mockSession mock Session class when mockSession getId thenReturn TEST ACTIVE SESSION ID assertEquals TEST ACTIVE SESSION ID scribeClient getScribeSessionId mockSessionpackage com kaku colorfulnews utils import com kaku colorfulnews App public class DimenUtil public static float dp2px float dp final float scale App getAppContext getResources getDisplayMetrics density return dp scale 0 5f public static float sp2px float sp final float scale App getAppContext getResources getDisplayMetrics scaledDensity return sp scale public static int getScreenSize return App getAppContext getResources getDisplayMetrics widthPixelspackage com twitter sdk android core internal scribe import android content Context import io fabric sdk android services events EnabledEventsStrategy import io fabric sdk android services events FilesSender import java util concurrent ScheduledExecutorService class EnabledScribeStrategy extends EnabledEventsStrategy ScribeEvent private final FilesSender filesSender public EnabledScribeStrategy Context context ScheduledExecutorService executorService ScribeFilesManager filesManager ScribeConfig config ScribeFilesSender filesSender super context executorService filesManager this filesSender filesSender configureRollover config sendIntervalSeconds Override public FilesSender getFilesSender return filesSenderpackage com twitter sdk android core models import com google gson annotations SerializedName import java io Serializable import java util ArrayList import java util Collections import java util List class Entity implements Serializable private static final int START INDEX 0 private static final int END INDEX 1 SerializedName indices public final List Integer indices public Entity int start int end final List Integer temp new ArrayList 2 temp add START INDEX start temp add END INDEX end indices Collections unmodifiableList temp public int getStart return indices get START INDEX public int getEnd return indices get END INDEXpackage com twitter sdk android core internal scribe import com google gson annotations SerializedName public class EventNamespace SerializedName client public final String client SerializedName page public final String page SerializedName section public final String section SerializedName component public final String component SerializedName element public final String element SerializedName action public final String action public EventNamespace String client String page String section String component String element String action this client client this page page this section section this component component this element element this action action Override public String toString return new StringBuilder append client append client append page append page append section append section append component append component append element append element append action append action toString Override public boolean equals Object o if this o return true if o null getClass o getClass return false final EventNamespace that EventNamespace o if action null action equals that action that action null return false if client null client equals that client that client null return false if component null component equals that component that component null return false if element null element equals that element that element null return false if page null page equals that page that page null return false if section null section equals that section that section null return false return true Override public int hashCode int result client null client hashCode 0 result 31 result page null page hashCode 0 result 31 result section null section hashCode 0 result 31 result component null component hashCode 0 result 31 result element null element hashCode 0 result 31 result action null action hashCode 0 return result public static class Builder private String client private String page private String section private String component private String element private String action public Builder setClient String client this client client return this public Builder setPage String page this page page return this public Builder setSection String section this section section return this public Builder setComponent String component this component component return this public Builder setElement String element this element element return this public Builder setAction String action this action action return this public EventNamespace builder return new EventNamespace client page section component element actionpackage com zxy recovery test import android content Context import android support test InstrumentationRegistry import android support test runner AndroidJUnit4 import org junit Test import org junit runner RunWith import static org junit Assert RunWith AndroidJUnit4 class public class ExampleInstrumentedTest Test public void useAppContext throws Exception Context of the app under test Context appContext InstrumentationRegistry getTargetContext assertEquals com zxy recovery test appContext getPackageNamepackage com twitter sdk android core services import com twitter sdk android core models Tweet import java util List import retrofit2 Call import retrofit2 http Field import retrofit2 http FormUrlEncoded import retrofit2 http GET import retrofit2 http POST import retrofit2 http Query public interface FavoriteService GET 1 1 favorites list json tweet mode extended include cards true cards platform TwitterKit 13 Call List Tweet list Query user id Long userId Query screen name String screenName Query count Integer count Query since id String sinceId Query max id String maxId Query include entities Boolean includeEntities FormUrlEncoded POST 1 1 favorites destroy json tweet mode extended include cards true cards platform TwitterKit 13 Call Tweet destroy Field id Long id Field include entities Boolean includeEntities FormUrlEncoded POST 1 1 favorites create json tweet mode extended include cards true cards platform TwitterKit 13 Call Tweet create Field id Long id Field include entities Boolean includeEntitiespackage com twitter sdk android tweetcomposer import android annotation TargetApi import android content ContentResolver import android content Context import android database Cursor import android net Uri import android os Build import android provider DocumentsContract import android provider MediaStore import android text TextUtils import android webkit MimeTypeMap import java io File class FileUtils private static final String MEDIA SCHEME com android providers media documents TargetApi Build VERSION CODES KITKAT static String getPath final Context context final Uri uri final boolean isKitKat Build VERSION SDK INT Build VERSION CODES KITKAT if isKitKat isMediaDocumentAuthority uri final String documentId DocumentsContract getDocumentId uri e g image 1234 final String parts documentId split final String type parts 0 Uri contentUri if image equals type contentUri MediaStore Images Media EXTERNAL CONTENT URI else reject video or audio documents return null query content resolver for MediaStore id column final String selection id final String args new String parts 1 return resolveFilePath context contentUri selection args else if isContentScheme uri return resolveFilePath context uri null null else if isFileScheme uri return uri getPath return null public static boolean isMediaDocumentAuthority Uri uri return MEDIA SCHEME equalsIgnoreCase uri getAuthority public static boolean isContentScheme Uri uri return ContentResolver SCHEME CONTENT equalsIgnoreCase uri getScheme public static boolean isFileScheme Uri uri return ContentResolver SCHEME FILE equalsIgnoreCase uri getScheme static String resolveFilePath Context context Uri uri String selection String args Cursor cursor null final String projection MediaStore Images Media DATA try cursor context getContentResolver query uri projection selection args null if cursor null cursor moveToFirst final int i cursor getColumnIndexOrThrow MediaStore Images Media DATA return cursor getString i finally if cursor null cursor close return null static String getMimeType File file final String ext getExtension file getName if TextUtils isEmpty ext return MimeTypeMap getSingleton getMimeTypeFromExtension ext default from https dev twitter com rest public uploading media return application octet stream static String getExtension String filename if filename null return null final int i filename lastIndexOf return i 0 filename substring i 1package com twitter sdk android tweetui import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core models Tweet import java util ArrayList import java util Collections import java util List public class FixedTweetTimeline extends BaseTimeline implements Timeline Tweet private static final String SCRIBE SECTION fixed List Tweet tweets FixedTweetTimeline TweetUi tweetUi List Tweet tweets super tweetUi this tweets tweets null new ArrayList Tweet tweets Override public void next Long minPosition Callback TimelineResult Tweet cb always return the same fixed set of latest Tweets final TimelineResult Tweet timelineResult new TimelineResult new TimelineCursor tweets tweets cb success new Result timelineResult null Override public void previous Long maxPosition Callback TimelineResult Tweet cb final List Tweet empty Collections emptyList final TimelineResult Tweet timelineResult new TimelineResult new TimelineCursor empty empty cb success new Result timelineResult null Override String getTimelineType return SCRIBE SECTION public static class Builder private final TweetUi tweetUi private List Tweet tweets public Builder this TweetUi getInstance public Builder TweetUi tweetUi if tweetUi null throw new IllegalArgumentException TweetUi instance must not be null this tweetUi tweetUi public Builder setTweets List Tweet tweets this tweets tweets return this public FixedTweetTimeline build return new FixedTweetTimeline tweetUi tweetspackage com twitter sdk android tweetui import com twitter sdk android core models MediaEntity class FormattedMediaEntity extends FormattedUrlEntity final String type final String mediaUrlHttps FormattedMediaEntity MediaEntity entity super entity this type entity type this mediaUrlHttps entity mediaUrlHttpspackage com twitter sdk android tweetui import java util ArrayList import java util List class FormattedTweetText String text final List FormattedUrlEntity urlEntities final List FormattedMediaEntity mediaEntities FormattedTweetText urlEntities new ArrayList mediaEntities new ArrayListpackage com twitter sdk android tweetui import com twitter sdk android core models UrlEntity class FormattedUrlEntity int start int end final String displayUrl final String url FormattedUrlEntity UrlEntity entity this start entity getStart this end entity getEnd this displayUrl entity displayUrl this url entity urlpackage com kaku colorfulnews di component import android app Activity import android content Context import com kaku colorfulnews di module FragmentModule import com kaku colorfulnews di scope ContextLife import com kaku colorfulnews di scope PerFragment import com kaku colorfulnews mvp ui fragment NewsListFragment import dagger Component PerFragment Component dependencies ApplicationComponent class modules FragmentModule class public interface FragmentComponent ContextLife Activity Context getActivityContext ContextLife Application Context getApplicationContext Activity getActivity void inject NewsListFragment newsListFragmentpackage com kaku colorfulnews di module import android app Activity import android content Context import android support v4 app Fragment import com kaku colorfulnews di scope ContextLife import com kaku colorfulnews di scope PerFragment import dagger Module import dagger Provides Module public class FragmentModule private Fragment mFragment public FragmentModule Fragment fragment mFragment fragment Provides PerFragment ContextLife Activity public Context provideActivityContext return mFragment getActivity Provides PerFragment public Activity provideActivity return mFragment getActivity Provides PerFragment public Fragment provideFragment return mFragmentpackage com twitter sdk android tweetui import android app Activity import android os Bundle import com squareup picasso Picasso import com twitter sdk android core models MediaEntity import com twitter sdk android tweetui internal MultiTouchImageView public class GalleryActivity extends Activity static final String MEDIA ENTITY MEDIA ENTITY static final String TWEET ID TWEET ID Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState setContentView R layout tw gallery activity final MediaEntity entity MediaEntity getIntent getSerializableExtra MEDIA ENTITY final MultiTouchImageView imageView MultiTouchImageView findViewById R id image view Picasso with this load entity mediaUrlHttps into imageViewpackage com twitter sdk android core services params public class Geocode public enum Distance MILES mi KILOMETERS km public final String identifier Distance String identifier this identifier identifier public final double latitude public final double longitude public final int radius public final Distance distance public Geocode double latitude double longitude int radius Distance distance this latitude latitude this longitude longitude this radius radius this distance distance Override public String toString return latitude longitude radius distance identifierpackage com kaku colorfulnews mvp entity import java util List public class GirlData private boolean isError private List PhotoGirl results public boolean isError return isError public void setError boolean error isError error public void setResults List PhotoGirl results this results results public List PhotoGirl getResults return resultspackage com twitter sdk android core internal network import com twitter sdk android core GuestSession import com twitter sdk android core GuestSessionProvider import com twitter sdk android core internal oauth GuestAuthToken import com twitter sdk android core internal oauth OAuthConstants import java io IOException import okhttp3 Authenticator import okhttp3 Request import okhttp3 Response import okhttp3 Route public class GuestAuthenticator implements Authenticator static final int MAX RETRIES 2 final GuestSessionProvider guestSessionProvider public GuestAuthenticator GuestSessionProvider guestSessionProvider this guestSessionProvider guestSessionProvider Override public Request authenticate Route route Response response throws IOException return reauth response Request reauth Response response if canRetry response final GuestSession session guestSessionProvider refreshCurrentSession new GuestSession getExpiredToken response final GuestAuthToken token session null null session getAuthToken if token null return resign response request token return null GuestAuthToken getExpiredToken Response response final String auth response request header OAuthConstants HEADER AUTHORIZATION final String guest response request header OAuthConstants HEADER GUEST TOKEN return new GuestAuthToken bearer auth replace bearer guest Request resign Request request GuestAuthToken token final Request Builder builder request newBuilder GuestAuthInterceptor addAuthHeaders builder token return builder build boolean canRetry Response response int responseCount 1 while response response priorResponse null responseCount return responseCount MAX RETRIESpackage com twitter sdk android core internal network import com twitter sdk android core GuestSession import com twitter sdk android core GuestSessionProvider import com twitter sdk android core internal oauth GuestAuthToken import com twitter sdk android core internal oauth OAuthConstants import java io IOException import okhttp3 Interceptor import okhttp3 Request import okhttp3 Response public class GuestAuthInterceptor implements Interceptor final GuestSessionProvider guestSessionProvider public GuestAuthInterceptor GuestSessionProvider guestSessionProvider this guestSessionProvider guestSessionProvider Override public Response intercept Chain chain throws IOException final Request request chain request final GuestSession session guestSessionProvider getCurrentSession final GuestAuthToken token session null null session getAuthToken if token null final Request Builder builder request newBuilder addAuthHeaders builder token return chain proceed builder build return chain proceed request static void addAuthHeaders Request Builder builder GuestAuthToken token final String authHeader token getTokenType token getAccessToken builder header OAuthConstants HEADER AUTHORIZATION authHeader builder header OAuthConstants HEADER GUEST TOKEN token getGuestTokenpackage com twitter sdk android core internal network import java io IOException import okhttp3 Interceptor import okhttp3 Response public class GuestAuthNetworkInterceptor implements Interceptor Override public Response intercept Chain chain throws IOException Response response chain proceed chain request if response code 403 response response newBuilder code 401 build return responsepackage com twitter sdk android core internal oauth import android text format DateUtils import com google gson annotations SerializedName public class GuestAuthToken extends OAuth2Token public static final String HEADER GUEST TOKEN x guest token private static final long EXPIRES IN MS DateUtils HOUR IN MILLIS 3 SerializedName guest token private final String guestToken public GuestAuthToken String tokenType String accessToken String guestToken super tokenType accessToken this guestToken guestToken public GuestAuthToken String tokenType String accessToken String guestToken long createdAt super tokenType accessToken createdAt this guestToken guestToken public String getGuestToken return guestToken Passbird maintains guest tokens for at least 1 hour but no more than 3 hours Tokens older than 3 hours are known to have expired and should not be reused Override public boolean isExpired return System currentTimeMillis this createdAt EXPIRES IN MS Override public boolean equals Object o if this o return true if o null getClass o getClass return false if super equals o return false final GuestAuthToken that GuestAuthToken o if guestToken null guestToken equals that guestToken that guestToken null return false return true Override public int hashCode int result super hashCode result 31 result guestToken null guestToken hashCode 0 return resultpackage com twitter sdk android core import android text TextUtils import com google gson Gson import com google gson GsonBuilder import com twitter sdk android core internal oauth GuestAuthToken import io fabric sdk android Fabric import io fabric sdk android services persistence SerializationStrategy public class GuestSession extends Session GuestAuthToken public static final long LOGGED OUT USER ID 0L public GuestSession GuestAuthToken authToken super authToken LOGGED OUT USER ID static public class Serializer implements SerializationStrategy GuestSession private final Gson gson public Serializer this gson new GsonBuilder registerTypeAdapter GuestAuthToken class new AuthTokenAdapter create Override public String serialize GuestSession session if session null session getAuthToken null try return gson toJson session catch Exception e Fabric getLogger d TwitterCore TAG Failed to serialize session e getMessage return Override public GuestSession deserialize String serializedSession if TextUtils isEmpty serializedSession try return gson fromJson serializedSession GuestSession class catch Exception e Fabric getLogger d TwitterCore TAG Failed to deserialize session e getMessage return nullpackage com twitter sdk android core import com twitter sdk android core internal oauth GuestAuthToken import com twitter sdk android core internal oauth OAuth2Service import java util concurrent CountDownLatch import io fabric sdk android Fabric public class GuestSessionProvider private final OAuth2Service oAuth2Service private final SessionManager GuestSession sessionManager public GuestSessionProvider OAuth2Service oAuth2Service SessionManager GuestSession sessionManager this oAuth2Service oAuth2Service this sessionManager sessionManager public synchronized GuestSession getCurrentSession final GuestSession session sessionManager getActiveSession if isSessionValid session return session refreshToken return sessionManager getActiveSession public synchronized GuestSession refreshCurrentSession GuestSession expiredSession final GuestSession session sessionManager getActiveSession if expiredSession null expiredSession equals session refreshToken return sessionManager getActiveSession void refreshToken Fabric getLogger d GuestSessionProvider Refreshing expired guest session final CountDownLatch latch new CountDownLatch 1 oAuth2Service requestGuestAuthToken new Callback GuestAuthToken Override public void success Result GuestAuthToken result sessionManager setActiveSession new GuestSession result data latch countDown Override public void failure TwitterException exception sessionManager clearSession GuestSession LOGGED OUT USER ID latch countDown try latch await catch InterruptedException e sessionManager clearSession GuestSession LOGGED OUT USER ID boolean isSessionValid GuestSession session return session null session getAuthToken null session getAuthToken isExpiredpackage com twitter sdk android core internal oauth import com google gson annotations SerializedName class GuestTokenResponse SerializedName guest token public final String guestToken public GuestTokenResponse String guestToken this guestToken guestTokenpackage com twitter sdk android core models import com google gson annotations SerializedName public class HashtagEntity extends Entity SerializedName text public final String text public HashtagEntity String text int start int end super start end this text textpackage com twitter sdk android tweetui internal import android view View public interface HighlightedClickableSpan void onClick View view void select boolean selected boolean isSelectedpackage com kaku colorfulnews common import android support annotation IntDef import java lang annotation Retention import java lang annotation RetentionPolicy public class HostType public static final int TYPE COUNT 3 public static final int NETEASE NEWS VIDEO 1 public static final int GANK GIRL PHOTO 2 public static final int NEWS DETAIL HTML PHOTO 3 IntDef NETEASE NEWS VIDEO GANK GIRL PHOTO NEWS DETAIL HTML PHOTO Retention RetentionPolicy SOURCE public interface HostTypeCheckerpackage com twitter sdk android tweetui internal util import java util ArrayList import java util HashMap import java util Map import java util TreeMap public class HtmlEntities public static final Entities XML public static final Entities HTML32 public static final HtmlEntities HTML40 package scoped for testing static final String ISO8859 1 ARRAY nbsp 160 non breaking space iexcl 161 inverted exclamation mark cent 162 cent sign pound 163 pound sign curren 164 currency sign yen 165 yen sign yuan sign brvbar 166 broken bar broken vertical bar sect 167 section sign uml 168 diaeresis spacing diaeresis copy 169 copyright sign ordf 170 feminine ordinal indicator laquo 171 left pointing double angle quotation mark left pointing guillemet not 172 not sign shy 173 soft hyphen discretionary hyphen reg 174 registered trademark sign macr 175 macron spacing macron overline APL overbar deg 176 degree sign plusmn 177 plus minus sign plus or minus sign sup2 178 superscript two superscript digit two squared sup3 179 superscript three superscript digit three cubed acute 180 acute accent spacing acute micro 181 micro sign para 182 pilcrow sign paragraph sign middot 183 middle dot Georgian comma Greek middle dot cedil 184 cedilla spacing cedilla sup1 185 superscript one superscript digit one ordm 186 masculine ordinal indicator raquo 187 right pointing double angle quotation mark right pointing guillemet frac14 188 vulgar fraction one quarter fraction one quarter frac12 189 vulgar fraction one half fraction one half frac34 190 vulgar fraction three quarters fraction three quarters iquest 191 inverted question mark turned question mark Agrave 192 uppercase A grave accent Aacute 193 uppercase A acute accent Acirc 194 uppercase A circumflex accent Atilde 195 uppercase A tilde Auml 196 uppercase A umlaut Aring 197 uppercase A ring AElig 198 uppercase AE Ccedil 199 uppercase C cedilla Egrave 200 uppercase E grave accent Eacute 201 uppercase E acute accent Ecirc 202 uppercase E circumflex accent Euml 203 uppercase E umlaut Igrave 204 uppercase I grave accent Iacute 205 uppercase I acute accent Icirc 206 uppercase I circumflex accent Iuml 207 uppercase I umlaut ETH 208 uppercase Eth Icelandic Ntilde 209 uppercase N tilde Ograve 210 uppercase O grave accent Oacute 211 uppercase O acute accent Ocirc 212 uppercase O circumflex accent Otilde 213 uppercase O tilde Ouml 214 uppercase O umlaut times 215 multiplication sign Oslash 216 uppercase O slash Ugrave 217 uppercase U grave accent Uacute 218 uppercase U acute accent Ucirc 219 uppercase U circumflex accent Uuml 220 uppercase U umlaut Yacute 221 uppercase Y acute accent THORN 222 uppercase THORN Icelandic szlig 223 lowercase sharps German agrave 224 lowercase a grave accent aacute 225 lowercase a acute accent acirc 226 lowercase a circumflex accent atilde 227 lowercase a tilde auml 228 lowercase a umlaut aring 229 lowercase a ring aelig 230 lowercase ae ccedil 231 lowercase c cedilla egrave 232 lowercase e grave accent eacute 233 lowercase e acute accent ecirc 234 lowercase e circumflex accent euml 235 lowercase e umlaut igrave 236 lowercase i grave accent iacute 237 lowercase i acute accent icirc 238 lowercase i circumflex accent iuml 239 lowercase i umlaut eth 240 lowercase eth Icelandic ntilde 241 lowercase n tilde ograve 242 lowercase o grave accent oacute 243 lowercase o acute accent ocirc 244 lowercase o circumflex accent otilde 245 lowercase o tilde ouml 246 lowercase o umlaut divide 247 division sign oslash 248 lowercase o slash ugrave 249 lowercase u grave accent uacute 250 lowercase u acute accent ucirc 251 lowercase u circumflex accent uuml 252 lowercase u umlaut yacute 253 lowercase y acute accent thorn 254 lowercase thorn Icelandic yuml 255 lowercase y umlaut http www w3 org TR REC html40 sgml entities html package scoped for testing static final String HTML40 ARRAY Latin Extended B fnof 402 latin small f with hook function florin U 0192 ISOtech Greek Alpha 913 greek capital letter alpha U 0391 Beta 914 greek capital letter beta U 0392 Gamma 915 greek capital letter gamma U 0393 ISOgrk3 Delta 916 greek capital letter delta U 0394 ISOgrk3 Epsilon 917 greek capital letter epsilon U 0395 Zeta 918 greek capital letter zeta U 0396 Eta 919 greek capital letter eta U 0397 Theta 920 greek capital letter theta U 0398 ISOgrk3 Iota 921 greek capital letter iota U 0399 Kappa 922 greek capital letter kappa U 039A Lambda 923 greek capital letter lambda U 039B ISOgrk3 Mu 924 greek capital letter mu U 039C Nu 925 greek capital letter nu U 039D Xi 926 greek capital letter xi U 039E ISOgrk3 Omicron 927 greek capital letter omicron U 039F Pi 928 greek capital letter pi U 03A0 ISOgrk3 Rho 929 greek capital letter rho U 03A1 there is no Sigmaf and no U 03A2 character either Sigma 931 greek capital letter sigma U 03A3 ISOgrk3 Tau 932 greek capital letter tau U 03A4 Upsilon 933 greek capital letter upsilon U 03A5 ISOgrk3 Phi 934 greek capital letter phi U 03A6 ISOgrk3 Chi 935 greek capital letter chi U 03A7 Psi 936 greek capital letter psi U 03A8 ISOgrk3 Omega 937 greek capital letter omega U 03A9 ISOgrk3 alpha 945 greek small letter alpha U 03B1 ISOgrk3 beta 946 greek small letter beta U 03B2 ISOgrk3 gamma 947 greek small letter gamma U 03B3 ISOgrk3 delta 948 greek small letter delta U 03B4 ISOgrk3 epsilon 949 greek small letter epsilon U 03B5 ISOgrk3 zeta 950 greek small letter zeta U 03B6 ISOgrk3 eta 951 greek small letter eta U 03B7 ISOgrk3 theta 952 greek small letter theta U 03B8 ISOgrk3 iota 953 greek small letter iota U 03B9 ISOgrk3 kappa 954 greek small letter kappa U 03BA ISOgrk3 lambda 955 greek small letter lambda U 03BB ISOgrk3 mu 956 greek small letter mu U 03BC ISOgrk3 nu 957 greek small letter nu U 03BD ISOgrk3 xi 958 greek small letter xi U 03BE ISOgrk3 omicron 959 greek small letter omicron U 03BF NEW pi 960 greek small letter pi U 03C0 ISOgrk3 rho 961 greek small letter rho U 03C1 ISOgrk3 sigmaf 962 greek small letter final sigma U 03C2 ISOgrk3 sigma 963 greek small letter sigma U 03C3 ISOgrk3 tau 964 greek small letter tau U 03C4 ISOgrk3 upsilon 965 greek small letter upsilon U 03C5 ISOgrk3 phi 966 greek small letter phi U 03C6 ISOgrk3 chi 967 greek small letter chi U 03C7 ISOgrk3 psi 968 greek small letter psi U 03C8 ISOgrk3 omega 969 greek small letter omega U 03C9 ISOgrk3 thetasym 977 greek small letter theta symbol U 03D1 NEW upsih 978 greek upsilon with hook symbol U 03D2 NEW piv 982 greek pi symbol U 03D6 ISOgrk3 General Punctuation bull 8226 bullet black small circle U 2022 ISOpub bullet is NOT the same as bullet operator U 2219 hellip 8230 horizontal ellipsis three dot leader U 2026 ISOpub prime 8242 prime minutes feet U 2032 ISOtech Prime 8243 double prime seconds inches U 2033 ISOtech oline 8254 overline spacing overscore U 203E NEW frasl 8260 fraction slash U 2044 NEW Letterlike Symbols weierp 8472 script capital P power set Weierstrass p U 2118 ISOamso image 8465 blackletter capital I imaginary part U 2111 ISOamso real 8476 blackletter capital R real part symbol U 211C ISOamso trade 8482 trade mark sign U 2122 ISOnum alefsym 8501 alef symbol first transfinite cardinal U 2135 NEW alef symbol is NOT the same as hebrew letter alef U 05D0 although the same glyph could be used to depict both characters Arrows larr 8592 leftwards arrow U 2190 ISOnum uarr 8593 upwards arrow U 2191 ISOnum rarr 8594 rightwards arrow U 2192 ISOnum darr 8595 downwards arrow U 2193 ISOnum harr 8596 left right arrow U 2194 ISOamsa crarr 8629 downwards arrow with corner leftwards carriage return U 21B5 NEW lArr 8656 leftwards double arrow U 21D0 ISOtech ISO 10646 does not say that lArr is the same as the is implied by arrowbut also does not have any other character for that function So lArr canbe used for is implied by as ISOtech suggests uArr 8657 upwards double arrow U 21D1 ISOamsa rArr 8658 rightwards double arrow U 21D2 ISOtech ISO 10646 does not say this is the implies character but does not have another character with this function so rArr can be used for implies as ISOtech suggests dArr 8659 downwards double arrow U 21D3 ISOamsa hArr 8660 left right double arrow U 21D4 ISOamsa Mathematical Operators forall 8704 for all U 2200 ISOtech part 8706 partial differential U 2202 ISOtech exist 8707 there exists U 2203 ISOtech empty 8709 empty set null set diameter U 2205 ISOamso nabla 8711 nabla backward difference U 2207 ISOtech isin 8712 element of U 2208 ISOtech notin 8713 not an element of U 2209 ISOtech ni 8715 contains as member U 220B ISOtech should there be a more memorable name than ni prod 8719 n ary product product sign U 220F ISOamsb prod is NOT the same character as U 03A0 greek capital letter pi though the same glyph might be used for both sum 8721 n ary summation U 2211 ISOamsb sum is NOT the same character as U 03A3 greek capital letter sigma though the same glyph might be used for both minus 8722 minus sign U 2212 ISOtech lowast 8727 asterisk operator U 2217 ISOtech radic 8730 square root radical sign U 221A ISOtech prop 8733 proportional to U 221D ISOtech infin 8734 infinity U 221E ISOtech ang 8736 angle U 2220 ISOamso and 8743 logical and wedge U 2227 ISOtech or 8744 logical or vee U 2228 ISOtech cap 8745 intersection cap U 2229 ISOtech cup 8746 union cup U 222A ISOtech int 8747 integral U 222B ISOtech there4 8756 therefore U 2234 ISOtech sim 8764 tilde operator varies with similar to U 223C ISOtech tilde operator is NOT the same character as the tilde U 007E although the same glyph might be used to represent both cong 8773 approximately equal to U 2245 ISOtech asymp 8776 almost equal to asymptotic to U 2248 ISOamsr ne 8800 not equal to U 2260 ISOtech equiv 8801 identical to U 2261 ISOtech le 8804 less than or equal to U 2264 ISOtech ge 8805 greater than or equal to U 2265 ISOtech sub 8834 subset of U 2282 ISOtech sup 8835 superset of U 2283 ISOtech note that nsup not a superset of U 2283 is not covered by the Symbol font encoding and is not included Should it be for symmetry It is in ISOamsn ENTITY nsub 8836 not a subset of U 2284 ISOamsn sube 8838 subset of or equal to U 2286 ISOtech supe 8839 superset of or equal to U 2287 ISOtech oplus 8853 circled plus direct sum U 2295 ISOamsb otimes 8855 circled times vector product U 2297 ISOamsb perp 8869 up tack orthogonal to perpendicular U 22A5 ISOtech sdot 8901 dot operator U 22C5 ISOamsb dot operator is NOT the same character as U 00B7 middle dot Miscellaneous Technical lceil 8968 left ceiling apl upstile U 2308 ISOamsc rceil 8969 right ceiling U 2309 ISOamsc lfloor 8970 left floor apl downstile U 230A ISOamsc rfloor 8971 right floor U 230B ISOamsc lang 9001 left pointing angle bracket bra U 2329 ISOtech lang is NOT the same character as U 003C less than or U 2039 single left pointing angle quotation mark rang 9002 right pointing angle bracket ket U 232A ISOtech rang is NOT the same character as U 003E greater than or U 203A single right pointing angle quotation mark Geometric Shapes loz 9674 lozenge U 25CA ISOpub Miscellaneous Symbols spades 9824 black spade suit U 2660 ISOpub black here seems to mean filled as opposed to hollow clubs 9827 black club suit shamrock U 2663 ISOpub hearts 9829 black heart suit valentine U 2665 ISOpub diams 9830 black diamond suit U 2666 ISOpub Latin Extended A OElig 338 latin capital ligature OE U 0152 ISOlat2 oelig 339 latin small ligature oe U 0153 ISOlat2 ligature is a misnomer this is a separate character in some languages Scaron 352 latin capital letter S with caron U 0160 ISOlat2 scaron 353 latin small letter s with caron U 0161 ISOlat2 Yuml 376 latin capital letter Y with diaeresis U 0178 ISOlat2 Spacing Modifier Letters circ 710 modifier letter circumflex accent U 02C6 ISOpub tilde 732 small tilde U 02DC ISOdia General Punctuation ensp 8194 en space U 2002 ISOpub emsp 8195 em space U 2003 ISOpub thinsp 8201 thin space U 2009 ISOpub zwnj 8204 zero width non joiner U 200C NEW RFC 2070 zwj 8205 zero width joiner U 200D NEW RFC 2070 lrm 8206 left to right mark U 200E NEW RFC 2070 rlm 8207 right to left mark U 200F NEW RFC 2070 ndash 8211 en dash U 2013 ISOpub mdash 8212 em dash U 2014 ISOpub lsquo 8216 left single quotation mark U 2018 ISOnum rsquo 8217 right single quotation mark U 2019 ISOnum sbquo 8218 single low 9 quotation mark U 201A NEW ldquo 8220 left double quotation mark U 201C ISOnum rdquo 8221 right double quotation mark U 201D ISOnum bdquo 8222 double low 9 quotation mark U 201E NEW dagger 8224 dagger U 2020 ISOpub Dagger 8225 double dagger U 2021 ISOpub permil 8240 per mille sign U 2030 ISOtech lsaquo 8249 single left pointing angle quotation mark U 2039 ISO proposed lsaquo is proposed but not yet ISO standardized rsaquo 8250 single right pointing angle quotation mark U 203A ISO proposed rsaquo is proposed but not yet ISO standardized euro 8364 euro sign U 20AC NEW private static final String BASIC ARRAY quot 34 double quote amp 38 ampersand lt 60 less than gt 62 greater than package scoped for testing final EntityMap map new HtmlEntities LookupEntityMap static HTML40 new HtmlEntities fillWithHtml40Entities HTML40 static void fillWithHtml40Entities HtmlEntities entities entities addEntities BASIC ARRAY entities addEntities ISO8859 1 ARRAY entities addEntities HTML40 ARRAY interface EntityMap void add String name int value String name int value int value String name static class PrimitiveEntityMap implements EntityMap SuppressWarnings unchecked private final Map mapNameToValue new HashMap private final IntHashMap mapValueToName new IntHashMap SuppressWarnings unchecked public void add String name int value mapNameToValue put name value mapValueToName put value name public String name int value return String mapValueToName get value public int value String name final Object value mapNameToValue get name if value null return 1 return Integer value intValue abstract static class MapIntMap implements EntityMap SuppressWarnings unchecked protected Map mapNameToValue SuppressWarnings unchecked protected Map mapValueToName SuppressWarnings unchecked public void add String name int value mapNameToValue put name value mapValueToName put value name public String name int value return String mapValueToName get value public int value String name final Object value mapNameToValue get name if value null return 1 return Integer value intValue static class HashEntityMap extends MapIntMap SuppressWarnings unchecked public HashEntityMap mapNameToValue new HashMap mapValueToName new HashMap static class TreeEntityMap extends MapIntMap SuppressWarnings unchecked public TreeEntityMap mapNameToValue new TreeMap mapValueToName new TreeMap static class LookupEntityMap extends PrimitiveEntityMap private static final int LOOKUP TABLE SIZE 256 private String lookupTable Override public String name int value if value LOOKUP TABLE SIZE return lookupTable value return super name value private String lookupTable if lookupTable null createLookupTable return lookupTable private void createLookupTable lookupTable new String LOOKUP TABLE SIZE for int i 0 i LOOKUP TABLE SIZE i lookupTable i super name i static class ArrayEntityMap implements EntityMap protected int growBy 100 protected int size 0 protected String names protected int values public ArrayEntityMap names new String growBy values new int growBy public ArrayEntityMap int growBy this growBy growBy names new String growBy values new int growBy public void add String name int value ensureCapacity size 1 names size name values size value size protected void ensureCapacity int capacity if capacity names length final int newSize Math max capacity size growBy final String newNames new String newSize System arraycopy names 0 newNames 0 size names newNames final int newValues new int newSize System arraycopy values 0 newValues 0 size values newValues public String name int value for int i 0 i size i if values i value return names i return null public int value String name for int i 0 i size i if names i equals name return values i return 1 static class BinaryEntityMap extends ArrayEntityMap public BinaryEntityMap public BinaryEntityMap int growBy super growBy based on code in java util Arrays private int binarySearch int key int low 0 int high size 1 while low high final int mid low high 1 final int midVal values mid if midVal key low mid 1 else if midVal key high mid 1 else return mid key found return low 1 key not found Override public void add String name int value ensureCapacity size 1 int insertAt binarySearch value if insertAt 0 return note this means you can t insert the same value twice insertAt insertAt 1 binarySearch returns it negative and off by one System arraycopy values insertAt values insertAt 1 size insertAt values insertAt value System arraycopy names insertAt names insertAt 1 size insertAt names insertAt name size Override public String name int value final int index binarySearch value if index 0 return null return names index public static final class Unescaped public final String unescaped An ordered list of start end indices public final ArrayList int indices public Unescaped String unescaped ArrayList int indices this unescaped unescaped this indices indices public void addEntities String entityArray for String anEntityArray entityArray addEntity anEntityArray 0 Integer parseInt anEntityArray 1 public void addEntity String name int value map add name value public String entityName int value return map name value public int entityValue String name return map value name public Unescaped unescape String str final int length str length final StringBuilder buf new StringBuilder length final ArrayList int indices new ArrayList 5 int i for i 0 i length i final char ch str charAt i if ch final int semi str indexOf i 1 if semi 1 buf append ch continue final String entityName str substring i 1 semi final int entityNameLength entityName length int entityValue 1 if entityNameLength 0 if entityName charAt 0 entityNameLength 1 final char charAt1 entityName charAt 1 try if charAt1 x charAt1 X if entityNameLength 2 entityValue Integer valueOf entityName substring 2 16 intValue else entityValue Integer parseInt entityName substring 1 catch Exception ignore else entityValue this entityValue entityName if entityValue 1 buf append final int amp entityName indexOf if amp 1 buf append entityName buf append i semi else buf append char entityValue indices add new int i semi i semi else buf append ch return new Unescaped buf toString indicespackage com twitter sdk android core models public interface Identifiable long getIdpackage com twitter sdk android core models import com google gson annotations SerializedName public class Image SerializedName w public final int w SerializedName h public final int h SerializedName image type public final String imageType public Image int w int h String imageType this w w this h h this imageType imageTypepackage com twitter sdk android core models import com google gson annotations SerializedName public class ImageValue SerializedName height public final int height SerializedName width public final int width SerializedName url public final String url SerializedName alt public final String alt public ImageValue int height int width String url String alt this height height this width width this url url this alt altpackage com twitter sdk android core import android content Context import android content Intent import android content pm PackageManager import android content pm ResolveInfo import java util List public class IntentUtils public static boolean isActivityAvailable Context context Intent intent final PackageManager packageManager context getPackageManager final List ResolveInfo activities packageManager queryIntentActivities intent 0 return activities isEmpty public static boolean safeStartActivity Context context Intent intent if isActivityAvailable context intent context startActivity intent return true return falsepackage com twitter sdk android core import android content Intent import io fabric sdk android FabricAndroidTestCase public class IntentUtilsTest extends FabricAndroidTestCase public void testIsActivityAvailable noActivitiesAvailable final Intent intent new Intent io fabric is awesome assertFalse IntentUtils isActivityAvailable getContext intent public void testIsActivityAvailable activitiesAvailable final Intent intent new Intent android provider Settings ACTION SETTINGS assertTrue IntentUtils isActivityAvailable getContext intent public void testSafeStartActivity final Intent intent new Intent io fabric is awesome assertFalse IntentUtils safeStartActivity getContext intentpackage com twitter sdk android tweetui internal util public class IntHashMap private Entry table private int count private int threshold private float loadFactor private static class Entry public final int hash SuppressWarnings unused public int key public Object value public Entry next protected Entry int hash int key Object value Entry next this hash hash this key key this value value this next next public IntHashMap this 20 0 75f public IntHashMap int initialCapacity this initialCapacity 0 75f public IntHashMap int initialCapacity float loadFactor super if initialCapacity 0 throw new IllegalArgumentException Illegal Capacity initialCapacity if loadFactor 0 throw new IllegalArgumentException Illegal Load loadFactor if initialCapacity 0 initialCapacity 1 this loadFactor loadFactor table new Entry initialCapacity threshold int initialCapacity loadFactor public int size return count public boolean isEmpty return count 0 public boolean contains Object value if value null throw new NullPointerException final Entry tab table for int i tab length i 0 for Entry e tab i e null e e next if e value equals value return true return false public boolean containsValue Object value return contains value public boolean containsKey int key final Entry tab table final int hash key final int index hash 0x7FFFFFFF tab length for Entry e tab index e null e e next if e hash hash return true return false public Object get int key final Entry tab table final int hash key final int index hash 0x7FFFFFFF tab length for Entry e tab index e null e e next if e hash hash return e value return null protected void rehash final int oldCapacity table length final Entry oldMap table final int newCapacity oldCapacity 2 1 final Entry newMap new Entry newCapacity threshold int newCapacity loadFactor table newMap for int i oldCapacity i 0 for Entry old oldMap i old null final Entry e old old old next final int index e hash 0x7FFFFFFF newCapacity e next newMap index newMap index e public Object put int key Object value Makes sure the key is not already in the hashtable Entry tab table final int hash key int index hash 0x7FFFFFFF tab length for Entry e tab index e null e e next if e hash hash final Object old e value e value value return old if count threshold Rehash the table if the threshold is exceeded rehash tab table index hash 0x7FFFFFFF tab length Creates the new entry final Entry e new Entry hash key value tab index tab index e count return null public Object remove int key final Entry tab table final int hash key final int index hash 0x7FFFFFFF tab length for Entry e tab index prev null e null prev e e e next if e hash hash if prev null prev next e next else tab index e next count final Object oldValue e value e value null return oldValue return null public synchronized void clear final Entry tab table for int index tab length index 0 tab index null count 0package com kaku colorfulnews widget import android support v7 widget GridLayoutManager import android support v7 widget RecyclerView import android support v7 widget StaggeredGridLayoutManager import android support v7 widget helper ItemTouchHelper public class ItemDragHelperCallback extends ItemTouchHelper Callback private OnItemMoveListener mOnItemMoveListener private boolean mIsLongPressEnabled public void setLongPressEnabled boolean longPressEnabled mIsLongPressEnabled longPressEnabled public interface OnItemMoveListener boolean onItemMove int fromPosition int toPosition public ItemDragHelperCallback OnItemMoveListener onItemMoveListener mOnItemMoveListener onItemMoveListener Override public boolean isLongPressDragEnabled return mIsLongPressEnabled Override public int getMovementFlags RecyclerView recyclerView RecyclerView ViewHolder viewHolder int dragFlags setDragFlags recyclerView int swipeFlags 0 return makeMovementFlags dragFlags swipeFlags private int setDragFlags RecyclerView recyclerView int dragFlags RecyclerView LayoutManager layoutManager recyclerView getLayoutManager if layoutManager instanceof GridLayoutManager layoutManager instanceof StaggeredGridLayoutManager dragFlags ItemTouchHelper UP ItemTouchHelper DOWN ItemTouchHelper LEFT ItemTouchHelper RIGHT else dragFlags ItemTouchHelper UP ItemTouchHelper DOWN return dragFlags Override public boolean onMove RecyclerView recyclerView RecyclerView ViewHolder viewHolder RecyclerView ViewHolder target return isDifferentItemViewType viewHolder target mOnItemMoveListener onItemMove viewHolder getAdapterPosition target getAdapterPosition private boolean isDifferentItemViewType RecyclerView ViewHolder viewHolder RecyclerView ViewHolder target return viewHolder getItemViewType target getItemViewType Override public void clearView RecyclerView recyclerView RecyclerView ViewHolder viewHolder super clearView recyclerView viewHolder Override public void onSwiped RecyclerView ViewHolder viewHolder int directionpackage com twitter sdk android tweetui import android view View import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterApiException import com twitter sdk android core TwitterException import com twitter sdk android core internal TwitterApiConstants import com twitter sdk android core models Tweet import com twitter sdk android core models TweetBuilder class LikeTweetAction extends BaseTweetAction implements View OnClickListener final Tweet tweet final TweetRepository tweetRepository final TweetUi tweetUi final TweetScribeClient tweetScribeClient LikeTweetAction Tweet tweet TweetUi tweetUi Callback Tweet cb this tweet tweetUi cb new TweetScribeClientImpl tweetUi For testing only LikeTweetAction Tweet tweet TweetUi tweetUi Callback Tweet cb TweetScribeClient tweetScribeClient super cb this tweet tweet this tweetUi tweetUi this tweetScribeClient tweetScribeClient this tweetRepository tweetUi getTweetRepository Override public void onClick View view if view instanceof ToggleImageButton final ToggleImageButton toggleImageButton ToggleImageButton view if tweet favorited scribeUnFavoriteAction tweetRepository unfavorite tweet id new LikeCallback toggleImageButton tweet getActionCallback else scribeFavoriteAction tweetRepository favorite tweet id new LikeCallback toggleImageButton tweet getActionCallback void scribeFavoriteAction tweetScribeClient favorite tweet void scribeUnFavoriteAction tweetScribeClient unfavorite tweet static class LikeCallback extends Callback Tweet ToggleImageButton button Tweet tweet Callback Tweet cb LikeCallback ToggleImageButton button Tweet tweet Callback Tweet cb this button button this tweet tweet this cb cb Override public void success Result Tweet result cb success result Override public void failure TwitterException exception if exception instanceof TwitterApiException final TwitterApiException apiException TwitterApiException exception final int errorCode apiException getErrorCode switch errorCode case TwitterApiConstants Errors ALREADY FAVORITED final Tweet favorited new TweetBuilder copy tweet setFavorited true build cb success new Result favorited null return case TwitterApiConstants Errors ALREADY UNFAVORITED final Tweet unfavorited new TweetBuilder copy tweet setFavorited false build cb success new Result unfavorited null return default reset the toggle state back to match the Tweet button setToggledOn tweet favorited cb failure exception return reset the toggle state back to match the Tweet button setToggledOn tweet favorited cb failure exceptionpackage com twitter sdk android tweetui import com twitter sdk android core models MediaEntity interface LinkClickListener void onUrlClicked String url void onPhotoClicked MediaEntity mediaEntitypackage com twitter sdk android core services import com twitter sdk android core models Tweet import java util List import retrofit2 Call import retrofit2 http GET import retrofit2 http Query public interface ListService GET 1 1 lists statuses json tweet mode extended include cards true cards platform TwitterKit 13 Call List Tweet statuses Query list id Long listId Query slug String slug Query owner screen name String ownerScreenName Query owner id Long ownerId Query since id Long sinceId Query max id Long maxId Query count Integer count Query include entities Boolean includeEntities Query include rts Boolean includeRetweetspackage com kaku colorfulnews common import android support annotation IntDef import java lang annotation Retention import java lang annotation RetentionPolicy public class LoadNewsType public static final int TYPE REFRESH SUCCESS 1 public static final int TYPE REFRESH ERROR 2 public static final int TYPE LOAD MORE SUCCESS 3 public static final int TYPE LOAD MORE ERROR 4 IntDef TYPE REFRESH SUCCESS TYPE REFRESH ERROR TYPE LOAD MORE SUCCESS TYPE LOAD MORE ERROR Retention RetentionPolicy SOURCE public interface checkerpackage com twitter sdk android tweetui import com twitter sdk android core Callback import com twitter sdk android core TwitterException import io fabric sdk android Logger abstract class LoggingCallback T extends Callback T Wrapped cb generic type is unknown concrete subclass responsible for implementing success Result T result and unpacking result to call cb with proper type checking private final Callback cb private final Logger logger LoggingCallback Callback cb Logger logger this cb cb this logger logger Override public void failure TwitterException exception logger e TweetUi LOGTAG exception getMessage exception if cb null cb failure exceptionpackage com twitter sdk android unity import android app Activity import android content Intent import android os Bundle import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterException import com twitter sdk android core TwitterSession import com twitter sdk android core TwitterSessionHelper import com twitter sdk android core identity TwitterAuthClient public class LoginActivity extends Activity TwitterAuthClient authClient Override public void onCreate Bundle savedInstanceState super onCreate savedInstanceState authClient new TwitterAuthClient authClient authorize this new Callback TwitterSession Override public void success Result TwitterSession result final String session TwitterSessionHelper serialize result data final UnityMessage message new UnityMessage Builder setMethod LoginComplete setData session build message send finish Override public void failure TwitterException ex final String error new ApiError Serializer serialize new ApiError 0 ex getMessage final UnityMessage message new UnityMessage Builder setMethod LoginFailed setData error build message send finish Override protected void onActivityResult int requestCode int resultCode Intent data super onActivityResult requestCode resultCode data authClient onActivityResult requestCode resultCode datapackage com zxy recovery test import android app Activity import android content Intent import android os Bundle import android view View public class MainActivity extends BaseActivity Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState setContentView R layout activity main public void onClick View view if view getId R id btn Activity activity null activity finish else if view getId R id btn2 Intent intent new Intent MainActivity this TestActivity class startActivity intentpackage com twitter sdk android core models import com google gson annotations SerializedName public class Media SerializedName media id public final long mediaId SerializedName media id string public final String mediaIdString SerializedName size public final long size SerializedName image public final Image image public Media long mediaID String mediaIdString long size Image image this mediaId mediaID this mediaIdString mediaIdString this size size this image imagepackage com twitter sdk android tweetui internal import android content Context import android graphics drawable Drawable import android util AttributeSet import android view LayoutInflater import android view View import android widget FrameLayout import android widget ImageView import android widget TextView import com twitter sdk android core internal VineCardUtils import com twitter sdk android core models Card import com twitter sdk android core models MediaEntity import com twitter sdk android tweetui R public class MediaBadgeView extends FrameLayout TextView videoDuration ImageView badge public MediaBadgeView Context context this context null public MediaBadgeView Context context AttributeSet attrs this context attrs 0 public MediaBadgeView Context context AttributeSet attrs int defStyleAttr super context attrs defStyleAttr initSubViews context void initSubViews Context context final LayoutInflater inflater LayoutInflater context getSystemService Context LAYOUT INFLATER SERVICE final View view inflater inflate R layout tw media badge this true videoDuration TextView view findViewById R id tw video duration badge ImageView view findViewById R id tw gif badge public void setMediaEntity MediaEntity entity if TweetMediaUtils GIF TYPE equals entity type setBadge getResources getDrawable R drawable tw gif badge else if TweetMediaUtils VIDEO TYPE equals entity type final long duration entity videoInfo null 0 entity videoInfo durationMillis setText duration else setEmpty public void setCard Card card if VineCardUtils isVine card setBadge getResources getDrawable R drawable tw vine badge else setEmpty void setText long duration videoDuration setVisibility View VISIBLE badge setVisibility View GONE videoDuration setText MediaTimeUtils getPlaybackTime duration void setBadge Drawable drawable badge setVisibility View VISIBLE videoDuration setVisibility View GONE badge setImageDrawable drawable void setEmpty videoDuration setVisibility View GONE badge setVisibility View GONEpackage com twitter sdk android core models import com google gson annotations SerializedName import java io Serializable public class MediaEntity extends UrlEntity SerializedName id public final long id SerializedName id str public final String idStr SerializedName media url public final String mediaUrl SerializedName media url https public final String mediaUrlHttps SerializedName sizes public final Sizes sizes SerializedName source status id public final long sourceStatusId SerializedName source status id str public final String sourceStatusIdStr SerializedName type public final String type SerializedName video info public final VideoInfo videoInfo SerializedName ext alt text public final String altText public MediaEntity String url String expandedUrl String displayUrl int start int end long id String idStr String mediaUrl String mediaUrlHttps Sizes sizes long sourceStatusId String sourceStatusIdStr String type VideoInfo videoInfo String altText super url expandedUrl displayUrl start end this id id this idStr idStr this mediaUrl mediaUrl this mediaUrlHttps mediaUrlHttps this sizes sizes this sourceStatusId sourceStatusId this sourceStatusIdStr sourceStatusIdStr this type type this videoInfo videoInfo this altText altText public static class Sizes implements Serializable SerializedName medium public final Size medium SerializedName thumb public final Size thumb SerializedName small public final Size small SerializedName large public final Size large public Sizes Size thumb Size small Size medium Size large this thumb thumb this small small this medium medium this large large public static class Size implements Serializable SerializedName w public final int w SerializedName h public final int h SerializedName resize public final String resize public Size int w int h String resize this w w this h h this resize resizepackage com twitter sdk android core services import com twitter sdk android core models Media import okhttp3 RequestBody import retrofit2 Call import retrofit2 http Multipart import retrofit2 http POST import retrofit2 http Part public interface MediaService Multipart POST https upload twitter com 1 1 media upload json Call Media upload Part media RequestBody media Part media data RequestBody mediaData Part additional owners RequestBody additionalOwnerspackage com twitter sdk android tweetui internal import java util Locale final class MediaTimeUtils private static final String TIME FORMAT LONG 1 d 2 02d 3 02d private static final String TIME FORMAT SHORT 1 d 2 02d private MediaTimeUtils static String getPlaybackTime long timeMillis final int timeSeconds int timeMillis 1000 final int seconds timeSeconds 60 final int minutes timeSeconds 60 60 final int hours timeSeconds 3600 if hours 0 return String format Locale getDefault TIME FORMAT LONG hours minutes seconds else return String format Locale getDefault TIME FORMAT SHORT minutes secondspackage com twitter sdk android core models import com google gson annotations SerializedName public class MentionEntity extends Entity SerializedName id public final long id SerializedName id str public final String idStr SerializedName name public final String name SerializedName screen name public final String screenName public MentionEntity long id String idStr String name String screenName int start int end super start end this id id this idStr idStr this name name this screenName screenNamepackage com twitter sdk android core internal import android content Context import java io File import java io FilenameFilter import java util Arrays import java util Comparator public class MigrationHelper private static final String SHARED PREFS DIR shared prefs public void migrateSessionStore Context context String prefixMatch String expectedFileName final File sharedPrefsDir getSharedPreferencesDir context shared prefs dir has not been created do nothing if sharedPrefsDir exists sharedPrefsDir isDirectory return if shared prefs already exist do nothing final File expectedSharedPrefsFile new File sharedPrefsDir expectedFileName if expectedSharedPrefsFile exists return rename latest final File oldPrefsharedPrefsFile getLatestFile sharedPrefsDir prefixMatch if oldPrefsharedPrefsFile null oldPrefsharedPrefsFile renameTo expectedSharedPrefsFile File getSharedPreferencesDir Context context return new File context getApplicationInfo dataDir SHARED PREFS DIR File getLatestFile File sharedPrefsDir String prefix final File files sharedPrefsDir listFiles new PrefixFileNameFilter prefix Arrays sort files new FileLastModifiedComparator return files length 0 files 0 null static class FileLastModifiedComparator implements Comparator File Override public int compare File file1 File file2 return Long valueOf file2 lastModified compareTo file1 lastModified static class PrefixFileNameFilter implements FilenameFilter final String prefix public PrefixFileNameFilter String prefix this prefix prefix Override public boolean accept File file String filename return filename startsWith prefixpackage com twitter sdk android core internal import android content Context import com twitter sdk android core TwitterCoreTest import java io File import java io FilenameFilter import java io IOException import java util Comparator import static org mockito Mockito mock import static org mockito Mockito when public class MigrationHelperTests extends TwitterCoreTest private static final String SHARED PREFS DIR shared prefs private static final String KIT IDENTIFIER com foo test test private static final String EXPECTED PREFERENCE KIT IDENTIFIER test xml private static final String TEST PREFERENCE KIT IDENTIFIER a b c xml MigrationHelper migrationHelper Override public void setUp throws Exception super setUp migrationHelper new MigrationHelper public void testMigrateSessionStore emptyDirectory throws Exception final File sharedPrefsDir getSharedPreferencesDir getContext clearSharePrefs sharedPrefsDir createSharedPrefsFolder sharedPrefsDir migrationHelper migrateSessionStore getContext KIT IDENTIFIER EXPECTED PREFERENCE assertEquals 0 sharedPrefsDir listFiles length public void testMigrateSessionStore noSharedPrefDirectory throws Exception final File sharedPrefsDir getSharedPreferencesDir getContext clearSharePrefs sharedPrefsDir deleteSharedPrefsFolder sharedPrefsDir migrationHelper migrateSessionStore getContext KIT IDENTIFIER EXPECTED PREFERENCE assertFalse sharedPrefsDir exists public void testMigrateSessionStore notMigrated throws Exception final File sharedPrefsDir getSharedPreferencesDir getContext clearSharePrefs sharedPrefsDir createSharedPrefsFolder sharedPrefsDir createFile sharedPrefsDir TEST PREFERENCE migrationHelper migrateSessionStore getContext KIT IDENTIFIER EXPECTED PREFERENCE final File expected new File sharedPrefsDir EXPECTED PREFERENCE assertTrue expected exists final File oldPrefFile new File sharedPrefsDir TEST PREFERENCE assertFalse oldPrefFile exists public void testMigrateSessionStore alreadyMigrated throws Exception final File sharedPrefsDir getSharedPreferencesDir getContext clearSharePrefs sharedPrefsDir createSharedPrefsFolder sharedPrefsDir createFile sharedPrefsDir TEST PREFERENCE createFile sharedPrefsDir EXPECTED PREFERENCE migrationHelper migrateSessionStore getContext KIT IDENTIFIER EXPECTED PREFERENCE final File expected new File sharedPrefsDir EXPECTED PREFERENCE assertTrue expected exists final File oldPrefFile new File sharedPrefsDir TEST PREFERENCE assertTrue oldPrefFile exists public void testPrefixFileNameFilter throws Exception final FilenameFilter filter new MigrationHelper PrefixFileNameFilter KIT IDENTIFIER assertFalse filter accept null foo xml assertTrue filter accept null KIT IDENTIFIER foo xml public void testFileLastModifiedComparator final Comparator File comparator new MigrationHelper FileLastModifiedComparator final File file1 mock File class when file1 lastModified thenReturn 100L final File file2 mock File class when file2 lastModified thenReturn 200L assertEquals 1 comparator compare file1 file2 assertEquals 1 comparator compare file2 file1 private void clearSharePrefs File sharedPrefsFolder final File files sharedPrefsFolder listFiles if files null return for File file files file delete private void createSharedPrefsFolder File sharedPrefsFolder if sharedPrefsFolder exists sharedPrefsFolder mkdir private void deleteSharedPrefsFolder File sharedPrefsFolder if sharedPrefsFolder exists sharedPrefsFolder delete private File getSharedPreferencesDir Context context return new File context getApplicationInfo dataDir SHARED PREFS DIR private File createFile File sharedPrefsFolder String name final File result new File sharedPrefsFolder name try result createNewFile catch IOException e Ignore return resultpackage com twitter sdk android tweetui internal import android animation ValueAnimator import android content Context import android graphics Matrix import android graphics RectF import android graphics drawable Drawable import android util AttributeSet import android view GestureDetector import android view MotionEvent import android view ScaleGestureDetector import android view animation AccelerateDecelerateInterpolator import android widget ImageView public class MultiTouchImageView extends ImageView private final static long SCALE ANIMATION DURATION 300L private final static float DOUBLE TAP SCALE FACTOR 2 0f private final static float MINIMUM SCALE FACTOR 1 0f final ScaleGestureDetector scaleGestureDetector final GestureDetector gestureDetector final Matrix drawMatrix new Matrix final Matrix baseMatrix new Matrix final Matrix updateMatrix new Matrix final RectF viewRect new RectF Used to avoid allocating new objects final RectF drawRect new RectF final float matrixValues new float 9 public MultiTouchImageView Context context this context null public MultiTouchImageView Context context AttributeSet attrs this context attrs 0 public MultiTouchImageView Context context AttributeSet attrs int defStyleAttr super context attrs defStyleAttr scaleGestureDetector new ScaleGestureDetector context new ScaleGestureDetector SimpleOnScaleGestureListener Override public boolean onScale ScaleGestureDetector scaleGestureDetector setScale scaleGestureDetector getScaleFactor scaleGestureDetector getFocusX scaleGestureDetector getFocusY setImageMatrix return true Override public void onScaleEnd ScaleGestureDetector detector if getScale MINIMUM SCALE FACTOR reset setImageMatrix gestureDetector new GestureDetector context new GestureDetector SimpleOnGestureListener Override public boolean onScroll MotionEvent e1 MotionEvent e2 float dx float dy setTranslate dx dy setImageMatrix return true Override public boolean onDoubleTap MotionEvent e if getScale MINIMUM SCALE FACTOR animateScale getScale MINIMUM SCALE FACTOR e getX e getY else animateScale getScale DOUBLE TAP SCALE FACTOR e getX e getY return true boolean isInitializationComplete final Drawable drawable getDrawable return drawable null drawable getIntrinsicWidth 0 Override protected void onLayout boolean changed int left int top int right int bottom super onLayout changed left top right bottom if isInitializationComplete initializeViewRect initializeBaseMatrix getDrawable setImageMatrix void initializeViewRect viewRect set getPaddingLeft getPaddingTop getWidth getPaddingRight getHeight getPaddingBottom void initializeBaseMatrix Drawable drawable final int drawableWidth drawable getIntrinsicWidth final int drawableHeight drawable getIntrinsicHeight final RectF srcRect new RectF 0 0 drawableWidth drawableHeight baseMatrix reset baseMatrix setRectToRect srcRect viewRect Matrix ScaleToFit CENTER Override public boolean onTouchEvent MotionEvent event if isInitializationComplete return false Do not allow touch events to be intercepted usually for gallery swipes by default getParent requestDisallowInterceptTouchEvent true boolean retVal scaleGestureDetector onTouchEvent event retVal gestureDetector onTouchEvent event retVal return retVal super onTouchEvent event void setScale float ds float px float py updateMatrix postScale ds ds px py float getScale updateMatrix getValues matrixValues return matrixValues Matrix MSCALE X void setTranslate float dx float dy updateMatrix postTranslate dx dy void reset updateMatrix reset void updateMatrixBounds final RectF rect getDrawRect getDrawMatrix float dy 0 float dx 0 if rect height viewRect height dy viewRect height rect height 2 rect top else if rect top 0 dy rect top else if rect bottom viewRect height dy viewRect height rect bottom if rect width viewRect width dx viewRect width rect width 2 rect left else if rect left 0 dx rect left else if rect right viewRect width dx viewRect width rect right setTranslate dx dy RectF getDrawRect Matrix matrix final Drawable drawable getDrawable if drawable null drawRect set 0 0 drawable getIntrinsicWidth drawable getIntrinsicHeight matrix mapRect drawRect return drawRect Matrix getDrawMatrix drawMatrix set baseMatrix drawMatrix postConcat updateMatrix return drawMatrix void setImageMatrix updateMatrixBounds setScaleType ScaleType MATRIX setImageMatrix getDrawMatrix void animateScale float start float end final float px final float py final ValueAnimator animator ValueAnimator ofFloat start end animator setDuration SCALE ANIMATION DURATION animator setInterpolator new AccelerateDecelerateInterpolator animator addUpdateListener new ValueAnimator AnimatorUpdateListener Override public void onAnimationUpdate ValueAnimator valueAnimator final float scale float valueAnimator getAnimatedValue final float ds scale getScale setScale ds px py setImageMatrix animator startpackage com kaku colorfulnews utils import android app Activity import android content Context import android content SharedPreferences import android support design widget TabLayout import android view View import android view ViewGroup import android view inputmethod InputMethodManager import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews common Constants import com socks library KLog import java lang reflect Field import java text ParseException import java text SimpleDateFormat import java util Date import java util Locale import retrofit2 adapter rxjava HttpException import rx Subscription public class MyUtils public static boolean isNightMode SharedPreferences preferences App getAppContext getSharedPreferences Constants SHARES COLOURFUL NEWS Activity MODE PRIVATE return preferences getBoolean Constants NIGHT THEME MODE false public static void saveTheme boolean isNight SharedPreferences preferences App getAppContext getSharedPreferences Constants SHARES COLOURFUL NEWS Activity MODE PRIVATE SharedPreferences Editor editor preferences edit editor putBoolean Constants NIGHT THEME MODE isNight editor apply public static SharedPreferences getSharedPreferences return App getAppContext getSharedPreferences Constants SHARES COLOURFUL NEWS Context MODE PRIVATE public static String formatDate String before String after try Date date new SimpleDateFormat yyyy MM dd HH mm ss Locale getDefault parse before after new SimpleDateFormat MM dd HH mm Locale getDefault format date catch ParseException e KLog e e toString return before return after public static int getStatusBarHeight Activity activity int height 0 int resourceId activity getResources getIdentifier status bar height dimen android if resourceId 0 height activity getResources getDimensionPixelSize resourceId return height public static void dynamicSetTabLayoutMode TabLayout tabLayout int tabWidth calculateTabWidth tabLayout int screenWidth getScreenWith if tabWidth screenWidth tabLayout setTabMode TabLayout MODE FIXED else tabLayout setTabMode TabLayout MODE SCROLLABLE private static int calculateTabWidth TabLayout tabLayout int tabWidth 0 for int i 0 i tabLayout getChildCount i final View view tabLayout getChildAt i view measure 0 0 view tabWidth view getMeasuredWidth return tabWidth public static int getScreenWith return App getAppContext getResources getDisplayMetrics widthPixels public static int getColor int nightColor int dayColor int color if MyUtils isNightMode color nightColor else color dayColor return color public static String analyzeNetworkError Throwable e String errMsg App getAppContext getString R string load error if e instanceof HttpException int state HttpException e code if state 403 errMsg App getAppContext getString R string retry after return errMsg public static void cancelSubscription Subscription subscription if subscription null subscription isUnsubscribed subscription unsubscribe public static void fixInputMethodManagerLeak Context destContext if destContext null return InputMethodManager imm InputMethodManager destContext getSystemService Context INPUT METHOD SERVICE if imm null return String arr new String mCurRootView mServedView mNextServedView Field f Object obj get for String param arr try f imm getClass getDeclaredField param if f isAccessible f setAccessible true author sodino mail sodino qq com obj get f get imm if obj get null obj get instanceof View View v get View obj get if v get getContext destContext InputMethodManager context f set imm null path to gc else for break catch Throwable t t printStackTrace public static View getRootView Activity context return ViewGroup context findViewById android R id content getChildAt 0package com kaku colorfulnews utils import android content Context import android net ConnectivityManager import android net NetworkInfo import android widget Toast import com kaku colorfulnews App import com kaku colorfulnews R public class NetUtil public static boolean isNetworkAvailable ConnectivityManager connectivityManager ConnectivityManager App getAppContext getSystemService Context CONNECTIVITY SERVICE if connectivityManager null NetworkInfo info connectivityManager getActiveNetworkInfo if info null info isConnected if info getState NetworkInfo State CONNECTED return true return false public static boolean isNetworkErrThenShowMsg if isNetworkAvailable TODO app Snackbar why Toast makeText App getAppContext App getAppContext getString R string internet error Toast LENGTH SHORT show return true return falsepackage com kaku colorfulnews mvp presenter impl import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews mvp interactor NewsInteractor import com kaku colorfulnews mvp interactor impl NewsInteractorImpl import com kaku colorfulnews mvp presenter NewsPresenter import com kaku colorfulnews mvp presenter base BasePresenterImpl import com kaku colorfulnews mvp view NewsView import java util List import javax inject Inject public class NewPresenterImpl extends BasePresenterImpl NewsView List NewsChannelTable implements NewsPresenter private NewsInteractor List NewsChannelTable mNewsInteractor Inject public NewPresenterImpl NewsInteractorImpl newsInteractor mNewsInteractor newsInteractor Override public void onCreate super onCreate loadNewsChannels private void loadNewsChannels mSubscription mNewsInteractor lodeNewsChannels this Override public void success List NewsChannelTable data super success data mView initViewPager data Override public void onChannelDbChanged loadNewsChannelspackage com kaku colorfulnews mvp ui activities import android content Intent import android os Bundle import android support design widget FloatingActionButton import android support design widget NavigationView import android support design widget Snackbar import android support design widget TabLayout import android support v4 app Fragment import android support v4 view ViewPager import android support v4 widget DrawerLayout import android support v7 widget Toolbar import android view View import com kaku colorfulnews R import com kaku colorfulnews common Constants import com kaku colorfulnews event ChannelChangeEvent import com kaku colorfulnews event ScrollToTopEvent import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews mvp presenter impl NewPresenterImpl import com kaku colorfulnews mvp ui activities base BaseActivity import com kaku colorfulnews mvp ui adapter PagerAdapter NewsFragmentPagerAdapter import com kaku colorfulnews mvp ui fragment NewsListFragment import com kaku colorfulnews mvp view NewsView import com kaku colorfulnews utils MyUtils import com kaku colorfulnews utils RxBus import java util ArrayList import java util List import javax inject Inject import butterknife BindView import butterknife OnClick import rx functions Action1 public class NewsActivity extends BaseActivity implements NewsView private String mCurrentViewPagerName private List String mChannelNames BindView R id toolbar Toolbar mToolbar BindView R id tabs TabLayout mTabs BindView R id view pager ViewPager mViewPager BindView R id nav view NavigationView mNavView BindView R id fab FloatingActionButton mFab BindView R id drawer layout DrawerLayout mDrawerLayout Inject NewPresenterImpl mNewsPresenter private List Fragment mNewsFragmentList new ArrayList Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState mSubscription RxBus getInstance toObservable ChannelChangeEvent class subscribe new Action1 ChannelChangeEvent Override public void call ChannelChangeEvent channelChangeEvent mNewsPresenter onChannelDbChanged Override public int getLayoutId return R layout activity news Override public void initInjector mActivityComponent inject this Override public void initViews mIsHasNavigationView true mBaseNavView mNavView mPresenter mNewsPresenter mPresenter attachView this OnClick R id fab R id add channel iv public void onClick View view switch view getId case R id fab RxBus getInstance post new ScrollToTopEvent break case R id add channel iv Intent intent new Intent this NewsChannelActivity class startActivity intent break Override public void initViewPager List NewsChannelTable newsChannels final List String channelNames new ArrayList if newsChannels null setNewsList newsChannels channelNames setViewPager channelNames private void setNewsList List NewsChannelTable newsChannels List String channelNames mNewsFragmentList clear for NewsChannelTable newsChannel newsChannels NewsListFragment newsListFragment createListFragments newsChannel mNewsFragmentList add newsListFragment channelNames add newsChannel getNewsChannelName private NewsListFragment createListFragments NewsChannelTable newsChannel NewsListFragment fragment new NewsListFragment Bundle bundle new Bundle bundle putString Constants NEWS ID newsChannel getNewsChannelId bundle putString Constants NEWS TYPE newsChannel getNewsChannelType bundle putInt Constants CHANNEL POSITION newsChannel getNewsChannelIndex fragment setArguments bundle return fragment private void setViewPager List String channelNames NewsFragmentPagerAdapter adapter new NewsFragmentPagerAdapter getSupportFragmentManager channelNames mNewsFragmentList mViewPager setAdapter adapter mTabs setupWithViewPager mViewPager MyUtils dynamicSetTabLayoutMode mTabs mTabs setTabsFromPagerAdapter adapter setPageChangeListener mChannelNames channelNames int currentViewPagerPosition getCurrentViewPagerPosition mViewPager setCurrentItem currentViewPagerPosition false private int getCurrentViewPagerPosition int position 0 if mCurrentViewPagerName null for int i 0 i mChannelNames size i if mCurrentViewPagerName equals mChannelNames get i position i return position private void setPageChangeListener mViewPager addOnPageChangeListener new ViewPager OnPageChangeListener Override public void onPageScrolled int position float positionOffset int positionOffsetPixels Override public void onPageSelected int position mCurrentViewPagerName mChannelNames get position Override public void onPageScrollStateChanged int state Override public void showProgress Override public void hideProgress Override public void showMsg String message Snackbar make mFab message Snackbar LENGTH SHORT showpackage com kaku colorfulnews mvp ui activities import android support v7 widget Toolbar import android view View import android webkit WebChromeClient import android webkit WebSettings import android webkit WebView import android webkit WebViewClient import android widget ProgressBar import com kaku colorfulnews R import com kaku colorfulnews common Constants import com kaku colorfulnews mvp ui activities base BaseActivity import butterknife BindView public class NewsBrowserActivity extends BaseActivity BindView R id toolbar Toolbar mToolbar BindView R id web view WebView mWebView BindView R id progress bar ProgressBar mProgressBar Override public int getLayoutId return R layout activity news browser Override public void initInjector Override public void initViews mToolbar setTitle getIntent getStringExtra Constants NEWS TITLE initWebView private void initWebView setWebViewSettings setWebView private void setWebViewSettings WebSettings webSettings mWebView getSettings webSettings setUseWideViewPort true webview webSettings setLoadWithOverviewMode true webSettings setJavaScriptEnabled true js webSettings setSupportZoom true webSettings setBuiltInZoomControls true http blog csdn net dreamer0924 article details 34082687 webSettings setAppCacheEnabled true webSettings setCacheMode WebSettings LOAD CACHE ELSE NETWORK private void setWebView mWebView loadUrl getIntent getStringExtra Constants NEWS LINK mWebView setWebViewClient new WebViewClient Override public boolean shouldOverrideUrlLoading WebView view String url if url null view loadUrl url return true mWebView setWebChromeClient new WebChromeClient Override public void onProgressChanged WebView view int newProgress super onProgressChanged view newProgress if newProgress 100 mProgressBar setVisibility View GONE else mProgressBar setVisibility View VISIBLE mProgressBar setProgress newProgress Override protected void onDestroy super onDestroy mWebView removeAllViews mWebView destroypackage com kaku colorfulnews mvp ui activities import android os Bundle import android support design widget Snackbar import android support v7 widget DefaultItemAnimator import android support v7 widget GridLayoutManager import android support v7 widget LinearLayoutManager import android support v7 widget RecyclerView import android support v7 widget Toolbar import android support v7 widget helper ItemTouchHelper import android view View import com kaku colorfulnews R import com kaku colorfulnews event ChannelItemMoveEvent import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews listener OnItemClickListener import com kaku colorfulnews mvp presenter impl NewsChannelPresenterImpl import com kaku colorfulnews mvp ui activities base BaseActivity import com kaku colorfulnews mvp ui adapter NewsChannelAdapter import com kaku colorfulnews widget ItemDragHelperCallback import com kaku colorfulnews mvp view NewsChannelView import com kaku colorfulnews utils RxBus import java util List import javax inject Inject import butterknife BindView import rx functions Action1 public class NewsChannelActivity extends BaseActivity implements NewsChannelView BindView R id toolbar Toolbar mToolbar BindView R id news channel mine rv RecyclerView mNewsChannelMineRv BindView R id news channel more rv RecyclerView mNewsChannelMoreRv Inject NewsChannelPresenterImpl mNewsChannelPresenter private NewsChannelAdapter mNewsChannelAdapterMine private NewsChannelAdapter mNewsChannelAdapterMore Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState mSubscription RxBus getInstance toObservable ChannelItemMoveEvent class subscribe new Action1 ChannelItemMoveEvent Override public void call ChannelItemMoveEvent channelItemMoveEvent int fromPosition channelItemMoveEvent getFromPosition int toPosition channelItemMoveEvent getToPosition mNewsChannelPresenter onItemSwap fromPosition toPosition Override public int getLayoutId return R layout activity news channel Override public void initInjector mActivityComponent inject this Override public void initViews mPresenter mNewsChannelPresenter mPresenter attachView this Override public void initRecyclerViews List NewsChannelTable newsChannelsMine List NewsChannelTable newsChannelsMore initRecyclerViewMineAndMore newsChannelsMine newsChannelsMore private void initRecyclerViewMineAndMore List NewsChannelTable newsChannelsMine List NewsChannelTable newsChannelsMore initRecyclerView mNewsChannelMineRv newsChannelsMine true initRecyclerView mNewsChannelMoreRv newsChannelsMore false private void initRecyclerView RecyclerView recyclerView List NewsChannelTable newsChannels final boolean isChannelMine recyclerView setHasFixedSize true recyclerView setLayoutManager new GridLayoutManager this 4 LinearLayoutManager VERTICAL false recyclerView setItemAnimator new DefaultItemAnimator if isChannelMine mNewsChannelAdapterMine new NewsChannelAdapter newsChannels recyclerView setAdapter mNewsChannelAdapterMine setChannelMineOnItemClick initItemDragHelper else mNewsChannelAdapterMore new NewsChannelAdapter newsChannels recyclerView setAdapter mNewsChannelAdapterMore setChannelMoreOnItemClick private void setChannelMineOnItemClick mNewsChannelAdapterMine setOnItemClickListener new OnItemClickListener Override public void onItemClick View view int position NewsChannelTable newsChannel mNewsChannelAdapterMine getData get position boolean isNewsChannelFixed newsChannel getNewsChannelFixed if isNewsChannelFixed mNewsChannelAdapterMore add mNewsChannelAdapterMore getItemCount newsChannel mNewsChannelAdapterMine delete position mNewsChannelPresenter onItemAddOrRemove newsChannel true private void setChannelMoreOnItemClick mNewsChannelAdapterMore setOnItemClickListener new OnItemClickListener Override public void onItemClick View view int position NewsChannelTable newsChannel mNewsChannelAdapterMore getData get position mNewsChannelAdapterMine add mNewsChannelAdapterMine getItemCount newsChannel mNewsChannelAdapterMore delete position mNewsChannelPresenter onItemAddOrRemove newsChannel false private void initItemDragHelper ItemDragHelperCallback itemDragHelperCallback new ItemDragHelperCallback mNewsChannelAdapterMine ItemTouchHelper itemTouchHelper new ItemTouchHelper itemDragHelperCallback itemTouchHelper attachToRecyclerView mNewsChannelMineRv mNewsChannelAdapterMine setItemDragHelperCallback itemDragHelperCallback Override public void showProgress Override public void hideProgress Override public void showMsg String message Snackbar make mNewsChannelMoreRv message Snackbar LENGTH SHORT showpackage com kaku colorfulnews mvp ui adapter import android support v4 content ContextCompat import android support v7 widget RecyclerView import android view LayoutInflater import android view MotionEvent import android view View import android view ViewGroup import android widget TextView import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews event ChannelItemMoveEvent import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews listener OnItemClickListener import com kaku colorfulnews mvp ui adapter base BaseRecyclerViewAdapter import com kaku colorfulnews widget ItemDragHelperCallback import com kaku colorfulnews utils ClickUtil import com kaku colorfulnews utils MyUtils import com kaku colorfulnews utils RxBus import java util Collections import java util List import butterknife BindView import butterknife ButterKnife public class NewsChannelAdapter extends BaseRecyclerViewAdapter NewsChannelTable implements ItemDragHelperCallback OnItemMoveListener private static final int TYPE CHANNEL FIXED 0 private static final int TYPE CHANNEL NO FIXED 1 private ItemDragHelperCallback mItemDragHelperCallback private OnItemClickListener mOnItemClickListener public void setOnItemClickListener OnItemClickListener onItemClickListener mOnItemClickListener onItemClickListener public void setItemDragHelperCallback ItemDragHelperCallback itemDragHelperCallback mItemDragHelperCallback itemDragHelperCallback public NewsChannelAdapter List NewsChannelTable newsChannelTableList super newsChannelTableList public List NewsChannelTable getData return mList Override public NewsChannelViewHolder onCreateViewHolder ViewGroup parent final int viewType View view LayoutInflater from parent getContext inflate R layout item news channel parent false final NewsChannelViewHolder newsChannelViewHolder new NewsChannelViewHolder view handleLongPress newsChannelViewHolder handleOnClick newsChannelViewHolder return newsChannelViewHolder private void handleLongPress final NewsChannelViewHolder newsChannelViewHolder if mItemDragHelperCallback null newsChannelViewHolder itemView setOnTouchListener new View OnTouchListener Override public boolean onTouch View v MotionEvent event NewsChannelTable newsChannel mList get newsChannelViewHolder getLayoutPosition boolean isChannelFixed newsChannel getNewsChannelFixed if isChannelFixed mItemDragHelperCallback setLongPressEnabled false else mItemDragHelperCallback setLongPressEnabled true return false private void handleOnClick final NewsChannelViewHolder newsChannelViewHolder if mOnItemClickListener null newsChannelViewHolder itemView setOnClickListener new View OnClickListener Override public void onClick View v if ClickUtil isFastDoubleClick mOnItemClickListener onItemClick v newsChannelViewHolder getLayoutPosition Override public void onBindViewHolder RecyclerView ViewHolder holder int position final NewsChannelTable newsChannel mList get position String newsChannelName newsChannel getNewsChannelName NewsChannelViewHolder viewHolder NewsChannelViewHolder holder viewHolder mNewsChannelTv setText newsChannelName if newsChannel getNewsChannelIndex 0 viewHolder mNewsChannelTv setTextColor ContextCompat getColor App getAppContext getColorId private int getColorId int colorId if MyUtils isNightMode colorId R color alpha 40 white else colorId R color alpha 40 black return colorId Override public int getItemViewType int position Boolean isFixed mList get position getNewsChannelFixed if isFixed return TYPE CHANNEL FIXED else return TYPE CHANNEL NO FIXED Override public boolean onItemMove int fromPosition int toPosition if isChannelFixed fromPosition toPosition return false Collections swap mList fromPosition toPosition notifyItemMoved fromPosition toPosition RxBus getInstance post new ChannelItemMoveEvent fromPosition toPosition return true private boolean isChannelFixed int fromPosition int toPosition return mList get fromPosition getNewsChannelFixed mList get toPosition getNewsChannelFixed class NewsChannelViewHolder extends RecyclerView ViewHolder BindView R id news channel tv TextView mNewsChannelTv public NewsChannelViewHolder View view super view ButterKnife bind this viewpackage com kaku colorfulnews mvp interactor import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews listener RequestCallBack import rx Subscription public interface NewsChannelInteractor T Subscription lodeNewsChannels RequestCallBack T callback void swapDb int fromPosition int toPosition void updateDb NewsChannelTable newsChannel boolean isChannelMinepackage com kaku colorfulnews mvp interactor impl import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews common Constants import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp interactor NewsChannelInteractor import com kaku colorfulnews repository db NewsChannelTableManager import com kaku colorfulnews utils TransformUtils import com socks library KLog import java util HashMap import java util List import java util Map import java util concurrent ExecutorService import java util concurrent Executors import javax inject Inject import rx Subscriber import rx Subscription public class NewsChannelInteractorImpl implements NewsChannelInteractor Map Integer List NewsChannelTable private ExecutorService mSingleThreadPool Inject public NewsChannelInteractorImpl Override public Subscription lodeNewsChannels final RequestCallBack Map Integer List NewsChannelTable callback return rx Observable create new rx Observable OnSubscribe Map Integer List NewsChannelTable Override public void call Subscriber super Map Integer List NewsChannelTable subscriber Map Integer List NewsChannelTable newsChannelListMap getNewsChannelData subscriber onNext newsChannelListMap subscriber onCompleted compose TransformUtils Map Integer List NewsChannelTable defaultSchedulers subscribe new Subscriber Map Integer List NewsChannelTable Override public void onCompleted Override public void onError Throwable e callback onError App getAppContext getString R string db error Override public void onNext Map Integer List NewsChannelTable newsChannelListMap callback success newsChannelListMap private Map Integer List NewsChannelTable getNewsChannelData Map Integer List NewsChannelTable map new HashMap List NewsChannelTable channelListMine NewsChannelTableManager loadNewsChannelsMine List NewsChannelTable channelListMore NewsChannelTableManager loadNewsChannelsMore map put Constants NEWS CHANNEL MINE channelListMine map put Constants NEWS CHANNEL MORE channelListMore return map Override public void swapDb final int fromPosition final int toPosition createThreadPool mSingleThreadPool execute new Runnable Override public void run KLog d Thread currentThread getName KLog d fromPosition fromPosition toPosition toPosition NewsChannelTable fromNewsChannel NewsChannelTableManager loadNewsChannel fromPosition NewsChannelTable toNewsChannel NewsChannelTableManager loadNewsChannel toPosition if isAdjacent fromPosition toPosition swapAdjacentIndexAndUpdate fromNewsChannel toNewsChannel else if fromPosition toPosition 0 List NewsChannelTable newsChannels NewsChannelTableManager loadNewsChannelsWithin toPosition fromPosition 1 increaseOrReduceIndexAndUpdate newsChannels true changeFromChannelIndexAndUpdate fromNewsChannel toPosition else if fromPosition toPosition 0 List NewsChannelTable newsChannels NewsChannelTableManager loadNewsChannelsWithin fromPosition 1 toPosition increaseOrReduceIndexAndUpdate newsChannels false changeFromChannelIndexAndUpdate fromNewsChannel toPosition private boolean isAdjacent int fromChannelIndex int toChannelIndex return Math abs fromChannelIndex toChannelIndex 1 private void swapAdjacentIndexAndUpdate NewsChannelTable fromNewsChannel NewsChannelTable toNewsChannel fromNewsChannel setNewsChannelIndex toPosition toNewsChannel setNewsChannelIndex fromPosition NewsChannelTableManager update fromNewsChannel NewsChannelTableManager update toNewsChannel private void increaseOrReduceIndexAndUpdate List NewsChannelTable newsChannels boolean isIncrease for NewsChannelTable newsChannel newsChannels increaseOrReduceIndex isIncrease newsChannel NewsChannelTableManager update newsChannel private void increaseOrReduceIndex boolean isIncrease NewsChannelTable newsChannel int targetIndex if isIncrease targetIndex newsChannel getNewsChannelIndex 1 else targetIndex newsChannel getNewsChannelIndex 1 newsChannel setNewsChannelIndex targetIndex private void changeFromChannelIndexAndUpdate NewsChannelTable fromNewsChannel int toPosition fromNewsChannel setNewsChannelIndex toPosition NewsChannelTableManager update fromNewsChannel Override public void updateDb final NewsChannelTable newsChannel final boolean isChannelMine createThreadPool mSingleThreadPool execute new Runnable Override public void run KLog d Thread currentThread getName int channelIndex newsChannel getNewsChannelIndex if isChannelMine List NewsChannelTable newsChannels NewsChannelTableManager loadNewsChannelsIndexGt channelIndex increaseOrReduceIndexAndUpdate newsChannels false int targetIndex NewsChannelTableManager getAllSize ChangeIsSelectAndIndex targetIndex false else List NewsChannelTable newsChannels NewsChannelTableManager loadNewsChannelsIndexLtAndIsUnselect channelIndex increaseOrReduceIndexAndUpdate newsChannels true int targetIndex NewsChannelTableManager getNewsChannelSelectSize ChangeIsSelectAndIndex targetIndex true private void ChangeIsSelectAndIndex int targetIndex boolean isSelect newsChannel setNewsChannelSelect isSelect changeFromChannelIndexAndUpdate newsChannel targetIndex private void createThreadPool if mSingleThreadPool null mSingleThreadPool Executors newSingleThreadExecutorpackage com kaku colorfulnews mvp presenter import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews mvp presenter base BasePresenter public interface NewsChannelPresenter extends BasePresenter void onItemSwap int fromPosition int toPosition void onItemAddOrRemove NewsChannelTable newsChannel boolean isChannelMinepackage com kaku colorfulnews mvp presenter impl import com kaku colorfulnews common Constants import com kaku colorfulnews event ChannelChangeEvent import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews mvp interactor impl NewsChannelInteractorImpl import com kaku colorfulnews mvp presenter NewsChannelPresenter import com kaku colorfulnews mvp presenter base BasePresenterImpl import com kaku colorfulnews mvp view NewsChannelView import com kaku colorfulnews utils RxBus import java util List import java util Map import javax inject Inject public class NewsChannelPresenterImpl extends BasePresenterImpl NewsChannelView Map Integer List NewsChannelTable implements NewsChannelPresenter private NewsChannelInteractorImpl mNewsChannelInteractor private boolean mIsChannelChanged Inject public NewsChannelPresenterImpl NewsChannelInteractorImpl newsChannelInteractor mNewsChannelInteractor newsChannelInteractor Override public void onDestroy super onDestroy if mIsChannelChanged RxBus getInstance post new ChannelChangeEvent Override public void onCreate super onCreate mNewsChannelInteractor lodeNewsChannels this Override public void success Map Integer List NewsChannelTable data super success data mView initRecyclerViews data get Constants NEWS CHANNEL MINE data get Constants NEWS CHANNEL MORE Override public void onItemSwap int fromPosition int toPosition mNewsChannelInteractor swapDb fromPosition toPosition mIsChannelChanged true Override public void onItemAddOrRemove NewsChannelTable newsChannel boolean isChannelMine mNewsChannelInteractor updateDb newsChannel isChannelMine mIsChannelChanged truepackage com kaku colorfulnews greendao THIS CODE IS GENERATED BY greenDAO DO NOT EDIT Enable keep sections if you want to edit public class NewsChannelTable private String newsChannelName private String newsChannelId private String newsChannelType private boolean newsChannelSelect private int newsChannelIndex private Boolean newsChannelFixed public NewsChannelTable public NewsChannelTable String newsChannelName this newsChannelName newsChannelName public NewsChannelTable String newsChannelName String newsChannelId String newsChannelType boolean newsChannelSelect int newsChannelIndex Boolean newsChannelFixed this newsChannelName newsChannelName this newsChannelId newsChannelId this newsChannelType newsChannelType this newsChannelSelect newsChannelSelect this newsChannelIndex newsChannelIndex this newsChannelFixed newsChannelFixed public String getNewsChannelName return newsChannelName public void setNewsChannelName String newsChannelName this newsChannelName newsChannelName public String getNewsChannelId return newsChannelId public void setNewsChannelId String newsChannelId this newsChannelId newsChannelId public String getNewsChannelType return newsChannelType public void setNewsChannelType String newsChannelType this newsChannelType newsChannelType public boolean getNewsChannelSelect return newsChannelSelect public void setNewsChannelSelect boolean newsChannelSelect this newsChannelSelect newsChannelSelect public int getNewsChannelIndex return newsChannelIndex public void setNewsChannelIndex int newsChannelIndex this newsChannelIndex newsChannelIndex public Boolean getNewsChannelFixed return newsChannelFixed public void setNewsChannelFixed Boolean newsChannelFixed this newsChannelFixed newsChannelFixedpackage com kaku colorfulnews greendao import android database Cursor import android database sqlite SQLiteDatabase import android database sqlite SQLiteStatement import de greenrobot dao AbstractDao import de greenrobot dao Property import de greenrobot dao internal DaoConfig THIS CODE IS GENERATED BY greenDAO DO NOT EDIT public class NewsChannelTableDao extends AbstractDao NewsChannelTable String public static final String TABLENAME NEWS CHANNEL TABLE public static class Properties public final static Property NewsChannelName new Property 0 String class newsChannelName true NEWS CHANNEL NAME public final static Property NewsChannelId new Property 1 String class newsChannelId false NEWS CHANNEL ID public final static Property NewsChannelType new Property 2 String class newsChannelType false NEWS CHANNEL TYPE public final static Property NewsChannelSelect new Property 3 boolean class newsChannelSelect false NEWS CHANNEL SELECT public final static Property NewsChannelIndex new Property 4 int class newsChannelIndex false NEWS CHANNEL INDEX public final static Property NewsChannelFixed new Property 5 Boolean class newsChannelFixed false NEWS CHANNEL FIXED public NewsChannelTableDao DaoConfig config super config public NewsChannelTableDao DaoConfig config DaoSession daoSession super config daoSession public static void createTable SQLiteDatabase db boolean ifNotExists String constraint ifNotExists IF NOT EXISTS db execSQL CREATE TABLE constraint NEWS CHANNEL TABLE NEWS CHANNEL NAME TEXT PRIMARY KEY NOT NULL 0 newsChannelName NEWS CHANNEL ID TEXT NOT NULL 1 newsChannelId NEWS CHANNEL TYPE TEXT NOT NULL 2 newsChannelType NEWS CHANNEL SELECT INTEGER NOT NULL 3 newsChannelSelect NEWS CHANNEL INDEX INTEGER NOT NULL 4 newsChannelIndex NEWS CHANNEL FIXED INTEGER 5 newsChannelFixed Add Indexes db execSQL CREATE INDEX constraint IDX NEWS CHANNEL TABLE NEWS CHANNEL NAME ON NEWS CHANNEL TABLE NEWS CHANNEL NAME public static void dropTable SQLiteDatabase db boolean ifExists String sql DROP TABLE ifExists IF EXISTS NEWS CHANNEL TABLE db execSQL sql Override protected void bindValues SQLiteStatement stmt NewsChannelTable entity stmt clearBindings stmt bindString 1 entity getNewsChannelName stmt bindString 2 entity getNewsChannelId stmt bindString 3 entity getNewsChannelType stmt bindLong 4 entity getNewsChannelSelect 1l 0l stmt bindLong 5 entity getNewsChannelIndex Boolean newsChannelFixed entity getNewsChannelFixed if newsChannelFixed null stmt bindLong 6 newsChannelFixed 1l 0l Override public String readKey Cursor cursor int offset return cursor getString offset 0 Override public NewsChannelTable readEntity Cursor cursor int offset NewsChannelTable entity new NewsChannelTable cursor getString offset 0 newsChannelName cursor getString offset 1 newsChannelId cursor getString offset 2 newsChannelType cursor getShort offset 3 0 newsChannelSelect cursor getInt offset 4 newsChannelIndex cursor isNull offset 5 null cursor getShort offset 5 0 newsChannelFixed return entity Override public void readEntity Cursor cursor NewsChannelTable entity int offset entity setNewsChannelName cursor getString offset 0 entity setNewsChannelId cursor getString offset 1 entity setNewsChannelType cursor getString offset 2 entity setNewsChannelSelect cursor getShort offset 3 0 entity setNewsChannelIndex cursor getInt offset 4 entity setNewsChannelFixed cursor isNull offset 5 null cursor getShort offset 5 0 Override protected String updateKeyAfterInsert NewsChannelTable entity long rowId return entity getNewsChannelName Override public String getKey NewsChannelTable entity if entity null return entity getNewsChannelName else return null Override protected boolean isEntityUpdateable return truepackage com kaku colorfulnews repository db import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews common ApiConstants import com kaku colorfulnews common Constants import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews greendao NewsChannelTableDao import com kaku colorfulnews utils MyUtils import java util Arrays import java util List import de greenrobot dao query Query public class NewsChannelTableManager public static void initDB if MyUtils getSharedPreferences getBoolean Constants INIT DB false NewsChannelTableDao dao App getNewsChannelTableDao List String channelName Arrays asList App getAppContext getResources getStringArray R array news channel name List String channelId Arrays asList App getAppContext getResources getStringArray R array news channel id for int i 0 i channelName size i NewsChannelTable entity new NewsChannelTable channelName get i channelId get i ApiConstants getType channelId get i i 5 i i 0 dao insert entity MyUtils getSharedPreferences edit putBoolean Constants INIT DB true apply public static List NewsChannelTable loadNewsChannelsMine Query NewsChannelTable newsChannelTableQuery App getNewsChannelTableDao queryBuilder where NewsChannelTableDao Properties NewsChannelSelect eq true orderAsc NewsChannelTableDao Properties NewsChannelIndex build return newsChannelTableQuery list public static List NewsChannelTable loadNewsChannelsMore Query NewsChannelTable newsChannelTableQuery App getNewsChannelTableDao queryBuilder where NewsChannelTableDao Properties NewsChannelSelect eq false orderAsc NewsChannelTableDao Properties NewsChannelIndex build return newsChannelTableQuery list public static NewsChannelTable loadNewsChannel int position return App getNewsChannelTableDao queryBuilder where NewsChannelTableDao Properties NewsChannelIndex eq position build unique public static void update NewsChannelTable newsChannelTable App getNewsChannelTableDao update newsChannelTable public static List NewsChannelTable loadNewsChannelsWithin int from int to Query NewsChannelTable newsChannelTableQuery App getNewsChannelTableDao queryBuilder where NewsChannelTableDao Properties NewsChannelIndex between from to build return newsChannelTableQuery list public static List NewsChannelTable loadNewsChannelsIndexGt int channelIndex Query NewsChannelTable newsChannelTableQuery App getNewsChannelTableDao queryBuilder where NewsChannelTableDao Properties NewsChannelIndex gt channelIndex build return newsChannelTableQuery list public static List NewsChannelTable loadNewsChannelsIndexLtAndIsUnselect int channelIndex Query NewsChannelTable newsChannelTableQuery App getNewsChannelTableDao queryBuilder where NewsChannelTableDao Properties NewsChannelIndex lt channelIndex NewsChannelTableDao Properties NewsChannelSelect eq false build return newsChannelTableQuery list public static int getAllSize return App getNewsChannelTableDao loadAll size public static int getNewsChannelSelectSize return int App getNewsChannelTableDao queryBuilder where NewsChannelTableDao Properties NewsChannelSelect eq true buildCount countpackage com kaku colorfulnews mvp view import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews mvp view base BaseView import java util List public interface NewsChannelView extends BaseView void initRecyclerViews List NewsChannelTable newsChannelsMine List NewsChannelTable newsChannelsMorepackage com kaku colorfulnews mvp entity import java util List public class NewsDetail private String body private int replyCount private String shareLink private String digest private String dkeys private String ec private String docid private boolean picnews private String title private String tid private String template private int threadVote private int threadAgainst private String replyBoard private String source private boolean hasNext private String voicecomment private String ptime private List users private List ydbaike private List link private List votes private List ImgBean img private List TopiclistNewsBean topiclist news private List TopiclistBean topiclist private List boboList private List relative sys private List apps public String getBody return body public void setBody String body this body body public int getReplyCount return replyCount public void setReplyCount int replyCount this replyCount replyCount public String getShareLink return shareLink public void setShareLink String shareLink this shareLink shareLink public String getDigest return digest public void setDigest String digest this digest digest public String getDkeys return dkeys public void setDkeys String dkeys this dkeys dkeys public String getEc return ec public void setEc String ec this ec ec public String getDocid return docid public void setDocid String docid this docid docid public boolean isPicnews return picnews public void setPicnews boolean picnews this picnews picnews public String getTitle return title public void setTitle String title this title title public String getTid return tid public void setTid String tid this tid tid public String getTemplate return template public void setTemplate String template this template template public int getThreadVote return threadVote public void setThreadVote int threadVote this threadVote threadVote public int getThreadAgainst return threadAgainst public void setThreadAgainst int threadAgainst this threadAgainst threadAgainst public String getReplyBoard return replyBoard public void setReplyBoard String replyBoard this replyBoard replyBoard public String getSource return source public void setSource String source this source source public boolean isHasNext return hasNext public void setHasNext boolean hasNext this hasNext hasNext public String getVoicecomment return voicecomment public void setVoicecomment String voicecomment this voicecomment voicecomment public String getPtime return ptime public void setPtime String ptime this ptime ptime public List getUsers return users public void setUsers List users this users users public List getYdbaike return ydbaike public void setYdbaike List ydbaike this ydbaike ydbaike public List getLink return link public void setLink List link this link link public List getVotes return votes public void setVotes List votes this votes votes public List ImgBean getImg return img public void setImg List ImgBean img this img img public List TopiclistNewsBean getTopiclist news return topiclist news public void setTopiclist news List TopiclistNewsBean topiclist news this topiclist news topiclist news public List TopiclistBean getTopiclist return topiclist public void setTopiclist List TopiclistBean topiclist this topiclist topiclist public List getBoboList return boboList public void setBoboList List boboList this boboList boboList public List getRelative sys return relative sys public void setRelative sys List relative sys this relative sys relative sys public List getApps return apps public void setApps List apps this apps apps public static class ImgBean private String ref private String pixel private String alt private String src public String getRef return ref public void setRef String ref this ref ref public String getPixel return pixel public void setPixel String pixel this pixel pixel public String getAlt return alt public void setAlt String alt this alt alt public String getSrc return src public void setSrc String src this src src public static class TopiclistNewsBean private boolean hasCover private String subnum private String alias private String tname private String ename private String tid private String cid public boolean isHasCover return hasCover public void setHasCover boolean hasCover this hasCover hasCover public String getSubnum return subnum public void setSubnum String subnum this subnum subnum public String getAlias return alias public void setAlias String alias this alias alias public String getTname return tname public void setTname String tname this tname tname public String getEname return ename public void setEname String ename this ename ename public String getTid return tid public void setTid String tid this tid tid public String getCid return cid public void setCid String cid this cid cid public static class TopiclistBean private boolean hasCover private String subnum private String alias private String tname private String ename private String tid private String cid public boolean isHasCover return hasCover public void setHasCover boolean hasCover this hasCover hasCover public String getSubnum return subnum public void setSubnum String subnum this subnum subnum public String getAlias return alias public void setAlias String alias this alias alias public String getTname return tname public void setTname String tname this tname tname public String getEname return ename public void setEname String ename this ename ename public String getTid return tid public void setTid String tid this tid tid public String getCid return cid public void setCid String cid this cid cidpackage com kaku colorfulnews mvp ui activities import android content Intent import android net Uri import android os Bundle import android support annotation NonNull import android support design widget AppBarLayout import android support design widget CollapsingToolbarLayout import android support design widget FloatingActionButton import android support design widget Snackbar import android support v4 content ContextCompat import android support v7 widget Toolbar import android text Html import android view Menu import android view MenuItem import android view View import android widget ImageView import android widget ProgressBar import android widget TextView import com bumptech glide Glide import com bumptech glide load DecodeFormat import com bumptech glide load engine DiskCacheStrategy import com daimajia androidanimations library Techniques import com daimajia androidanimations library YoYo import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews common Constants import com kaku colorfulnews mvp entity NewsDetail import com kaku colorfulnews mvp presenter impl NewsDetailPresenterImpl import com kaku colorfulnews mvp ui activities base BaseActivity import com kaku colorfulnews mvp view NewsDetailView import com kaku colorfulnews utils MyUtils import com kaku colorfulnews utils NetUtil import com kaku colorfulnews utils TransformUtils import com kaku colorfulnews widget URLImageGetter import com socks library KLog import java util List import java util concurrent TimeUnit import javax inject Inject import butterknife BindView import butterknife OnClick import rx Observable import rx Subscriber public class NewsDetailActivity extends BaseActivity implements NewsDetailView BindView R id news detail photo iv ImageView mNewsDetailPhotoIv BindView R id toolbar Toolbar mToolbar BindView R id toolbar layout CollapsingToolbarLayout mToolbarLayout BindView R id app bar AppBarLayout mAppBar BindView R id news detail from tv TextView mNewsDetailFromTv BindView R id news detail body tv TextView mNewsDetailBodyTv BindView R id fab FloatingActionButton mFab BindView R id progress bar ProgressBar mProgressBar BindView R id mask view View mMaskView Inject NewsDetailPresenterImpl mNewsDetailPresenter private URLImageGetter mUrlImageGetter private String mNewsTitle private String mShareLink Override public int getLayoutId return R layout activity news detail Override public void initInjector mActivityComponent inject this Override public void initViews String postId getIntent getStringExtra Constants NEWS POST ID mNewsDetailPresenter setPosId postId mPresenter mNewsDetailPresenter mPresenter attachView this Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState SuppressWarnings deprecation Override public void setNewsDetail NewsDetail newsDetail mShareLink newsDetail getShareLink mNewsTitle newsDetail getTitle String newsSource newsDetail getSource String newsTime MyUtils formatDate newsDetail getPtime String newsBody newsDetail getBody String NewsImgSrc getImgSrcs newsDetail setToolBarLayout mNewsTitle mNewsDetailTitleTv setText newsTitle mNewsDetailFromTv setText getString R string news from newsSource newsTime setNewsDetailPhotoIv NewsImgSrc setNewsDetailBodyTv newsDetail newsBody private void setToolBarLayout String newsTitle mToolbarLayout setTitle newsTitle mToolbarLayout setExpandedTitleColor ContextCompat getColor this R color white mToolbarLayout setCollapsedTitleTextColor ContextCompat getColor this R color primary text white private void setNewsDetailPhotoIv String imgSrc Glide with this load imgSrc asBitmap placeholder R drawable ic loading format DecodeFormat PREFER ARGB 8888 error R drawable ic load fail diskCacheStrategy DiskCacheStrategy ALL into mNewsDetailPhotoIv private void setNewsDetailBodyTv final NewsDetail newsDetail final String newsBody mSubscription Observable timer 500 TimeUnit MILLISECONDS compose TransformUtils Long defaultSchedulers subscribe new Subscriber Long Override public void onCompleted mProgressBar setVisibility View GONE mFab setVisibility View VISIBLE YoYo with Techniques RollIn playOn mFab Override public void onError Throwable e mProgressBar setVisibility View GONE Override public void onNext Long aLong setBody newsDetail newsBody private void setBody NewsDetail newsDetail String newsBody int imgTotal newsDetail getImg size if isShowBody newsBody imgTotal mNewsDetailBodyTv setMovementMethod LinkMovementMethod getInstance mUrlImageGetter new URLImageGetter mNewsDetailBodyTv newsBody imgTotal mNewsDetailBodyTv setText Html fromHtml newsBody mUrlImageGetter null else mNewsDetailBodyTv setText Html fromHtml newsBody private boolean isShowBody String newsBody int imgTotal return App isHavePhoto imgTotal 2 newsBody null private String getImgSrcs NewsDetail newsDetail List NewsDetail ImgBean imgSrcs newsDetail getImg String imgSrc if imgSrcs null imgSrcs size 0 imgSrc imgSrcs get 0 getSrc else imgSrc getIntent getStringExtra Constants NEWS IMG RES return imgSrc Override public void showProgress mProgressBar setVisibility View VISIBLE Override public void hideProgress mProgressBar setVisibility View GONE Override public void showMsg String message mProgressBar setVisibility View GONE if NetUtil isNetworkAvailable Snackbar make mAppBar message Snackbar LENGTH LONG show Override public boolean onCreateOptionsMenu Menu menu Inflate the menu this adds items to the action bar if it is present getMenuInflater inflate R menu news detail menu return true Override public boolean onOptionsItemSelected MenuItem item switch item getItemId case R id action web view openByWebView break case R id action browser openByBrowser break return super onOptionsItemSelected item private void openByWebView Intent intent new Intent this NewsBrowserActivity class intent putExtra Constants NEWS LINK mShareLink intent putExtra Constants NEWS TITLE mNewsTitle startActivity intent private void openByBrowser Intent intent new Intent intent setAction android intent action VIEW if canBrowse intent Uri uri Uri parse mShareLink intent setData uri startActivity intent private boolean canBrowse Intent intent return intent resolveActivity getPackageManager null mShareLink null Override protected void onDestroy cancelUrlImageGetterSubscription super onDestroy private void cancelUrlImageGetterSubscription try if mUrlImageGetter null mUrlImageGetter mSubscription null mUrlImageGetter mSubscription isUnsubscribed mUrlImageGetter mSubscription unsubscribe KLog d UrlImageGetter unsubscribe catch Exception e KLog e UrlImageGetter Subscription e toString OnClick R id fab public void onClick share private void share Intent intent new Intent Intent ACTION SEND intent setType text plain intent putExtra Intent EXTRA SUBJECT getString R string share intent putExtra Intent EXTRA TEXT getShareContents startActivity Intent createChooser intent getTitle NonNull private String getShareContents if mShareLink null mShareLink return getString R string share contents mNewsTitle mShareLinkpackage com kaku colorfulnews mvp interactor import com kaku colorfulnews listener RequestCallBack import rx Subscription public interface NewsDetailInteractor T Subscription loadNewsDetail RequestCallBack T callBack String postIdpackage com kaku colorfulnews mvp interactor impl import com kaku colorfulnews App import com kaku colorfulnews common HostType import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp entity NewsDetail import com kaku colorfulnews mvp interactor NewsDetailInteractor import com kaku colorfulnews repository network RetrofitManager import com kaku colorfulnews utils MyUtils import com kaku colorfulnews utils TransformUtils import com socks library KLog import java util List import java util Map import javax inject Inject import rx Observer import rx Subscription import rx functions Func1 public class NewsDetailInteractorImpl implements NewsDetailInteractor NewsDetail Inject public NewsDetailInteractorImpl Override public Subscription loadNewsDetail final RequestCallBack NewsDetail callBack final String postId return RetrofitManager getInstance HostType NETEASE NEWS VIDEO getNewsDetailObservable postId map new Func1 Map String NewsDetail NewsDetail Override public NewsDetail call Map String NewsDetail map KLog d Thread currentThread getName NewsDetail newsDetail map get postId changeNewsDetail newsDetail return newsDetail compose TransformUtils NewsDetail defaultSchedulers subscribe new Observer NewsDetail Override public void onCompleted Override public void onError Throwable e KLog e e toString callBack onError MyUtils analyzeNetworkError e Override public void onNext NewsDetail newsDetail callBack success newsDetail private void changeNewsDetail NewsDetail newsDetail List NewsDetail ImgBean imgSrcs newsDetail getImg if isChange imgSrcs String newsBody newsDetail getBody newsBody changeNewsBody imgSrcs newsBody newsDetail setBody newsBody private boolean isChange List NewsDetail ImgBean imgSrcs return imgSrcs null imgSrcs size 2 App isHavePhoto private String changeNewsBody List NewsDetail ImgBean imgSrcs String newsBody for int i 0 i imgSrcs size i String oldChars IMG i String newChars if i 0 newChars else newChars img src imgSrcs get i getSrc newsBody newsBody replace oldChars newChars return newsBodypackage com kaku colorfulnews mvp presenter import com kaku colorfulnews mvp presenter base BasePresenter public interface NewsDetailPresenter extends BasePresenter void setPosId String postIdpackage com kaku colorfulnews mvp presenter impl import com kaku colorfulnews mvp entity NewsDetail import com kaku colorfulnews mvp interactor NewsDetailInteractor import com kaku colorfulnews mvp interactor impl NewsDetailInteractorImpl import com kaku colorfulnews mvp presenter NewsDetailPresenter import com kaku colorfulnews mvp presenter base BasePresenterImpl import com kaku colorfulnews mvp view NewsDetailView import javax inject Inject public class NewsDetailPresenterImpl extends BasePresenterImpl NewsDetailView NewsDetail implements NewsDetailPresenter private NewsDetailInteractor NewsDetail mNewsDetailInteractor private String mPostId Inject public NewsDetailPresenterImpl NewsDetailInteractorImpl newsDetailInteractor mNewsDetailInteractor newsDetailInteractor Override public void onCreate super onCreate mSubscription mNewsDetailInteractor loadNewsDetail this mPostId Override public void success NewsDetail data super success data mView setNewsDetail data Override public void setPosId String postId mPostId postIdpackage com kaku colorfulnews mvp view import com kaku colorfulnews mvp entity NewsDetail import com kaku colorfulnews mvp view base BaseView public interface NewsDetailView extends BaseView void setNewsDetail NewsDetail newsDetailpackage com kaku colorfulnews mvp ui adapter PagerAdapter import android support v4 app Fragment import android support v4 app FragmentManager import android support v4 app FragmentPagerAdapter import java util ArrayList import java util List public class NewsFragmentPagerAdapter extends FragmentPagerAdapter private final List String mTitles private List Fragment mNewsFragmentList new ArrayList public NewsFragmentPagerAdapter FragmentManager fm List String titles List Fragment newsFragmentList super fm mTitles titles mNewsFragmentList newsFragmentList Override public CharSequence getPageTitle int position return mTitles get position Override public Fragment getItem int position return mNewsFragmentList get position Override public int getCount return mNewsFragmentList sizepackage com kaku colorfulnews mvp interactor import com kaku colorfulnews listener RequestCallBack import rx Subscription public interface NewsInteractor T Subscription lodeNewsChannels RequestCallBack T callbackpackage com kaku colorfulnews mvp interactor impl import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp interactor NewsInteractor import com kaku colorfulnews repository db NewsChannelTableManager import com kaku colorfulnews utils TransformUtils import java util List import javax inject Inject import rx Observable import rx Subscriber import rx Subscription public class NewsInteractorImpl implements NewsInteractor List NewsChannelTable Inject public NewsInteractorImpl Override public Subscription lodeNewsChannels final RequestCallBack List NewsChannelTable callback return Observable create new Observable OnSubscribe List NewsChannelTable Override public void call Subscriber super List NewsChannelTable subscriber NewsChannelTableManager initDB subscriber onNext NewsChannelTableManager loadNewsChannelsMine subscriber onCompleted compose TransformUtils List NewsChannelTable defaultSchedulers subscribe new Subscriber List NewsChannelTable Override public void onCompleted Override public void onError Throwable e callback onError App getAppContext getString R string db error Override public void onNext List NewsChannelTable newsChannelTables callback success newsChannelTablespackage com kaku colorfulnews mvp ui adapter import android support v7 widget RecyclerView import android text TextUtils import android view View import android view ViewGroup import android widget ImageView import android widget LinearLayout import android widget TextView import com bumptech glide Glide import com bumptech glide load DecodeFormat import com bumptech glide load engine DiskCacheStrategy import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews listener OnItemClickListener import com kaku colorfulnews mvp entity NewsSummary import com kaku colorfulnews mvp ui adapter base BaseRecyclerViewAdapter import com kaku colorfulnews utils DimenUtil import java util List import javax inject Inject import butterknife BindView import butterknife ButterKnife public class NewsListAdapter extends BaseRecyclerViewAdapter NewsSummary public static final int TYPE PHOTO ITEM 2 public interface OnNewsListItemClickListener extends OnItemClickListener void onItemClick View view int position boolean isPhoto Inject public NewsListAdapter super null Override public RecyclerView ViewHolder onCreateViewHolder ViewGroup parent final int viewType View view switch viewType case TYPE FOOTER view getView parent R layout item news footer return new FooterViewHolder view case TYPE ITEM view getView parent R layout item news final ItemViewHolder itemViewHolder new ItemViewHolder view setItemOnClickEvent itemViewHolder false return itemViewHolder case TYPE PHOTO ITEM view getView parent R layout item news photo final PhotoViewHolder photoItemViewHolder new PhotoViewHolder view setItemOnClickEvent photoItemViewHolder true return photoItemViewHolder default throw new RuntimeException there is no type that matches the type viewType make sure your using types correctly private void setItemOnClickEvent final RecyclerView ViewHolder holder final boolean isPhoto if mOnItemClickListener null holder itemView setOnClickListener new View OnClickListener Override public void onClick View v OnNewsListItemClickListener mOnItemClickListener onItemClick v holder getLayoutPosition isPhoto Override public int getItemViewType int position if mIsShowFooter isFooterPosition position return TYPE FOOTER else if TextUtils isEmpty mList get position getDigest return TYPE ITEM else return TYPE PHOTO ITEM Override public void onBindViewHolder final RecyclerView ViewHolder holder int position setValues holder position setItemAppearAnimation holder position R anim anim bottom in private void setValues RecyclerView ViewHolder holder int position if holder instanceof ItemViewHolder setItemValues ItemViewHolder holder position else if holder instanceof PhotoViewHolder setPhotoItemValues PhotoViewHolder holder position private void setItemValues ItemViewHolder holder int position NewsSummary newsSummary mList get position String title newsSummary getLtitle if title null title newsSummary getTitle String ptime newsSummary getPtime String digest newsSummary getDigest String imgSrc newsSummary getImgsrc holder mNewsSummaryTitleTv setText title holder mNewsSummaryPtimeTv setText ptime holder mNewsSummaryDigestTv setText digest Glide with App getAppContext load imgSrc asBitmap gif format DecodeFormat PREFER ARGB 8888 diskCacheStrategy DiskCacheStrategy ALL placeholder R color image place holder error R drawable ic load fail into holder mNewsSummaryPhotoIv private void setPhotoItemValues PhotoViewHolder holder int position NewsSummary newsSummary mList get position setTextView holder newsSummary setImageView holder newsSummary private void setTextView PhotoViewHolder holder NewsSummary newsSummary String title newsSummary getTitle String ptime newsSummary getPtime holder mNewsSummaryTitleTv setText title holder mNewsSummaryPtimeTv setText ptime private void setImageView PhotoViewHolder holder NewsSummary newsSummary int PhotoThreeHeight int DimenUtil dp2px 90 int PhotoTwoHeight int DimenUtil dp2px 120 int PhotoOneHeight int DimenUtil dp2px 150 String imgSrcLeft null String imgSrcMiddle null String imgSrcRight null ViewGroup LayoutParams layoutParams holder mNewsSummaryPhotoIvGroup getLayoutParams if newsSummary getAds null List NewsSummary AdsBean adsBeanList newsSummary getAds int size adsBeanList size if size 3 imgSrcLeft adsBeanList get 0 getImgsrc imgSrcMiddle adsBeanList get 1 getImgsrc imgSrcRight adsBeanList get 2 getImgsrc layoutParams height PhotoThreeHeight holder mNewsSummaryTitleTv setText App getAppContext getString R string photo collections adsBeanList get 0 getTitle else if size 2 imgSrcLeft adsBeanList get 0 getImgsrc imgSrcMiddle adsBeanList get 1 getImgsrc layoutParams height PhotoTwoHeight else if size 1 imgSrcLeft adsBeanList get 0 getImgsrc layoutParams height PhotoOneHeight else if newsSummary getImgextra null int size newsSummary getImgextra size if size 3 imgSrcLeft newsSummary getImgextra get 0 getImgsrc imgSrcMiddle newsSummary getImgextra get 1 getImgsrc imgSrcRight newsSummary getImgextra get 2 getImgsrc layoutParams height PhotoThreeHeight else if size 2 imgSrcLeft newsSummary getImgextra get 0 getImgsrc imgSrcMiddle newsSummary getImgextra get 1 getImgsrc layoutParams height PhotoTwoHeight else if size 1 imgSrcLeft newsSummary getImgextra get 0 getImgsrc layoutParams height PhotoOneHeight else imgSrcLeft newsSummary getImgsrc layoutParams height PhotoOneHeight setPhotoImageView holder imgSrcLeft imgSrcMiddle imgSrcRight holder mNewsSummaryPhotoIvGroup setLayoutParams layoutParams private void setPhotoImageView PhotoViewHolder holder String imgSrcLeft String imgSrcMiddle String imgSrcRight if imgSrcLeft null showAndSetPhoto holder mNewsSummaryPhotoIvLeft imgSrcLeft else hidePhoto holder mNewsSummaryPhotoIvLeft if imgSrcMiddle null showAndSetPhoto holder mNewsSummaryPhotoIvMiddle imgSrcMiddle else hidePhoto holder mNewsSummaryPhotoIvMiddle if imgSrcRight null showAndSetPhoto holder mNewsSummaryPhotoIvRight imgSrcRight else hidePhoto holder mNewsSummaryPhotoIvRight private void showAndSetPhoto ImageView imageView String imgSrc imageView setVisibility View VISIBLE Glide with App getAppContext load imgSrc asBitmap format DecodeFormat PREFER ARGB 8888 diskCacheStrategy DiskCacheStrategy ALL placeholder R color image place holder error R drawable ic load fail into imageView private void hidePhoto ImageView imageView imageView setVisibility View GONE Override public void onViewDetachedFromWindow RecyclerView ViewHolder holder super onViewDetachedFromWindow holder if isShowingAnimation holder holder itemView clearAnimation private boolean isShowingAnimation RecyclerView ViewHolder holder return holder itemView getAnimation null holder itemView getAnimation hasStarted class ItemViewHolder extends RecyclerView ViewHolder BindView R id news summary photo iv ImageView mNewsSummaryPhotoIv BindView R id news summary title tv TextView mNewsSummaryTitleTv BindView R id news summary digest tv TextView mNewsSummaryDigestTv BindView R id news summary ptime tv TextView mNewsSummaryPtimeTv public ItemViewHolder View view super view ButterKnife bind this view class PhotoViewHolder extends RecyclerView ViewHolder BindView R id news summary title tv TextView mNewsSummaryTitleTv BindView R id news summary photo iv group LinearLayout mNewsSummaryPhotoIvGroup BindView R id news summary photo iv left ImageView mNewsSummaryPhotoIvLeft BindView R id news summary photo iv middle ImageView mNewsSummaryPhotoIvMiddle BindView R id news summary photo iv right ImageView mNewsSummaryPhotoIvRight BindView R id news summary ptime tv TextView mNewsSummaryPtimeTv public PhotoViewHolder View view super view ButterKnife bind this viewpackage com kaku colorfulnews mvp ui fragment import android annotation TargetApi import android app Activity import android app ActivityOptions import android content Intent import android os Build import android os Bundle import android support annotation NonNull import android support annotation Nullable import android support design widget Snackbar import android support v4 app ActivityCompat import android support v4 app ActivityOptionsCompat import android support v4 widget SwipeRefreshLayout import android support v7 widget DefaultItemAnimator import android support v7 widget LinearLayoutManager import android support v7 widget RecyclerView import android view View import android widget ImageView import android widget ProgressBar import android widget TextView import com kaku colorfulnews R import com kaku colorfulnews common Constants import com kaku colorfulnews common LoadNewsType import com kaku colorfulnews event ScrollToTopEvent import com kaku colorfulnews mvp entity NewsSummary import com kaku colorfulnews mvp entity NewsPhotoDetail import com kaku colorfulnews mvp presenter impl NewsListPresenterImpl import com kaku colorfulnews mvp ui activities NewsDetailActivity import com kaku colorfulnews mvp ui activities NewsPhotoDetailActivity import com kaku colorfulnews mvp ui adapter NewsListAdapter import com kaku colorfulnews mvp ui fragment base BaseFragment import com kaku colorfulnews mvp view NewsListView import com kaku colorfulnews utils NetUtil import com kaku colorfulnews utils RxBus import java util ArrayList import java util List import javax inject Inject import butterknife BindView import butterknife OnClick import rx functions Action1 import static android support v7 widget RecyclerView LayoutManager import static android support v7 widget RecyclerView OnScrollListener public class NewsListFragment extends BaseFragment implements NewsListView NewsListAdapter OnNewsListItemClickListener SwipeRefreshLayout OnRefreshListener BindView R id news rv RecyclerView mNewsRV BindView R id progress bar ProgressBar mProgressBar BindView R id swipe refresh layout SwipeRefreshLayout mSwipeRefreshLayout BindView R id empty view TextView mEmptyView Inject NewsListAdapter mNewsListAdapter Inject NewsListPresenterImpl mNewsListPresenter Inject Activity mActivity private String mNewsId private String mNewsType private boolean mIsAllLoaded Override public void initInjector mFragmentComponent inject this Override public void initViews View view initSwipeRefreshLayout initRecyclerView initPresenter registerScrollToTopEvent private void initSwipeRefreshLayout mSwipeRefreshLayout setOnRefreshListener this mSwipeRefreshLayout setColorSchemeColors getActivity getResources getIntArray R array gplus colors private void initPresenter mNewsListPresenter setNewsTypeAndId mNewsType mNewsId mPresenter mNewsListPresenter mPresenter attachView this mPresenter onCreate private void registerScrollToTopEvent mSubscription RxBus getInstance toObservable ScrollToTopEvent class subscribe new Action1 ScrollToTopEvent Override public void call ScrollToTopEvent scrollToTopEvent mNewsRV getLayoutManager scrollToPosition 0 private void initRecyclerView mNewsRV setHasFixedSize true mNewsRV setLayoutManager new LinearLayoutManager mActivity LinearLayoutManager VERTICAL false mNewsRV setItemAnimator new DefaultItemAnimator mNewsRV addOnScrollListener new OnScrollListener Override public void onScrollStateChanged RecyclerView recyclerView int newState super onScrollStateChanged recyclerView newState LayoutManager layoutManager recyclerView getLayoutManager int lastVisibleItemPosition LinearLayoutManager layoutManager findLastVisibleItemPosition int visibleItemCount layoutManager getChildCount int totalItemCount layoutManager getItemCount if mIsAllLoaded visibleItemCount 0 newState RecyclerView SCROLL STATE IDLE lastVisibleItemPosition totalItemCount 1 mNewsListPresenter loadMore mNewsListAdapter showFooter mNewsRV scrollToPosition mNewsListAdapter getItemCount 1 mNewsListAdapter setOnItemClickListener this mNewsRV setAdapter mNewsListAdapter Override public int getLayoutId return R layout fragment news Override public void onCreate Nullable Bundle savedInstanceState super onCreate savedInstanceState initValues NetUtil isNetworkErrThenShowMsg private void initValues if getArguments null mNewsId getArguments getString Constants NEWS ID mNewsType getArguments getString Constants NEWS TYPE Override public void onResume super onResume Override public void showProgress mProgressBar setVisibility View VISIBLE Override public void hideProgress mProgressBar setVisibility View GONE Override public void setNewsList List NewsSummary newsSummary LoadNewsType checker int loadType switch loadType case LoadNewsType TYPE REFRESH SUCCESS mSwipeRefreshLayout setRefreshing false mNewsListAdapter setList newsSummary mNewsListAdapter notifyDataSetChanged checkIsEmpty newsSummary break case LoadNewsType TYPE REFRESH ERROR mSwipeRefreshLayout setRefreshing false checkIsEmpty newsSummary break case LoadNewsType TYPE LOAD MORE SUCCESS mNewsListAdapter hideFooter if newsSummary null newsSummary size 0 mIsAllLoaded true Snackbar make mNewsRV getString R string no more Snackbar LENGTH SHORT show else mNewsListAdapter addMore newsSummary break case LoadNewsType TYPE LOAD MORE ERROR mNewsListAdapter hideFooter break private void checkIsEmpty List NewsSummary newsSummary if newsSummary null mNewsListAdapter getList null mNewsRV setVisibility View GONE mEmptyView setVisibility View VISIBLE else mNewsRV setVisibility View VISIBLE mEmptyView setVisibility View GONE Override public void showMsg String message mProgressBar setVisibility View GONE if NetUtil isNetworkAvailable Snackbar make mNewsRV message Snackbar LENGTH LONG show Override public void onDestroyView super onDestroyView mNewsListPresenter onDestroy TargetApi Build VERSION CODES LOLLIPOP Override public void onItemClick View view int position boolean isPhoto if isPhoto NewsPhotoDetail newsPhotoDetail getPhotoDetail position goToPhotoDetailActivity newsPhotoDetail else goToNewsDetailActivity view position private NewsPhotoDetail getPhotoDetail int position NewsSummary newsSummary mNewsListAdapter getList get position NewsPhotoDetail newsPhotoDetail new NewsPhotoDetail newsPhotoDetail setTitle newsSummary getTitle setPictures newsSummary newsPhotoDetail return newsPhotoDetail private void setPictures NewsSummary newsSummary NewsPhotoDetail newsPhotoDetail List NewsPhotoDetail Picture pictureList new ArrayList if newsSummary getAds null for NewsSummary AdsBean entity newsSummary getAds setValuesAndAddToList pictureList entity getTitle entity getImgsrc else if newsSummary getImgextra null for NewsSummary ImgextraBean entity newsSummary getImgextra setValuesAndAddToList pictureList null entity getImgsrc else setValuesAndAddToList pictureList null newsSummary getImgsrc newsPhotoDetail setPictures pictureList private void setValuesAndAddToList List NewsPhotoDetail Picture pictureList String title String imgsrc NewsPhotoDetail Picture picture new NewsPhotoDetail Picture if title null picture setTitle title picture setImgSrc imgsrc pictureList add picture private void goToPhotoDetailActivity NewsPhotoDetail newsPhotoDetail Intent intent new Intent getActivity NewsPhotoDetailActivity class intent putExtra Constants PHOTO DETAIL newsPhotoDetail startActivity intent private void goToNewsDetailActivity View view int position Intent intent setIntent position startActivity view intent NonNull private Intent setIntent int position List NewsSummary newsSummaryList mNewsListAdapter getList Intent intent new Intent mActivity NewsDetailActivity class intent putExtra Constants NEWS POST ID newsSummaryList get position getPostid intent putExtra Constants NEWS IMG RES newsSummaryList get position getImgsrc return intent private void startActivity View view Intent intent ImageView newsSummaryPhotoIv ImageView view findViewById R id news summary photo iv if Build VERSION SDK INT Build VERSION CODES LOLLIPOP ActivityOptions options ActivityOptions makeSceneTransitionAnimation mActivity newsSummaryPhotoIv Constants TRANSITION ANIMATION NEWS PHOTOS startActivity intent options toBundle else Activity ActivityOptionsCompat options ActivityOptionsCompat makeScaleUpAnimation view view getWidth 2 view getHeight 2 0 0 ActivityCompat startActivity mActivity intent options toBundle Override public void onRefresh mNewsListPresenter refreshData OnClick R id empty view public void onClick mSwipeRefreshLayout setRefreshing true mNewsListPresenter refreshData Override public void onItemClick View view int positionpackage com kaku colorfulnews mvp interactor import com kaku colorfulnews listener RequestCallBack import rx Subscription public interface NewsListInteractor T Subscription loadNews RequestCallBack T listener String type String id int startPagepackage com kaku colorfulnews mvp interactor impl import com kaku colorfulnews common ApiConstants import com kaku colorfulnews common HostType import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp entity NewsSummary import com kaku colorfulnews mvp interactor NewsListInteractor import com kaku colorfulnews repository network RetrofitManager import com kaku colorfulnews utils MyUtils import com kaku colorfulnews utils TransformUtils import com socks library KLog import java util List import java util Map import javax inject Inject import rx Observable import rx Subscriber import rx Subscription import rx functions Func1 import rx functions Func2 public class NewsListInteractorImpl implements NewsListInteractor List NewsSummary private boolean mIsNetError Inject public NewsListInteractorImpl Override public Subscription loadNews final RequestCallBack List NewsSummary listener String type final String id int startPage mIsNetError false API observeOn MainThread onComplete unsubscribe call cancel NetworkOnMainThreadException unsubscribeOn io return RetrofitManager getInstance HostType NETEASE NEWS VIDEO getNewsListObservable type id startPage flatMap new Func1 Map String List NewsSummary Observable NewsSummary Override public Observable NewsSummary call Map String List NewsSummary map if id endsWith ApiConstants HOUSE ID id key return Observable from map get return Observable from map get id map new Func1 NewsSummary NewsSummary Override public NewsSummary call NewsSummary newsSummary String ptime MyUtils formatDate newsSummary getPtime newsSummary setPtime ptime return newsSummary toList distinct toSortedList new Func2 NewsSummary NewsSummary Integer Override public Integer call NewsSummary newsSummary NewsSummary newsSummary2 return newsSummary2 getPtime compareTo newsSummary getPtime compose TransformUtils List NewsSummary defaultSchedulers subscribe new Subscriber List NewsSummary Override public void onCompleted KLog d checkNetState listener Override public void onError Throwable e KLog e e toString checkNetState listener if NetUtil isNetworkAvailable App getAppContext listener onError MyUtils analyzeNetworkError e Override public void onNext List NewsSummary newsSummaries KLog d listener success newsSummaries private void checkNetState RequestCallBack List NewsSummary listener if NetUtil isNetworkAvailable App getAppContext mIsNetError true listener onError App getAppContext getString R string internet error else mIsNetError falsepackage com kaku colorfulnews mvp interactor impl public class NewsListInteractorSamplepackage com kaku colorfulnews mvp presenter import com kaku colorfulnews mvp presenter base BasePresenter public interface NewsListPresenter extends BasePresenter void setNewsTypeAndId String newsType String newsId void refreshData void loadMorepackage com kaku colorfulnews mvp presenter impl import com kaku colorfulnews mvp entity NewsSummary import com kaku colorfulnews common LoadNewsType import com kaku colorfulnews mvp interactor NewsListInteractor import com kaku colorfulnews mvp interactor impl NewsListInteractorImpl import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp presenter NewsListPresenter import com kaku colorfulnews mvp presenter base BasePresenterImpl import com kaku colorfulnews mvp view NewsListView import java util List import javax inject Inject public class NewsListPresenterImpl extends BasePresenterImpl NewsListView List NewsSummary implements NewsListPresenter RequestCallBack List NewsSummary private NewsListInteractor List NewsSummary mNewsListInteractor private String mNewsType private String mNewsId private int mStartPage private boolean misFirstLoad private boolean mIsRefresh true Inject public NewsListPresenterImpl NewsListInteractorImpl newsListInteractor mNewsListInteractor newsListInteractor Override public void onCreate if mView null loadNewsData Override public void beforeRequest if misFirstLoad mView showProgress Override public void onError String errorMsg super onError errorMsg if mView null int loadType mIsRefresh LoadNewsType TYPE REFRESH ERROR LoadNewsType TYPE LOAD MORE ERROR mView setNewsList null loadType Override public void success List NewsSummary items misFirstLoad true if items null mStartPage 20 int loadType mIsRefresh LoadNewsType TYPE REFRESH SUCCESS LoadNewsType TYPE LOAD MORE SUCCESS if mView null mView setNewsList items loadType mView hideProgress Override public void setNewsTypeAndId String newsType String newsId mNewsType newsType mNewsId newsId Override public void refreshData mStartPage 0 mIsRefresh true loadNewsData Override public void loadMore mIsRefresh false loadNewsData private void loadNewsData mSubscription mNewsListInteractor loadNews this mNewsType mNewsId mStartPagepackage com kaku colorfulnews mvp view import com kaku colorfulnews mvp entity NewsSummary import com kaku colorfulnews common LoadNewsType import com kaku colorfulnews mvp view base BaseView import java util List public interface NewsListView extends BaseView void setNewsList List NewsSummary newsSummary LoadNewsType checker int loadTypepackage com kaku colorfulnews mvp entity import android os Parcel import android os Parcelable import java util ArrayList import java util List public class NewsPhotoDetail implements Parcelable private String title private List Picture pictures public String getTitle return title public void setTitle String title this title title public List Picture getPictures return pictures public void setPictures List Picture pictures this pictures pictures public static class Picture implements Parcelable private String title public String getImgSrc return imgSrc public void setImgSrc String imgSrc this imgSrc imgSrc public String getTitle return title public void setTitle String title this title title private String imgSrc Override public int describeContents return 0 Override public void writeToParcel Parcel dest int flags dest writeString this title dest writeString this imgSrc public Picture protected Picture Parcel in this title in readString this imgSrc in readString public static final Creator Picture CREATOR new Creator Picture Override public Picture createFromParcel Parcel source return new Picture source Override public Picture newArray int size return new Picture size Override public int describeContents return 0 Override public void writeToParcel Parcel dest int flags dest writeString this title dest writeList this pictures public NewsPhotoDetail protected NewsPhotoDetail Parcel in this title in readString this pictures new ArrayList in readList this pictures Picture class getClassLoader public static final Parcelable Creator NewsPhotoDetail CREATOR new Parcelable Creator NewsPhotoDetail Override public NewsPhotoDetail createFromParcel Parcel source return new NewsPhotoDetail source Override public NewsPhotoDetail newArray int size return new NewsPhotoDetail sizepackage com kaku colorfulnews mvp ui activities import android animation Animator import android animation ObjectAnimator import android os Bundle import android support v4 view ViewPager import android support v7 widget Toolbar import android view View import android widget TextView import com kaku colorfulnews R import com kaku colorfulnews common Constants import com kaku colorfulnews event PhotoDetailOnClickEvent import com kaku colorfulnews mvp entity NewsPhotoDetail import com kaku colorfulnews mvp ui activities base BaseActivity import com kaku colorfulnews mvp ui adapter PagerAdapter PhotoPagerAdapter import com kaku colorfulnews mvp ui fragment PhotoDetailFragment import com kaku colorfulnews widget PhotoViewPager import com kaku colorfulnews utils RxBus import java util ArrayList import java util List import butterknife BindView import rx functions Action1 public class NewsPhotoDetailActivity extends BaseActivity BindView R id toolbar Toolbar mToolbar BindView R id viewpager PhotoViewPager mViewpager BindView R id photo detail title tv TextView mPhotoDetailTitleTv private List PhotoDetailFragment mPhotoDetailFragmentList new ArrayList private NewsPhotoDetail mNewsPhotoDetail Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState mSubscription RxBus getInstance toObservable PhotoDetailOnClickEvent class subscribe new Action1 PhotoDetailOnClickEvent Override public void call PhotoDetailOnClickEvent photoDetailOnClickEvent if mPhotoDetailTitleTv getVisibility View VISIBLE startAnimation View GONE 0 9f 0 5f else mPhotoDetailTitleTv setVisibility View VISIBLE startAnimation View VISIBLE 0 5f 0 9f private void startAnimation final int endState float startValue float endValue ObjectAnimator animator ObjectAnimator ofFloat mPhotoDetailTitleTv alpha startValue endValue setDuration 200 animator addListener new Animator AnimatorListener Override public void onAnimationStart Animator animation Override public void onAnimationEnd Animator animation mPhotoDetailTitleTv setVisibility endState Override public void onAnimationCancel Animator animation Override public void onAnimationRepeat Animator animation animator start Override public int getLayoutId return R layout activity news photo detail Override public void initInjector mActivityComponent inject this Override public void initViews mNewsPhotoDetail getIntent getParcelableExtra Constants PHOTO DETAIL createFragment mNewsPhotoDetail initViewPager setPhotoDetailTitle 0 private void createFragment NewsPhotoDetail newsPhotoDetail mPhotoDetailFragmentList clear for NewsPhotoDetail Picture picture newsPhotoDetail getPictures PhotoDetailFragment fragment new PhotoDetailFragment Bundle bundle new Bundle bundle putString Constants PHOTO DETAIL IMGSRC picture getImgSrc fragment setArguments bundle mPhotoDetailFragmentList add fragment private void initViewPager PhotoPagerAdapter photoPagerAdapter new PhotoPagerAdapter getSupportFragmentManager mPhotoDetailFragmentList mViewpager setAdapter photoPagerAdapter mViewpager addOnPageChangeListener new ViewPager OnPageChangeListener Override public void onPageScrolled int position float positionOffset int positionOffsetPixels Override public void onPageSelected int position setPhotoDetailTitle position Override public void onPageScrollStateChanged int state public void setPhotoDetailTitle int position String title getTitle position mPhotoDetailTitleTv setText getString R string photo detail title position 1 mPhotoDetailFragmentList size title private String getTitle int position String title mNewsPhotoDetail getPictures get position getTitle if title null title mNewsPhotoDetail getTitle return titlepackage com kaku colorfulnews mvp presenter import com kaku colorfulnews mvp presenter base BasePresenter public interface NewsPresenter extends BasePresenter void onChannelDbChangedpackage com kaku colorfulnews repository network import com kaku colorfulnews mvp entity GirlData import com kaku colorfulnews mvp entity NewsDetail import com kaku colorfulnews mvp entity NewsSummary import java util List import java util Map import okhttp3 ResponseBody import retrofit2 http GET import retrofit2 http Header import retrofit2 http Path import retrofit2 http Url import rx Observable public interface NewsService GET nc article type id startPage 20 html Observable Map String List NewsSummary getNewsList Header Cache Control String cacheControl Path type String type Path id String id Path startPage int startPage GET nc article postId full html Observable Map String NewsDetail getNewDetail Header Cache Control String cacheControl Path postId String postId GET Observable ResponseBody getNewsBodyHtmlPhoto Url String photoPath Url URL url baseUrl baseUrl GET data size page Observable GirlData getPhotoList Path size int size Path page int pagepackage com kaku colorfulnews mvp entity import java util List public class NewsSummary private String postid private boolean hasCover private int hasHead private int replyCount private int hasImg private String digest private boolean hasIcon private String docid private String title private String ltitle private int order private int priority private String lmodify private String boardid private String photosetID private String template private int votecount private String skipID private String alias private String skipType private String cid private int hasAD private String source private String ename private String imgsrc private String tname private String ptime private List AdsBean ads private List ImgextraBean imgextra public String getPostid return postid public void setPostid String postid this postid postid public boolean isHasCover return hasCover public void setHasCover boolean hasCover this hasCover hasCover public int getHasHead return hasHead public void setHasHead int hasHead this hasHead hasHead public int getReplyCount return replyCount public void setReplyCount int replyCount this replyCount replyCount public int getHasImg return hasImg public void setHasImg int hasImg this hasImg hasImg public String getDigest return digest public void setDigest String digest this digest digest public boolean isHasIcon return hasIcon public void setHasIcon boolean hasIcon this hasIcon hasIcon public String getDocid return docid public void setDocid String docid this docid docid public String getTitle return title public void setTitle String title this title title public String getLtitle return ltitle public void setLtitle String ltitle this ltitle ltitle public int getOrder return order public void setOrder int order this order order public int getPriority return priority public void setPriority int priority this priority priority public String getLmodify return lmodify public void setLmodify String lmodify this lmodify lmodify public String getBoardid return boardid public void setBoardid String boardid this boardid boardid public String getPhotosetID return photosetID public void setPhotosetID String photosetID this photosetID photosetID public String getTemplate return template public void setTemplate String template this template template public int getVotecount return votecount public void setVotecount int votecount this votecount votecount public String getSkipID return skipID public void setSkipID String skipID this skipID skipID public String getAlias return alias public void setAlias String alias this alias alias public String getSkipType return skipType public void setSkipType String skipType this skipType skipType public String getCid return cid public void setCid String cid this cid cid public int getHasAD return hasAD public void setHasAD int hasAD this hasAD hasAD public String getSource return source public void setSource String source this source source public String getEname return ename public void setEname String ename this ename ename public String getImgsrc return imgsrc public void setImgsrc String imgsrc this imgsrc imgsrc public String getTname return tname public void setTname String tname this tname tname public String getPtime return ptime public void setPtime String ptime this ptime ptime public List AdsBean getAds return ads public void setAds List AdsBean ads this ads ads public List ImgextraBean getImgextra return imgextra public void setImgextra List ImgextraBean imgextra this imgextra imgextra public static class AdsBean private String title private String tag private String imgsrc private String subtitle private String url public String getTitle return title public void setTitle String title this title title public String getTag return tag public void setTag String tag this tag tag public String getImgsrc return imgsrc public void setImgsrc String imgsrc this imgsrc imgsrc public String getSubtitle return subtitle public void setSubtitle String subtitle this subtitle subtitle public String getUrl return url public void setUrl String url this url url public static class ImgextraBean private String imgsrc public String getImgsrc return imgsrc public void setImgsrc String imgsrc this imgsrc imgsrcpackage com kaku colorfulnews mvp view import com kaku colorfulnews greendao NewsChannelTable import com kaku colorfulnews mvp view base BaseView import java util List public interface NewsView extends BaseView void initViewPager List NewsChannelTable newsChannelspackage com twitter sdk android core internal oauth import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthToken import java util HashMap import java util Map public class OAuth1aHeaders public static final String HEADER AUTH SERVICE PROVIDER X Auth Service Provider public static final String HEADER AUTH CREDENTIALS X Verify Credentials Authorization public String getAuthorizationHeader TwitterAuthConfig authConfig TwitterAuthToken authToken String callback String method String url Map String String postParams final OAuth1aParameters oAuth1aParameters getOAuth1aParameters authConfig authToken callback method url postParams return oAuth1aParameters getAuthorizationHeader public Map String String getOAuthEchoHeaders TwitterAuthConfig authConfig TwitterAuthToken authToken String callback String method String url Map String String postParams final Map String String headers new HashMap 2 final String authorizationHeader getAuthorizationHeader authConfig authToken callback method url postParams headers put HEADER AUTH CREDENTIALS authorizationHeader headers put HEADER AUTH SERVICE PROVIDER url return headers OAuth1aParameters getOAuth1aParameters TwitterAuthConfig authConfig TwitterAuthToken authToken String callback String method String url Map String String postParams return new OAuth1aParameters authConfig authToken callback method url postParamspackage com twitter sdk android core internal network import com twitter sdk android core Session import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthToken import com twitter sdk android core internal oauth OAuth1aHeaders import com twitter sdk android core internal oauth OAuthConstants import java io IOException import java util HashMap import java util Locale import java util Map import io fabric sdk android services network UrlUtils import okhttp3 FormBody import okhttp3 HttpUrl import okhttp3 Interceptor import okhttp3 Request import okhttp3 RequestBody import okhttp3 Response public class OAuth1aInterceptor implements Interceptor final Session extends TwitterAuthToken session final TwitterAuthConfig authConfig public OAuth1aInterceptor Session extends TwitterAuthToken session TwitterAuthConfig authConfig this session session this authConfig authConfig Override public Response intercept Chain chain throws IOException final Request request chain request final Request hackRequest request newBuilder url urlWorkaround request url build final Request newRequest hackRequest newBuilder header OAuthConstants HEADER AUTHORIZATION getAuthorizationHeader hackRequest build return chain proceed newRequest HttpUrl urlWorkaround HttpUrl url final HttpUrl Builder builder url newBuilder query null final int size url querySize for int i 0 i size i builder addEncodedQueryParameter UrlUtils percentEncode url queryParameterName i UrlUtils percentEncode url queryParameterValue i return builder build String getAuthorizationHeader Request request throws IOException return new OAuth1aHeaders getAuthorizationHeader authConfig session getAuthToken null request method request url toString getPostParams request Map String String getPostParams Request request throws IOException final Map String String params new HashMap if POST equals request method toUpperCase Locale US final RequestBody output request body if output instanceof FormBody final FormBody body FormBody output for int i 0 i body size i params put body encodedName i body value i return paramspackage com twitter sdk android core internal oauth import io fabric sdk android Fabric import io fabric sdk android services network HttpRequest import io fabric sdk android services network UrlUtils import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthToken import com twitter sdk android core TwitterCore import java io UnsupportedEncodingException import java net URI import java security InvalidKeyException import java security NoSuchAlgorithmException import java security SecureRandom import java util Locale import java util Map import java util TreeMap import javax crypto Mac import javax crypto SecretKey import javax crypto spec SecretKeySpec class OAuth1aParameters private static final String VERSION 1 0 private static final String SIGNATURE METHOD HMAC SHA1 private static final SecureRandom RAND new SecureRandom private final TwitterAuthConfig authConfig private final TwitterAuthToken authToken private final String callback private final String method private final String url private final Map String String postParams public OAuth1aParameters TwitterAuthConfig authConfig TwitterAuthToken authToken String callback String method String url Map String String postParams this authConfig authConfig this authToken authToken this callback callback this method method this url url this postParams postParams public String getAuthorizationHeader final String nonce getNonce final String timestamp getTimestamp final String signatureBase constructSignatureBase nonce timestamp final String signature calculateSignature signatureBase return constructAuthorizationHeader nonce timestamp signature private String getNonce return String valueOf System nanoTime String valueOf Math abs RAND nextLong private String getTimestamp final long secondsFromEpoch System currentTimeMillis 1000 return Long toString secondsFromEpoch String constructSignatureBase String nonce String timestamp Get query parameters from request final URI uri URI create url final TreeMap String String params UrlUtils getQueryParams uri true if postParams null params putAll postParams Add OAuth parameters if callback null params put OAuthConstants PARAM CALLBACK callback params put OAuthConstants PARAM CONSUMER KEY authConfig getConsumerKey params put OAuthConstants PARAM NONCE nonce params put OAuthConstants PARAM SIGNATURE METHOD SIGNATURE METHOD params put OAuthConstants PARAM TIMESTAMP timestamp if authToken null authToken token null params put OAuthConstants PARAM TOKEN authToken token params put OAuthConstants PARAM VERSION VERSION Construct the signature base final String baseUrl uri getScheme uri getHost uri getPath final StringBuilder sb new StringBuilder append method toUpperCase Locale ENGLISH append append UrlUtils percentEncode baseUrl append append getEncodedQueryParams params return sb toString private String getEncodedQueryParams TreeMap String String params final StringBuilder paramsBuf new StringBuilder final int numParams params size int current 0 for Map Entry String String entry params entrySet paramsBuf append UrlUtils percentEncode UrlUtils percentEncode entry getKey append 3D append UrlUtils percentEncode UrlUtils percentEncode entry getValue current 1 if current numParams paramsBuf append 26 return paramsBuf toString String calculateSignature String signatureBase try final String key getSigningKey Calculate the signature by passing both the signature base and signing key to the HMAC SHA1 hashing algorithm final byte signatureBaseBytes signatureBase getBytes UrlUtils UTF8 final byte keyBytes key getBytes UrlUtils UTF8 final SecretKey secretKey new SecretKeySpec keyBytes HmacSHA1 final Mac mac Mac getInstance HmacSHA1 mac init secretKey final byte signatureBytes mac doFinal signatureBaseBytes return new String HttpRequest Base64 encodeBytesToBytes signatureBytes 0 signatureBytes length UrlUtils UTF8 catch InvalidKeyException e Fabric getLogger e TwitterCore TAG Failed to calculate signature e return catch NoSuchAlgorithmException e Fabric getLogger e TwitterCore TAG Failed to calculate signature e return catch UnsupportedEncodingException e Fabric getLogger e TwitterCore TAG Failed to calculate signature e return private String getSigningKey final String tokenSecret authToken null authToken secret null return new StringBuilder append UrlUtils urlEncode authConfig getConsumerSecret append append UrlUtils urlEncode tokenSecret toString String constructAuthorizationHeader String nonce String timestamp String signature final StringBuilder sb new StringBuilder OAuth appendParameter sb OAuthConstants PARAM CALLBACK callback appendParameter sb OAuthConstants PARAM CONSUMER KEY authConfig getConsumerKey appendParameter sb OAuthConstants PARAM NONCE nonce appendParameter sb OAuthConstants PARAM SIGNATURE signature appendParameter sb OAuthConstants PARAM SIGNATURE METHOD SIGNATURE METHOD appendParameter sb OAuthConstants PARAM TIMESTAMP timestamp final String token authToken null authToken token null appendParameter sb OAuthConstants PARAM TOKEN token appendParameter sb OAuthConstants PARAM VERSION VERSION Remove the extra at the end return sb substring 0 sb length 1 private void appendParameter StringBuilder sb String name String value if value null sb append append UrlUtils percentEncode name append append UrlUtils percentEncode value appendpackage com twitter sdk android core internal oauth import android net Uri import io fabric sdk android services network UrlUtils import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthException import com twitter sdk android core TwitterAuthToken import com twitter sdk android core TwitterException import com twitter sdk android core internal TwitterApi import java io BufferedReader import java io IOException import java io InputStreamReader import java util TreeMap import javax net ssl SSLSocketFactory import okhttp3 ResponseBody import retrofit2 Call import retrofit2 http Header import retrofit2 http POST import retrofit2 http Query public class OAuth1aService extends OAuthService interface OAuthApi POST oauth request token Call ResponseBody getTempToken Header OAuthConstants HEADER AUTHORIZATION String auth POST oauth access token Call ResponseBody getAccessToken Header OAuthConstants HEADER AUTHORIZATION String auth Query OAuthConstants PARAM VERIFIER String verifier private static final String RESOURCE OAUTH oauth private static final String CALLBACK URL twittersdk callback private static final String PARAM SCREEN NAME screen name private static final String PARAM USER ID user id OAuthApi api public OAuth1aService TwitterCore twitterCore SSLSocketFactory sslSocketFactory TwitterApi api super twitterCore sslSocketFactory api this api getRetrofit create OAuthApi class public void requestTempToken final Callback OAuthResponse callback final TwitterAuthConfig config getTwitterCore getAuthConfig final String url getTempTokenUrl api getTempToken new OAuth1aHeaders getAuthorizationHeader config null buildCallbackUrl config POST url null enqueue getCallbackWrapper callback String getTempTokenUrl return getApi getBaseHostUrl oauth request token public String buildCallbackUrl TwitterAuthConfig authConfig return Uri parse CALLBACK URL buildUpon appendQueryParameter version getTwitterCore getVersion appendQueryParameter app authConfig getConsumerKey build toString public void requestAccessToken final Callback OAuthResponse callback TwitterAuthToken requestToken String verifier final String url getAccessTokenUrl final String authHeader new OAuth1aHeaders getAuthorizationHeader getTwitterCore getAuthConfig requestToken null POST url null api getAccessToken authHeader verifier enqueue getCallbackWrapper callback String getAccessTokenUrl return getApi getBaseHostUrl oauth access token public String getAuthorizeUrl TwitterAuthToken requestToken https api twitter com oauth authorize oauth token s return getApi buildUponBaseHostUrl RESOURCE OAUTH authorize appendQueryParameter OAuthConstants PARAM TOKEN requestToken token build toString public static OAuthResponse parseAuthResponse String response final TreeMap String String params UrlUtils getQueryParams response false final String token params get OAuthConstants PARAM TOKEN final String secret params get OAuthConstants PARAM TOKEN SECRET final String userName params get PARAM SCREEN NAME final long userId if params containsKey PARAM USER ID userId Long parseLong params get PARAM USER ID else userId 0L if token null secret null return null else return new OAuthResponse new TwitterAuthToken token secret userName userId Callback ResponseBody getCallbackWrapper final Callback OAuthResponse callback return new Callback ResponseBody Override public void success Result ResponseBody result Try to get response body BufferedReader reader null final StringBuilder sb new StringBuilder try try reader new BufferedReader new InputStreamReader result data byteStream String line while line reader readLine null sb append line finally if reader null reader close final String responseAsStr sb toString final OAuthResponse authResponse parseAuthResponse responseAsStr if authResponse null callback failure new TwitterAuthException Failed to parse auth response responseAsStr else callback success new Result authResponse null catch IOException e callback failure new TwitterAuthException e getMessage e Override public void failure TwitterException exception callback failure exceptionpackage com twitter sdk android core internal oauth import io fabric sdk android Fabric import io fabric sdk android services network HttpRequest import io fabric sdk android services network UrlUtils import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterException import com twitter sdk android core internal TwitterApi import javax net ssl SSLSocketFactory import retrofit2 Call import retrofit2 http Field import retrofit2 http FormUrlEncoded import retrofit2 http Header import retrofit2 http Headers import retrofit2 http POST public class OAuth2Service extends OAuthService OAuth2Api api interface OAuth2Api POST 1 1 guest activate json Call GuestTokenResponse getGuestToken Header OAuthConstants HEADER AUTHORIZATION String auth Headers Content Type application x www form urlencoded charset UTF 8 FormUrlEncoded POST oauth2 token Call OAuth2Token getAppAuthToken Header OAuthConstants HEADER AUTHORIZATION String auth Field OAuthConstants PARAM GRANT TYPE String grantType public OAuth2Service TwitterCore twitterCore SSLSocketFactory sslSocketFactory TwitterApi api super twitterCore sslSocketFactory api this api getRetrofit create OAuth2Api class public void requestGuestAuthToken final Callback GuestAuthToken callback final Callback OAuth2Token appAuthCallback new Callback OAuth2Token Override public void success Result OAuth2Token result final OAuth2Token appAuthToken result data Got back an app auth token now request a guest auth token final Callback GuestTokenResponse guestTokenCallback new Callback GuestTokenResponse Override public void success Result GuestTokenResponse result Return a GuestAuthToken that includes the guestToken final GuestAuthToken guestAuthToken new GuestAuthToken appAuthToken getTokenType appAuthToken getAccessToken result data guestToken callback success new Result guestAuthToken null Override public void failure TwitterException error Fabric getLogger e TwitterCore TAG Your app may not allow guest auth Please talk to us regarding upgrading your consumer key error callback failure error requestGuestToken guestTokenCallback appAuthToken Override public void failure TwitterException error Fabric getLogger e TwitterCore TAG Failed to get app auth token error if callback null callback failure error requestAppAuthToken appAuthCallback void requestAppAuthToken final Callback OAuth2Token callback api getAppAuthToken getAuthHeader OAuthConstants GRANT TYPE CLIENT CREDENTIALS enqueue callback void requestGuestToken final Callback GuestTokenResponse callback OAuth2Token appAuthToken api getGuestToken getAuthorizationHeader appAuthToken enqueue callback private String getAuthorizationHeader OAuth2Token token return OAuthConstants AUTHORIZATION BEARER token getAccessToken private String getAuthHeader final TwitterAuthConfig authConfig getTwitterCore getAuthConfig return OAuthConstants AUTHORIZATION BASIC HttpRequest Base64 encode UrlUtils percentEncode authConfig getConsumerKey UrlUtils percentEncode authConfig getConsumerSecretpackage com twitter sdk android core internal oauth import android os Parcel import android os Parcelable import com google gson annotations SerializedName import com twitter sdk android core AuthToken public class OAuth2Token extends AuthToken implements Parcelable public static final String TOKEN TYPE BEARER bearer public static final Parcelable Creator OAuth2Token CREATOR new Parcelable Creator OAuth2Token public OAuth2Token createFromParcel Parcel in return new OAuth2Token in public OAuth2Token newArray int size return new OAuth2Token size SerializedName token type private final String tokenType SerializedName access token private final String accessToken public OAuth2Token String tokenType String accessToken super this tokenType tokenType this accessToken accessToken public OAuth2Token String tokenType String accessToken long createdAt super createdAt this tokenType tokenType this accessToken accessToken private OAuth2Token Parcel in super tokenType in readString accessToken in readString public String getTokenType return tokenType public String getAccessToken return accessToken Override public boolean isExpired Oauth 2 0 tokens do not have a common expiration policy Returning false indicates the token is not known to have expired App auth tokens only expire when manually invalidated while guest auth tokens are known to have expired after 3 hours return false Override public int describeContents return 0 Override public void writeToParcel Parcel out int flags out writeString tokenType out writeString accessToken Override public boolean equals Object o if this o return true if o null getClass o getClass return false final OAuth2Token that OAuth2Token o if accessToken null accessToken equals that accessToken that accessToken null return false if tokenType null tokenType equals that tokenType that tokenType null return false return true Override public int hashCode int result tokenType null tokenType hashCode 0 result 31 result accessToken null accessToken hashCode 0 return resultpackage com twitter sdk android core identity import android app Activity import android content Intent import android os Bundle import android view View import android webkit WebView import android widget ProgressBar import com twitter sdk android core R import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthException import com twitter sdk android core TwitterCore import com twitter sdk android core internal TwitterApi import com twitter sdk android core internal oauth OAuth1aService This activity assumes it will handle configuration changes itself and MUST have the following attribute defined in the AndroidManifest xml file android configChanges orientation screenSize public class OAuthActivity extends Activity implements OAuthController Listener static final String EXTRA AUTH CONFIG auth config private static final String STATE PROGRESS progress OAuthController oAuthController private ProgressBar spinner private WebView webView Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState setContentView R layout tw activity oauth spinner ProgressBar findViewById R id tw spinner webView WebView findViewById R id tw web view final boolean showProgress if savedInstanceState null showProgress savedInstanceState getBoolean STATE PROGRESS false else showProgress true spinner setVisibility showProgress View VISIBLE View GONE final TwitterCore kit TwitterCore getInstance oAuthController new OAuthController spinner webView TwitterAuthConfig getIntent getParcelableExtra EXTRA AUTH CONFIG new OAuth1aService kit kit getSSLSocketFactory new TwitterApi this oAuthController startAuth Override protected void onSaveInstanceState Bundle outState if spinner getVisibility View VISIBLE outState putBoolean STATE PROGRESS true super onSaveInstanceState outState Override public void onBackPressed oAuthController handleAuthError RESULT CANCELED new TwitterAuthException Authorization failed request was canceled Override public void onComplete int resultCode Intent data setResult resultCode data finishpackage com twitter sdk android core identity import android app Activity import android content Context import android content Intent import io fabric sdk android FabricActivityTestCase import io fabric sdk android FabricTestUtils import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthException import com twitter sdk android core TwitterCore import org mockito ArgumentCaptor import static org mockito Mockito public class OAuthActivityTest extends FabricActivityTestCase OAuthActivity private Context context private TwitterCore twitterCore private OAuthController mockController public OAuthActivityTest super OAuthActivity class Override protected void setUp throws Exception super setUp context getInstrumentation getTargetContext twitterCore new TwitterCore new TwitterAuthConfig mockController mock TestOAuthController class FabricTestUtils resetFabric FabricTestUtils with context twitterCore Override protected void tearDown throws Exception FabricTestUtils resetFabric super tearDown private void init final Intent intent new Intent context OAuthActivity class putExtra OAuthActivity EXTRA AUTH CONFIG twitterCore getAuthConfig final OAuthActivity activity startActivity intent null null activity oAuthController mockController public void testOnBackPressed init getActivity onBackPressed final ArgumentCaptor TwitterAuthException exceptionArgCaptor ArgumentCaptor forClass TwitterAuthException class verify mockController handleAuthError eq Activity RESULT CANCELED exceptionArgCaptor capture assertEquals Authorization failed request was canceled exceptionArgCaptor getValue getMessage public void testOnComplete init getActivity onComplete Activity RESULT OK new Intent assertTrue isFinishCalledpackage com twitter sdk android core internal oauth public class OAuthConstants public static final String HEADER AUTHORIZATION Authorization public static final String HEADER GUEST TOKEN x guest token OAuth1 0a parameter constants public static final String PARAM CALLBACK oauth callback public static final String PARAM CONSUMER KEY oauth consumer key public static final String PARAM NONCE oauth nonce public static final String PARAM SIGNATURE METHOD oauth signature method public static final String PARAM TIMESTAMP oauth timestamp public static final String PARAM TOKEN oauth token public static final String PARAM TOKEN SECRET oauth token secret public static final String PARAM VERSION oauth version public static final String PARAM SIGNATURE oauth signature public static final String PARAM VERIFIER oauth verifier OAuth2 public static final String AUTHORIZATION BASIC Basic public static final String AUTHORIZATION BEARER Bearer public static final String PARAM GRANT TYPE grant type public static final String GRANT TYPE CLIENT CREDENTIALS client credentialspackage com twitter sdk android core identity import android app Activity import android content Intent import android os Bundle import android view View import android webkit WebChromeClient import android webkit WebSettings import android webkit WebView import android webkit WebViewClient import android widget ProgressBar import io fabric sdk android Fabric import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthException import com twitter sdk android core TwitterAuthToken import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterException import com twitter sdk android core internal oauth OAuth1aService import com twitter sdk android core internal oauth OAuthConstants import com twitter sdk android core internal oauth OAuthResponse class OAuthController implements OAuthWebViewClient Listener interface Listener void onComplete int resultCode Intent data final Listener listener TwitterAuthToken requestToken private final ProgressBar spinner private final WebView webView private final TwitterAuthConfig authConfig private final OAuth1aService oAuth1aService OAuthController ProgressBar spinner WebView webView TwitterAuthConfig authConfig OAuth1aService oAuth1aService Listener listener this spinner spinner this webView webView this authConfig authConfig this oAuth1aService oAuth1aService this listener listener void startAuth Step 1 Obtain a request token to start the sign in flow Fabric getLogger d TwitterCore TAG Obtaining request token to start the sign in flow oAuth1aService requestTempToken newRequestTempTokenCallback Callback OAuthResponse newRequestTempTokenCallback return new Callback OAuthResponse Override public void success Result OAuthResponse result requestToken result data authToken final String authorizeUrl oAuth1aService getAuthorizeUrl requestToken Step 2 Redirect user to web view to complete authorization flow Fabric getLogger d TwitterCore TAG Redirecting user to web view to complete authorization flow setUpWebView webView new OAuthWebViewClient oAuth1aService buildCallbackUrl authConfig OAuthController this authorizeUrl new OAuthWebChromeClient Override public void failure TwitterException error Fabric getLogger e TwitterCore TAG Failed to get request token error Create new exception that can be safely serialized since Retrofit errors may throw a NotSerializableException handleAuthError AuthHandler RESULT CODE ERROR new TwitterAuthException Failed to get request token protected void handleAuthError int resultCode TwitterAuthException error final Intent data new Intent data putExtra AuthHandler EXTRA AUTH ERROR error listener onComplete resultCode data void setUpWebView WebView webView WebViewClient webViewClient String url WebChromeClient webChromeClient final WebSettings webSettings webView getSettings webSettings setAllowFileAccess false webSettings setJavaScriptEnabled false webSettings setSaveFormData false webView setVerticalScrollBarEnabled false webView setHorizontalScrollBarEnabled false webView setWebViewClient webViewClient webView loadUrl url webView setVisibility View INVISIBLE webView setWebChromeClient webChromeClient private void handleWebViewSuccess Bundle bundle Fabric getLogger d TwitterCore TAG OAuth web view completed successfully if bundle null final String verifier bundle getString OAuthConstants PARAM VERIFIER if verifier null Step 3 Convert the request token to an access token Fabric getLogger d TwitterCore TAG Converting the request token to an access token oAuth1aService requestAccessToken newRequestAccessTokenCallback requestToken verifier return If we get here we failed to complete authorization Fabric getLogger e TwitterCore TAG Failed to get authorization bundle incomplete bundle null handleAuthError AuthHandler RESULT CODE ERROR new TwitterAuthException Failed to get authorization bundle incomplete Callback OAuthResponse newRequestAccessTokenCallback return new Callback OAuthResponse Override public void success Result OAuthResponse result final Intent data new Intent final OAuthResponse response result data data putExtra AuthHandler EXTRA SCREEN NAME response userName data putExtra AuthHandler EXTRA USER ID response userId data putExtra AuthHandler EXTRA TOKEN response authToken token data putExtra AuthHandler EXTRA TOKEN SECRET response authToken secret listener onComplete Activity RESULT OK data Override public void failure TwitterException error Fabric getLogger e TwitterCore TAG Failed to get access token error Create new exception that can be safely serialized since Retrofit errors may throw a NotSerializableException handleAuthError AuthHandler RESULT CODE ERROR new TwitterAuthException Failed to get access token private void handleWebViewError WebViewException error Fabric getLogger e TwitterCore TAG OAuth web view completed with an error error handleAuthError AuthHandler RESULT CODE ERROR new TwitterAuthException OAuth web view completed with an error private void dismissWebView webView stopLoading dismissSpinner private void dismissSpinner spinner setVisibility View GONE Override public void onPageFinished WebView webView String url dismissSpinner webView setVisibility View VISIBLE Override public void onSuccess Bundle bundle handleWebViewSuccess bundle dismissWebView Override public void onError WebViewException exception handleWebViewError exception dismissWebViewpackage com twitter sdk android core identity import android app Activity import android content Intent import com twitter sdk android core Callback import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterSession class OAuthHandler extends AuthHandler public OAuthHandler TwitterAuthConfig authConfig Callback TwitterSession callback int requestCode super authConfig callback requestCode Override public boolean authorize Activity activity activity startActivityForResult newIntent activity requestCode return true Intent newIntent Activity activity final Intent intent new Intent activity OAuthActivity class intent putExtra OAuthActivity EXTRA AUTH CONFIG getAuthConfig return intentpackage com twitter sdk android core internal oauth import android os Parcel import android os Parcelable import com twitter sdk android core TwitterAuthToken public class OAuthResponse implements Parcelable public static final Parcelable Creator OAuthResponse CREATOR new Parcelable Creator OAuthResponse public OAuthResponse createFromParcel Parcel in return new OAuthResponse in public OAuthResponse newArray int size return new OAuthResponse size public final TwitterAuthToken authToken public final String userName public final long userId public OAuthResponse TwitterAuthToken authToken String userName long userId this authToken authToken this userName userName this userId userId private OAuthResponse Parcel in this authToken in readParcelable TwitterAuthToken class getClassLoader this userName in readString this userId in readLong Override public String toString return new StringBuilder append authToken append authToken append userName append userName append userId append userId toString Override public int describeContents return 0 Override public void writeToParcel Parcel out int flags out writeParcelable this authToken flags out writeString this userName out writeLong this userIdpackage com twitter sdk android core internal oauth import com twitter sdk android core TwitterCore import com twitter sdk android core internal TwitterApi import java io IOException import javax net ssl SSLSocketFactory import okhttp3 Interceptor import okhttp3 OkHttpClient import okhttp3 Request import okhttp3 Response import retrofit2 Retrofit import retrofit2 converter gson GsonConverterFactory abstract class OAuthService private static final String CLIENT NAME TwitterAndroidSDK private final TwitterCore twitterCore private final TwitterApi api private final String userAgent private final Retrofit retrofit OAuthService TwitterCore twitterCore SSLSocketFactory sslSocketFactory TwitterApi api this twitterCore twitterCore this api api userAgent TwitterApi buildUserAgent CLIENT NAME twitterCore getVersion if sslSocketFactory null throw new IllegalArgumentException sslSocketFactory must not be null final OkHttpClient client new OkHttpClient Builder sslSocketFactory sslSocketFactory addInterceptor new Interceptor Override public Response intercept Chain chain throws IOException final Request request chain request newBuilder header User Agent getUserAgent build return chain proceed request build retrofit new Retrofit Builder baseUrl getApi getBaseHostUrl client client addConverterFactory GsonConverterFactory create build protected TwitterCore getTwitterCore return twitterCore protected TwitterApi getApi return api protected String getUserAgent return userAgent protected Retrofit getRetrofit return retrofitpackage com twitter sdk android core import io fabric sdk android services network HttpMethod import com twitter sdk android core internal TwitterApi import com twitter sdk android core internal oauth OAuth1aHeaders import java util Map public class OAuthSigning static final String VERIFY CREDENTIALS URL TwitterApi BASE HOST URL 1 1 account verify credentials json final TwitterAuthConfig authConfig final TwitterAuthToken authToken final OAuth1aHeaders oAuth1aHeaders public OAuthSigning TwitterAuthConfig authConfig TwitterAuthToken authToken this authConfig authToken new OAuth1aHeaders OAuthSigning TwitterAuthConfig authConfig TwitterAuthToken authToken OAuth1aHeaders oAuth1aHeaders if authConfig null throw new IllegalArgumentException authConfig must not be null if authToken null throw new IllegalArgumentException authToken must not be null this authConfig authConfig this authToken authToken this oAuth1aHeaders oAuth1aHeaders public String getAuthorizationHeader String method String url Map String String postParams return oAuth1aHeaders getAuthorizationHeader authConfig authToken null method url postParams public Map String String getOAuthEchoHeaders String method String url Map String String postParams return oAuth1aHeaders getOAuthEchoHeaders authConfig authToken null method url postParams public Map String String getOAuthEchoHeadersForVerifyCredentials return oAuth1aHeaders getOAuthEchoHeaders authConfig authToken null HttpMethod GET name VERIFY CREDENTIALS URL nullpackage com twitter sdk android core identity import android webkit ConsoleMessage import android webkit WebChromeClient class OAuthWebChromeClient extends WebChromeClient Override public boolean onConsoleMessage ConsoleMessage consoleMessage Do not log return truepackage com twitter sdk android core identity import android net http SslError import android os Bundle import android webkit SslErrorHandler import android webkit WebView import android webkit WebViewClient import java net URI import java util TreeMap import io fabric sdk android services network UrlUtils class OAuthWebViewClient extends WebViewClient interface Listener void onPageFinished WebView webView String url void onSuccess Bundle bundle void onError WebViewException exception private final String completeUrl private final Listener listener public OAuthWebViewClient String completeUrl Listener listener this completeUrl completeUrl this listener listener Override public void onPageFinished WebView view String url super onPageFinished view url listener onPageFinished view url Override public boolean shouldOverrideUrlLoading WebView view String url if url startsWith completeUrl final TreeMap String String params UrlUtils getQueryParams URI create url false final Bundle bundle new Bundle params size for TreeMap Entry String String entry params entrySet bundle putString entry getKey entry getValue listener onSuccess bundle return true return super shouldOverrideUrlLoading view url Override public void onReceivedError WebView view int errorCode String description String failingUrl super onReceivedError view errorCode description failingUrl listener onError new WebViewException errorCode description failingUrl Override public void onReceivedSslError WebView view SslErrorHandler handler SslError error super onReceivedSslError view handler error listener onError new WebViewException error getPrimaryError null nullpackage com twitter sdk android core internal util import android annotation TargetApi import android content Context import android os Build import android util AttributeSet import android widget ScrollView public class ObservableScrollView extends ScrollView ScrollViewListener scrollViewListener public ObservableScrollView Context context super context public ObservableScrollView Context context AttributeSet attrs super context attrs public ObservableScrollView Context context AttributeSet attrs int defStyleAttr super context attrs defStyleAttr TargetApi Build VERSION CODES LOLLIPOP public ObservableScrollView Context context AttributeSet attrs int defStyleAttr int defStyleRes super context attrs defStyleAttr defStyleRes Override protected void onScrollChanged int currentX int currentY int oldX int oldY super onScrollChanged currentX currentY oldX oldY if scrollViewListener null scrollViewListener onScrollChanged currentY public void setScrollViewListener ScrollViewListener scrollViewListener this scrollViewListener scrollViewListener public interface ScrollViewListener void onScrollChanged int scrollYpackage com twitter sdk android core internal util import android test AndroidTestCase import static org mockito Mockito mock import static org mockito Mockito verify public class ObservableScrollViewTest extends AndroidTestCase static final int TEST SCROLL X 10 public void testOnScrollChanged final ObservableScrollView scrollView new ObservableScrollView getContext final ObservableScrollView ScrollViewListener listener mock ObservableScrollView ScrollViewListener class scrollView setScrollViewListener listener scrollView onScrollChanged 0 TEST SCROLL X 0 0 verify listener onScrollChanged TEST SCROLL Xpackage com twitter sdk android core internal network import com twitter sdk android core GuestSessionProvider import com twitter sdk android core Session import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthToken import javax net ssl SSLSocketFactory import okhttp3 OkHttpClient public class OkHttpClientHelper public static OkHttpClient getOkHttpClient GuestSessionProvider guestSessionProvider SSLSocketFactory sslSocketFactory return getOkHttpClientBuilder guestSessionProvider sslSocketFactory build public static OkHttpClient Builder getOkHttpClientBuilder GuestSessionProvider guestSessionProvider SSLSocketFactory sslSocketFactory return new OkHttpClient Builder sslSocketFactory sslSocketFactory authenticator new GuestAuthenticator guestSessionProvider addInterceptor new GuestAuthInterceptor guestSessionProvider addNetworkInterceptor new GuestAuthNetworkInterceptor public static OkHttpClient getOkHttpClient Session extends TwitterAuthToken session TwitterAuthConfig authConfig SSLSocketFactory sslSocketFactory return getOkHttpClientBuilder session authConfig sslSocketFactory build public static OkHttpClient Builder getOkHttpClientBuilder Session extends TwitterAuthToken session TwitterAuthConfig authConfig SSLSocketFactory sslSocketFactory if session null throw new IllegalArgumentException Session must not be null return new OkHttpClient Builder sslSocketFactory sslSocketFactory addInterceptor new OAuth1aInterceptor session authConfigpackage com kaku colorfulnews listener import android view View public interface OnItemClickListener void onItemClick View view int positionpackage com kaku colorfulnews di scope import java lang annotation Documented import java lang annotation Retention import java lang annotation RetentionPolicy import javax inject Scope Scope Documented Retention RetentionPolicy RUNTIME public interface PerActivitypackage com kaku colorfulnews di scope import java lang annotation Documented import java lang annotation Retention import java lang annotation RetentionPolicy import javax inject Scope Scope Documented Retention RetentionPolicy RUNTIME public interface PerApppackage com kaku colorfulnews di scope import java lang annotation Documented import java lang annotation Retention import java lang annotation RetentionPolicy import javax inject Scope Scope Documented Retention RetentionPolicy RUNTIME public interface PerFragmentpackage com kaku colorfulnews di scope import java lang annotation Documented import java lang annotation Retention import java lang annotation RetentionPolicy import javax inject Scope Scope Documented Retention RetentionPolicy RUNTIME public interface PerServicepackage com twitter sdk android core import io fabric sdk android services persistence PreferenceStore import io fabric sdk android services persistence PreferenceStoreStrategy import io fabric sdk android services persistence SerializationStrategy import java util Collections import java util Map import java util concurrent ConcurrentHashMap import java util concurrent atomic AtomicReference public class PersistedSessionManager T extends Session implements SessionManager T private static final int NUM SESSIONS 1 private final PreferenceStore preferenceStore private final SerializationStrategy T serializer private final ConcurrentHashMap Long T sessionMap private final ConcurrentHashMap Long PreferenceStoreStrategy T storageMap private final PreferenceStoreStrategy T activeSessionStorage private final AtomicReference T activeSessionRef private final String prefKeySession private volatile boolean restorePending true public PersistedSessionManager PreferenceStore preferenceStore SerializationStrategy T serializer String prefKeyActiveSession String prefKeySession this preferenceStore serializer new ConcurrentHashMap Long T NUM SESSIONS new ConcurrentHashMap Long PreferenceStoreStrategy T NUM SESSIONS new PreferenceStoreStrategy preferenceStore serializer prefKeyActiveSession prefKeySession PersistedSessionManager PreferenceStore preferenceStore SerializationStrategy T serializer ConcurrentHashMap Long T sessionMap ConcurrentHashMap Long PreferenceStoreStrategy T storageMap PreferenceStoreStrategy T activesSessionStorage String prefKeySession this preferenceStore preferenceStore this serializer serializer this sessionMap sessionMap this storageMap storageMap this activeSessionStorage activesSessionStorage this activeSessionRef new AtomicReference this prefKeySession prefKeySession void restoreAllSessionsIfNecessary Only restore once if restorePending restoreAllSessions private synchronized void restoreAllSessions if restorePending restoreActiveSession restoreSessions restorePending false private void restoreSessions T session final Map String preferences preferenceStore get getAll for Map Entry String entry preferences entrySet if isSessionPreferenceKey entry getKey session serializer deserialize String entry getValue if session null internalSetSession session getId session false private void restoreActiveSession final T session activeSessionStorage restore if session null internalSetSession session getId session false boolean isSessionPreferenceKey String preferenceKey return preferenceKey startsWith prefKeySession Override public T getActiveSession restoreAllSessionsIfNecessary return activeSessionRef get Override public void setActiveSession T session if session null throw new IllegalArgumentException Session must not be null restoreAllSessionsIfNecessary internalSetSession session getId session true Override public void clearActiveSession restoreAllSessionsIfNecessary if activeSessionRef get null clearSession activeSessionRef get getId Override public T getSession long id restoreAllSessionsIfNecessary return sessionMap get id Override public void setSession long id T session if session null throw new IllegalArgumentException Session must not be null restoreAllSessionsIfNecessary internalSetSession id session false Override public Map Long T getSessionMap restoreAllSessionsIfNecessary return Collections unmodifiableMap sessionMap private void internalSetSession long id T session boolean forceUpdate sessionMap put id session PreferenceStoreStrategy T storage storageMap get id if storage null storage new PreferenceStoreStrategy preferenceStore serializer getPrefKey id storageMap putIfAbsent id storage storage save session final T activeSession activeSessionRef get if activeSession null activeSession getId id forceUpdate synchronized this activeSessionRef compareAndSet activeSession session activeSessionStorage save session String getPrefKey long id return prefKeySession id Override public void clearSession long id restoreAllSessionsIfNecessary if activeSessionRef get null activeSessionRef get getId id synchronized this activeSessionRef set null activeSessionStorage clear sessionMap remove id final PreferenceStoreStrategy T storage storageMap remove id if storage null storage clearpackage com kaku colorfulnews mvp ui activities import android app Activity import android app ActivityOptions import android content Intent import android os Build import android os Bundle import android support design widget FloatingActionButton import android support design widget NavigationView import android support design widget Snackbar import android support v4 app ActivityCompat import android support v4 app ActivityOptionsCompat import android support v4 widget DrawerLayout import android support v4 widget SwipeRefreshLayout import android support v7 widget DefaultItemAnimator import android support v7 widget RecyclerView import android support v7 widget StaggeredGridLayoutManager import android support v7 widget Toolbar import android view View import android widget ProgressBar import android widget TextView import com kaku colorfulnews R import com kaku colorfulnews common Constants import com kaku colorfulnews common LoadNewsType import com kaku colorfulnews listener OnItemClickListener import com kaku colorfulnews mvp entity PhotoGirl import com kaku colorfulnews mvp presenter impl PhotoPresenterImpl import com kaku colorfulnews mvp ui activities base BaseActivity import com kaku colorfulnews mvp ui adapter PhotoListAdapter import com kaku colorfulnews mvp view PhotoView import com kaku colorfulnews utils NetUtil import java util List import javax inject Inject import butterknife BindView import butterknife OnClick public class PhotoActivity extends BaseActivity implements PhotoView SwipeRefreshLayout OnRefreshListener BindView R id toolbar Toolbar mToolbar BindView R id photo rv RecyclerView mPhotoRv BindView R id nav view NavigationView mNavView BindView R id drawer layout DrawerLayout mDrawerLayout BindView R id progress bar ProgressBar mProgressBar BindView R id swipe refresh layout SwipeRefreshLayout mSwipeRefreshLayout BindView R id empty view TextView mEmptyView BindView R id fab FloatingActionButton mFab Inject PhotoPresenterImpl mPhotoPresenter Inject PhotoListAdapter mPhotoListAdapter Inject Activity mActivity private boolean mIsAllLoaded Override public int getLayoutId return R layout activity photo Override public void initInjector mActivityComponent inject this Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState Override public void initViews mIsHasNavigationView true mBaseNavView mNavView initSwipeRefreshLayout initRecyclerView setAdapterItemClickEvent initPresenter private void initSwipeRefreshLayout mSwipeRefreshLayout setOnRefreshListener this mSwipeRefreshLayout setColorSchemeColors getResources getIntArray R array gplus colors private void initRecyclerView mPhotoRv setHasFixedSize true mPhotoRv setLayoutManager new StaggeredGridLayoutManager 2 StaggeredGridLayoutManager VERTICAL mPhotoRv setItemAnimator new DefaultItemAnimator mPhotoRv setAdapter mPhotoListAdapter setRvScrollEvent private void setRvScrollEvent mPhotoRv addOnScrollListener new RecyclerView OnScrollListener Override public void onScrollStateChanged RecyclerView recyclerView int newState super onScrollStateChanged recyclerView newState RecyclerView LayoutManager layoutManager recyclerView getLayoutManager int lastVisibleItemPosition StaggeredGridLayoutManager layoutManager findLastVisibleItemPositions null int visibleItemCount layoutManager getChildCount int totalItemCount layoutManager getItemCount if mIsAllLoaded visibleItemCount 0 newState RecyclerView SCROLL STATE IDLE lastVisibleItemPosition 0 totalItemCount 1 lastVisibleItemPosition 1 totalItemCount 1 mPhotoPresenter loadMore mPhotoListAdapter showFooter mPhotoRv scrollToPosition mPhotoListAdapter getItemCount 1 private void setAdapterItemClickEvent mPhotoListAdapter setOnItemClickListener new OnItemClickListener Override public void onItemClick View view int position Intent intent new Intent PhotoActivity this PhotoDetailActivity class intent putExtra Constants PHOTO DETAIL mPhotoListAdapter getList get position getUrl startActivity view intent private void startActivity View view Intent intent if Build VERSION SDK INT Build VERSION CODES LOLLIPOP ActivityOptions options ActivityOptions makeSceneTransitionAnimation mActivity view Constants TRANSITION ANIMATION NEWS PHOTOS startActivity intent options toBundle else ActivityOptionsCompat options ActivityOptionsCompat makeScaleUpAnimation view view getWidth 2 view getHeight 2 0 0 ActivityCompat startActivity mActivity intent options toBundle private void initPresenter mPresenter mPhotoPresenter mPresenter attachView this mPresenter onCreate Override public void setPhotoList List PhotoGirl photoGirls LoadNewsType checker int loadType switch loadType case LoadNewsType TYPE REFRESH SUCCESS mSwipeRefreshLayout setRefreshing false mPhotoListAdapter setList photoGirls mPhotoListAdapter notifyDataSetChanged checkIsEmpty photoGirls mIsAllLoaded false break case LoadNewsType TYPE REFRESH ERROR mSwipeRefreshLayout setRefreshing false checkIsEmpty photoGirls break case LoadNewsType TYPE LOAD MORE SUCCESS mPhotoListAdapter hideFooter if photoGirls null photoGirls size 0 mIsAllLoaded true Snackbar make mPhotoRv getString R string no more Snackbar LENGTH SHORT show else mPhotoListAdapter addMore photoGirls break case LoadNewsType TYPE LOAD MORE ERROR mPhotoListAdapter hideFooter break private void checkIsEmpty List PhotoGirl photoGirls if photoGirls null mPhotoListAdapter getList null mPhotoRv setVisibility View GONE mEmptyView setVisibility View VISIBLE else mPhotoRv setVisibility View VISIBLE mEmptyView setVisibility View GONE Override public void showProgress mProgressBar setVisibility View VISIBLE Override public void hideProgress mProgressBar setVisibility View GONE Override public void showMsg String message mProgressBar setVisibility View GONE if NetUtil isNetworkAvailable Snackbar make mPhotoRv message Snackbar LENGTH LONG show Override public void onRefresh mPhotoPresenter refreshData OnClick R id empty view R id fab public void onClick View view switch view getId case R id empty view mSwipeRefreshLayout setRefreshing true mPhotoPresenter refreshData break case R id fab mPhotoRv getLayoutManager scrollToPosition 0 breakpackage com kaku colorfulnews mvp ui activities import android content Context import android graphics Color import android graphics drawable ColorDrawable import android os Build import android os Bundle import android support v7 widget Toolbar import android transition Transition import android view Menu import android view MenuItem import android view View import android view animation DecelerateInterpolator import android widget ImageView import android widget Toast import com kaku colorfulnews R import com kaku colorfulnews common Constants import com kaku colorfulnews common PhotoRequestType import com kaku colorfulnews di scope ContextLife import com kaku colorfulnews mvp presenter impl PhotoDetailPresenterImpl import com kaku colorfulnews mvp ui activities base BaseActivity import com kaku colorfulnews mvp view PhotoDetailView import com kaku colorfulnews utils MyUtils import com kaku colorfulnews utils SystemUiVisibilityUtil import com kaku colorfulnews widget PullBackLayout import com socks library KLog import com squareup picasso Picasso import javax inject Inject import butterknife BindView import dagger Lazy import uk co senab photoview PhotoView import uk co senab photoview PhotoViewAttacher public class PhotoDetailActivity extends BaseActivity implements PullBackLayout Callback PhotoDetailView BindView R id toolbar Toolbar mToolbar BindView R id photo iv ImageView mPhotoIv BindView R id pull back layout PullBackLayout mPullBackLayout BindView R id photo touch iv PhotoView mPhotoTouchIv Inject Lazy PhotoDetailPresenterImpl mPhotoDetailPresenter Inject ContextLife Activity Context mContext private ColorDrawable mBackground private boolean mIsToolBarHidden private boolean mIsStatusBarHidden Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState mPullBackLayout setCallback this initLazyLoadView Override public void supportFinishAfterTransition super supportFinishAfterTransition private void initLazyLoadView if Build VERSION SDK INT Build VERSION CODES LOLLIPOP getWindow getEnterTransition addListener new Transition TransitionListener Override public void onTransitionStart Transition transition Override public void onTransitionEnd Transition transition showToolBarAndPhotoTouchView Override public void onTransitionCancel Transition transition Override public void onTransitionPause Transition transition Override public void onTransitionResume Transition transition else showToolBarAndPhotoTouchView private void showToolBarAndPhotoTouchView toolBarFadeIn loadPhotoTouchIv private void toolBarFadeIn mIsToolBarHidden true hideOrShowToolbar private void loadPhotoTouchIv Picasso with this load getIntent getStringExtra Constants PHOTO DETAIL error R drawable ic load fail into mPhotoTouchIv Override public int getLayoutId return R layout activity photo detail Override public void initInjector mActivityComponent inject this Override public void initViews initToolbar initImageView initBackground setPhotoViewClickEvent private void initToolbar mToolbar setTitle getString R string girl private void initImageView loadPhotoIv private void loadPhotoIv Picasso with this load getIntent getStringExtra Constants PHOTO DETAIL into mPhotoIv private void setPhotoViewClickEvent mPhotoTouchIv setOnPhotoTapListener new PhotoViewAttacher OnPhotoTapListener Override public void onPhotoTap View view float v float v1 KLog d hideOrShowToolbar hideOrShowStatusBar Override public void onOutsidePhotoTap KLog d hideOrShowToolbar hideOrShowStatusBar protected void hideOrShowToolbar mToolbar animate alpha mIsToolBarHidden 1 0f 0 0f setInterpolator new DecelerateInterpolator 2 start mIsToolBarHidden mIsToolBarHidden private void hideOrShowStatusBar if mIsStatusBarHidden SystemUiVisibilityUtil enter PhotoDetailActivity this else SystemUiVisibilityUtil exit PhotoDetailActivity this mIsStatusBarHidden mIsStatusBarHidden SuppressWarnings deprecation private void initBackground mBackground new ColorDrawable Color BLACK MyUtils getRootView this setBackgroundDrawable mBackground private void initPresenter mPresenter mPhotoDetailPresenter get mPhotoDetailPresenter get mPhotoDetailPresenter mPresenter attachView this Override public boolean onCreateOptionsMenu Menu menu getMenuInflater inflate R menu menu photo menu return true Override public boolean onOptionsItemSelected MenuItem item switch item getItemId case R id action share handlePicture PhotoRequestType TYPE SHARE return true case R id action save handlePicture PhotoRequestType TYPE SAVE return true case R id action set wallpaper handlePicture PhotoRequestType TYPE SET WALLPAPER return true return super onOptionsItemSelected item private void handlePicture int type initPresenter mPhotoDetailPresenter get handlePicture getIntent getStringExtra Constants PHOTO DETAIL type Override public void onPullStart toolBarFadeOut mIsStatusBarHidden true hideOrShowStatusBar private void toolBarFadeOut mIsToolBarHidden false hideOrShowToolbar Override public void onPull float progress KLog d progress progress progress Math min 1f progress 3f KLog d alpha int 0xff 1f progress mBackground setAlpha int 0xff 1f progress Override public void onPullCancel toolBarFadeIn Override public void onPullComplete supportFinishAfterTransition Override public void showProgress Override public void hideProgress Override public void showMsg String message Toast makeText mContext message Toast LENGTH LONG showpackage com kaku colorfulnews mvp ui fragment import android os Bundle import android support annotation Nullable import android view LayoutInflater import android view View import android view ViewGroup import android widget ProgressBar import com bumptech glide Glide import com bumptech glide load DecodeFormat import com bumptech glide load engine DiskCacheStrategy import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews common Constants import com kaku colorfulnews event PhotoDetailOnClickEvent import com kaku colorfulnews mvp ui fragment base BaseFragment import com kaku colorfulnews utils RxBus import com kaku colorfulnews utils TransformUtils import com socks library KLog import java util concurrent TimeUnit import butterknife BindView import butterknife ButterKnife import rx Observable import rx Subscriber import uk co senab photoview PhotoView import uk co senab photoview PhotoViewAttacher public class PhotoDetailFragment extends BaseFragment BindView R id photo view PhotoView mPhotoView BindView R id progress bar ProgressBar mProgressBar private String mImgSrc Override public void onCreate Nullable Bundle savedInstanceState super onCreate savedInstanceState if getArguments null mImgSrc getArguments getString Constants PHOTO DETAIL IMGSRC Nullable Override public View onCreateView LayoutInflater inflater Nullable ViewGroup container Nullable Bundle savedInstanceState View view inflater inflate getLayoutId container false ButterKnife bind this view initViews view return view Override public void initInjector Override public void initViews View view mProgressBar setVisibility View VISIBLE initPhotoView setPhotoViewClickEvent private void initPhotoView mSubscription Observable timer 100 TimeUnit MILLISECONDS glide activity compose TransformUtils Long defaultSchedulers subscribe new Subscriber Long Override public void onCompleted mProgressBar setVisibility View GONE Override public void onError Throwable e mProgressBar setVisibility View GONE Override public void onNext Long aLong Glide with App getAppContext load mImgSrc asBitmap format DecodeFormat PREFER ARGB 8888 diskCacheStrategy DiskCacheStrategy ALL error R drawable ic load fail into mPhotoView private void setPhotoViewClickEvent mPhotoView setOnPhotoTapListener new PhotoViewAttacher OnPhotoTapListener Override public void onPhotoTap View view float v float v1 KLog d handleOnTabEvent Override public void onOutsidePhotoTap KLog d handleOnTabEvent private void handleOnTabEvent RxBus getInstance post new PhotoDetailOnClickEvent Override public int getLayoutId return R layout fragment news photo detailpackage com kaku colorfulnews mvp interactor import com kaku colorfulnews listener RequestCallBack import rx Subscription public interface PhotoDetailInteractor T Subscription saveImageAndGetImageUri RequestCallBack T listener String urlpackage com kaku colorfulnews mvp interactor impl import android content Intent import android graphics Bitmap import android net Uri import android os Environment import android support annotation NonNull import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp interactor PhotoDetailInteractor import com kaku colorfulnews utils TransformUtils import com socks library KLog import com squareup picasso Picasso import java io File import java io FileOutputStream import java io IOException import javax inject Inject import rx Observable import rx Subscriber import rx Subscription import rx functions Func1 public class PhotoDetailInteractorImpl implements PhotoDetailInteractor Uri Inject public PhotoDetailInteractorImpl Override public Subscription saveImageAndGetImageUri final RequestCallBack Uri listener final String url return Observable create new Observable OnSubscribe Bitmap Override public void call final Subscriber super Bitmap subscriber KLog d Thread currentThread getName Bitmap bitmap null try bitmap Picasso with App getAppContext load url get catch IOException e subscriber onError e if bitmap null subscriber onError new Exception subscriber onNext bitmap subscriber onCompleted observeOn Schedulers io flatMap new Func1 Bitmap Observable Uri Override public Observable Uri call Bitmap bitmap KLog d Thread currentThread getName return getUriObservable bitmap url compose TransformUtils Uri defaultSchedulers subscribe new Subscriber Uri Override public void onCompleted Override public void onError Throwable e KLog e e toString listener onError App getAppContext getString R string error try again Override public void onNext Uri uri listener success uri NonNull private Observable Uri getUriObservable Bitmap bitmap String url File file getImageFile bitmap url if file null return Observable error new NullPointerException Save image file failed Uri uri Uri fromFile file Update the System MediaStore Images Media ContentUri Intent scannerIntent new Intent Intent ACTION MEDIA SCANNER SCAN FILE uri App getAppContext sendBroadcast scannerIntent return Observable just uri private File getImageFile Bitmap bitmap String url String fileName colorful news photo url hashCode jpg File file new File Environment getExternalStorageDirectory fileName getFilesDir if file getParentFile exists noinspection ResultOfMethodCallIgnored file getParentFile mkdirs FileOutputStream outputStream null try outputStream new FileOutputStream file bitmap compress Bitmap CompressFormat JPEG 100 outputStream catch Exception e e printStackTrace return null finally try if outputStream null outputStream close catch IOException e e printStackTrace return filepackage com kaku colorfulnews event public class PhotoDetailOnClickEventpackage com kaku colorfulnews mvp presenter import com kaku colorfulnews common PhotoRequestType import com kaku colorfulnews mvp presenter base BasePresenter public interface PhotoDetailPresenter extends BasePresenter void handlePicture String imageUrl PhotoRequestType PhotoRequestTypeChecker int typepackage com kaku colorfulnews mvp presenter impl import android app Activity import android app WallpaperManager import android content ContentValues import android content Context import android content Intent import android database Cursor import android net Uri import android os Build import android provider MediaStore import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews common PhotoRequestType import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp interactor impl PhotoDetailInteractorImpl import com kaku colorfulnews mvp presenter PhotoDetailPresenter import com kaku colorfulnews mvp presenter base BasePresenterImpl import com kaku colorfulnews mvp view PhotoDetailView import com socks library KLog import java io File import java io IOException import javax inject Inject public class PhotoDetailPresenterImpl extends BasePresenterImpl PhotoDetailView Uri implements PhotoDetailPresenter RequestCallBack Uri private PhotoDetailInteractorImpl mPhotoDetailInteractor private Activity mActivity private int mRequestType 1 Inject public PhotoDetailPresenterImpl PhotoDetailInteractorImpl photoDetailInteractor Activity activity mPhotoDetailInteractor photoDetailInteractor mActivity activity Override public void success Uri imageUri super success imageUri switch mRequestType case PhotoRequestType TYPE SHARE share imageUri break case PhotoRequestType TYPE SAVE showSavePathMsg imageUri break case PhotoRequestType TYPE SET WALLPAPER setWallpaper imageUri break private void share Uri uri Intent intent new Intent intent setAction Intent ACTION SEND intent putExtra Intent EXTRA STREAM uri intent setType image jpeg mActivity startActivity Intent createChooser intent App getAppContext getString R string share private void showSavePathMsg Uri imageUri mView showMsg mActivity getString R string picture already save to imageUri getPath private void setWallpaper Uri imageUri WallpaperManager wallpaperManager WallpaperManager getInstance mActivity if Build VERSION SDK INT Build VERSION CODES KITKAT File wallpaperFile new File imageUri getPath Uri contentURI getImageContentUri mActivity wallpaperFile getAbsolutePath Uri uri1 getImageContentUri mActivity imageUri getPath mActivity startActivity wallpaperManager getCropAndSetWallpaperIntent contentURI else try wallpaperManager setStream mActivity getContentResolver openInputStream imageUri mView showMsg App getAppContext getString R string set wallpaper success catch IOException e KLog e e toString mView showMsg e getMessage http stackoverflow com questions 23207604 get a content uri from a file uri public Uri getImageContentUri Context context String absPath KLog d getImageContentUri absPath Cursor cursor context getContentResolver query MediaStore Images Media EXTERNAL CONTENT URI new String MediaStore Images Media ID MediaStore Images Media DATA new String absPath null if cursor null cursor moveToFirst int id cursor getInt cursor getColumnIndex MediaStore MediaColumns ID cursor close return Uri withAppendedPath MediaStore Images Media EXTERNAL CONTENT URI Integer toString id else if absPath isEmpty ContentValues values new ContentValues values put MediaStore Images Media DATA absPath return context getContentResolver insert MediaStore Images Media EXTERNAL CONTENT URI values else return null Override public void handlePicture String imageUrl PhotoRequestType PhotoRequestTypeChecker int type mRequestType type mPhotoDetailInteractor saveImageAndGetImageUri this imageUrlpackage com kaku colorfulnews mvp view import com kaku colorfulnews mvp view base BaseView public interface PhotoDetailView extends BaseViewpackage com kaku colorfulnews mvp entity public class PhotoGirl private String id private String createdAt private String desc private String publishedAt private String source private String type private String url private boolean used private String who public String get id return id public void set id String id this id id public String getCreatedAt return createdAt public void setCreatedAt String createdAt this createdAt createdAt public String getDesc return desc public void setDesc String desc this desc desc public String getPublishedAt return publishedAt public void setPublishedAt String publishedAt this publishedAt publishedAt public String getSource return source public void setSource String source this source source public String getType return type public void setType String type this type type public String getUrl return url public void setUrl String url this url url public boolean isUsed return used public void setUsed boolean used this used used public String getWho return who public void setWho String who this who whopackage com kaku colorfulnews mvp interactor import com kaku colorfulnews listener RequestCallBack import rx Subscription public interface PhotoInteractor T Subscription loadPhotos RequestCallBack T listener int size int pagepackage com kaku colorfulnews mvp interactor impl import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews common HostType import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp entity GirlData import com kaku colorfulnews mvp entity PhotoGirl import com kaku colorfulnews mvp interactor PhotoInteractor import com kaku colorfulnews repository network RetrofitManager import com kaku colorfulnews utils TransformUtils import java util List import javax inject Inject import rx Subscriber import rx Subscription import rx functions Func1 public class PhotoInteractorImpl implements PhotoInteractor List PhotoGirl Inject public PhotoInteractorImpl Override public Subscription loadPhotos final RequestCallBack List PhotoGirl listener int size int page return RetrofitManager getInstance HostType GANK GIRL PHOTO getPhotoListObservable size page map new Func1 GirlData List PhotoGirl Override public List PhotoGirl call GirlData girlData return girlData getResults compose TransformUtils List PhotoGirl defaultSchedulers subscribe new Subscriber List PhotoGirl Override public void onCompleted Override public void onError Throwable e listener onError App getAppContext getString R string load error Override public void onNext List PhotoGirl photoGirls listener success photoGirlspackage com kaku colorfulnews mvp ui adapter import android support v7 widget RecyclerView import android view View import android view ViewGroup import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews mvp entity PhotoGirl import com kaku colorfulnews mvp ui adapter base BaseRecyclerViewAdapter import com kaku colorfulnews utils DimenUtil import com kaku colorfulnews widget RatioImageView import com socks library KLog import com squareup picasso Picasso import java util HashMap import java util Map import java util Random import javax inject Inject import butterknife BindView import butterknife ButterKnife public class PhotoListAdapter extends BaseRecyclerViewAdapter PhotoGirl private int width int DimenUtil getScreenSize 2 private Map Integer Integer mHeights new HashMap Inject public PhotoListAdapter super null Override public RecyclerView ViewHolder onCreateViewHolder ViewGroup parent int viewType View view switch viewType case TYPE FOOTER view getView parent R layout item news footer return new FooterViewHolder view case TYPE ITEM view getView parent R layout item photo final ItemViewHolder itemViewHolder new ItemViewHolder view itemViewHolder setIsRecyclable false setItemOnClickEvent itemViewHolder return itemViewHolder default throw new RuntimeException there is no type that matches the type viewType make sure your using types correctly private void setItemOnClickEvent final RecyclerView ViewHolder holder if mOnItemClickListener null holder itemView setOnClickListener new View OnClickListener Override public void onClick View v mOnItemClickListener onItemClick v holder getLayoutPosition Override public void onBindViewHolder final RecyclerView ViewHolder holder final int position super onBindViewHolder holder position if holder instanceof ItemViewHolder ItemViewHolder holder mPhotoIv setOriginalSize width getHeight position Picasso with App getAppContext load mList get position getUrl placeholder R color image place holder error R drawable ic load fail into ItemViewHolder holder mPhotoIv picasso item setItemAppearAnimation holder position R anim anim rotate scale in private int getHeight int position int height try if position mHeights size height getRandomHeight mHeights put position height else height mHeights get position catch Exception e KLog e height width 2 return height private int getRandomHeight int height height int width new Random nextFloat 2 1 return height Override public int getItemViewType int position if mIsShowFooter isFooterPosition position return TYPE FOOTER else return TYPE ITEM class ItemViewHolder extends RecyclerView ViewHolder BindView R id photo iv RatioImageView mPhotoIv ItemViewHolder View view super view ButterKnife bind this viewpackage com kaku colorfulnews mvp ui adapter PagerAdapter import android support v4 app Fragment import android support v4 app FragmentManager import android support v4 app FragmentStatePagerAdapter import com kaku colorfulnews mvp ui fragment PhotoDetailFragment import java util List public class PhotoPagerAdapter extends FragmentStatePagerAdapter private List PhotoDetailFragment mFragmentList public PhotoPagerAdapter FragmentManager fm List PhotoDetailFragment fragmentList super fm mFragmentList fragmentList Override public Fragment getItem int position return mFragmentList get position Override public int getCount return mFragmentList sizepackage com kaku colorfulnews mvp presenter import com kaku colorfulnews mvp presenter base BasePresenter public interface PhotoPresenter extends BasePresenter void refreshData void loadMorepackage com kaku colorfulnews mvp presenter impl import com kaku colorfulnews common LoadNewsType import com kaku colorfulnews listener RequestCallBack import com kaku colorfulnews mvp entity PhotoGirl import com kaku colorfulnews mvp interactor impl PhotoInteractorImpl import com kaku colorfulnews mvp presenter PhotoPresenter import com kaku colorfulnews mvp presenter base BasePresenterImpl import java util List import javax inject Inject public class PhotoPresenterImpl extends BasePresenterImpl com kaku colorfulnews mvp view PhotoView List PhotoGirl implements PhotoPresenter RequestCallBack List PhotoGirl private PhotoInteractorImpl mPhotoInteractor private static int SIZE 20 private int mStartPage 1 private boolean misFirstLoad private boolean mIsRefresh true Inject public PhotoPresenterImpl PhotoInteractorImpl photoInteractor mPhotoInteractor photoInteractor Override public void onCreate super onCreate loadPhotoData Override public void beforeRequest if misFirstLoad mView showProgress Override public void onError String errorMsg super onError errorMsg if mView null int loadType mIsRefresh LoadNewsType TYPE REFRESH ERROR LoadNewsType TYPE LOAD MORE ERROR mView setPhotoList null loadType Override public void success List PhotoGirl items super success items misFirstLoad true if items null mStartPage 1 int loadType mIsRefresh LoadNewsType TYPE REFRESH SUCCESS LoadNewsType TYPE LOAD MORE SUCCESS if mView null mView setPhotoList items loadType mView hideProgress Override public void refreshData mStartPage 1 mIsRefresh true loadPhotoData Override public void loadMore mIsRefresh false loadPhotoData private void loadPhotoData mPhotoInteractor loadPhotos this SIZE mStartPagepackage com kaku colorfulnews common import android support annotation IntDef import java lang annotation Retention import java lang annotation RetentionPolicy public class PhotoRequestType public static final int TYPE SHARE 1 public static final int TYPE SAVE 2 public static final int TYPE SET WALLPAPER 3 IntDef TYPE SHARE TYPE SAVE TYPE SET WALLPAPER Retention RetentionPolicy SOURCE public interface PhotoRequestTypeCheckerpackage com kaku colorfulnews mvp view import com kaku colorfulnews common LoadNewsType import com kaku colorfulnews mvp entity PhotoGirl import com kaku colorfulnews mvp view base BaseView import java util List public interface PhotoView extends BaseView void setPhotoList List PhotoGirl photoGirls LoadNewsType checker int loadTypepackage com kaku colorfulnews widget import android content Context import android support v4 view ViewPager import android util AttributeSet import android view MotionEvent import com socks library KLog public class PhotoViewPager extends ViewPager public PhotoViewPager Context context super context public PhotoViewPager Context context AttributeSet attrs super context attrs Override public boolean onInterceptTouchEvent MotionEvent ev try return super onInterceptTouchEvent ev catch Exception e KLog e e toString return false Override public boolean onTouchEvent MotionEvent ev try return super onTouchEvent ev catch IllegalArgumentException ex KLog e ex toString return falsepackage com twitter sdk android core models import com google gson annotations SerializedName import java util List import java util Map public class Place SerializedName attributes public final Map String String attributes SerializedName bounding box public final BoundingBox boundingBox SerializedName country public final String country SerializedName country code public final String countryCode SerializedName full name public final String fullName SerializedName id public final String id SerializedName name public final String name SerializedName place type public final String placeType SerializedName url public final String url public Place Map String String attributes BoundingBox boundingBox String country String countryCode String fullName String id String name String placeType String url this attributes attributes this boundingBox boundingBox this country country this countryCode countryCode this fullName fullName this id id this name name this placeType placeType this url url public static class BoundingBox SerializedName coordinates public final List List List Double coordinates SerializedName type public final String type public BoundingBox List List List Double coordinates String type this coordinates coordinates this type typepackage com twitter sdk android tweetui import android app Activity import android os Bundle import android view View import com twitter sdk android core internal scribe ScribeItem import java io Serializable public class PlayerActivity extends Activity static final String PLAYER ITEM PLAYER ITEM static final String SCRIBE ITEM SCRIBE ITEM static final VideoScribeClient videoScribeClient new VideoScribeClientImpl TweetUi getInstance PlayerController playerController Override public void onCreate Bundle savedInstanceState super onCreate savedInstanceState setContentView R layout tw player activity final PlayerItem item PlayerItem getIntent getSerializableExtra PLAYER ITEM final View rootView findViewById android R id content playerController new PlayerController rootView playerController prepare item final ScribeItem scribeItem ScribeItem getIntent getSerializableExtra SCRIBE ITEM scribeCardPlayImpression scribeItem Override protected void onResume super onResume playerController onResume Override protected void onPause playerController onPause super onPause Override public void onDestroy playerController onDestroy super onDestroy private void scribeCardPlayImpression ScribeItem scribeItem videoScribeClient play scribeItem public static class PlayerItem implements Serializable public String url public boolean looping public String callToActionUrl public String callToActionText public PlayerItem String url boolean looping this url url this looping looping public PlayerItem String url boolean looping String callToActionText String callToActionUrl this url url this looping looping this callToActionText callToActionText this callToActionUrl callToActionUrlpackage com twitter sdk android tweetui import android content Intent import android media MediaPlayer import android net Uri import android view View import android widget ProgressBar import android widget TextView import com twitter sdk android core IntentUtils import com twitter sdk android tweetui internal VideoControlView import com twitter sdk android tweetui internal VideoView import io fabric sdk android Fabric class PlayerController private static final String TAG PlayerController final VideoView videoView final VideoControlView videoControlView final ProgressBar videoProgressView final TextView callToActionView View rootView int seekPosition 0 boolean isPlaying true PlayerController View rootView this rootView rootView this videoView VideoView rootView findViewById R id video view this videoControlView VideoControlView rootView findViewById R id video control view this videoProgressView ProgressBar rootView findViewById R id video progress view this callToActionView TextView rootView findViewById R id call to action view Unit testing purposes PlayerController View rootView VideoView videoView VideoControlView videoControlView ProgressBar videoProgressView TextView callToActionView this rootView rootView this videoView videoView this videoControlView videoControlView this videoProgressView videoProgressView this callToActionView callToActionView void prepare PlayerActivity PlayerItem item try setUpCallToAction item setUpMediaControl item looping videoView setOnPreparedListener new MediaPlayer OnPreparedListener Override public void onPrepared MediaPlayer mediaPlayer videoProgressView setVisibility View GONE videoView setOnInfoListener new MediaPlayer OnInfoListener Override public boolean onInfo MediaPlayer mediaPlayer int what int extra if what MediaPlayer MEDIA INFO BUFFERING END videoProgressView setVisibility View GONE return true else if what MediaPlayer MEDIA INFO BUFFERING START videoProgressView setVisibility View VISIBLE return true return false final Uri uri Uri parse item url videoView setVideoURI uri item looping videoView requestFocus catch Exception e Fabric getLogger e TAG Error occurred during video playback e void onResume if seekPosition 0 videoView seekTo seekPosition if isPlaying videoView start videoControlView update void onPause isPlaying videoView isPlaying seekPosition videoView getCurrentPosition videoView pause void onDestroy videoView stopPlayback void setUpMediaControl boolean looping if looping setUpLoopControl else setUpMediaControl void setUpLoopControl videoControlView setVisibility View INVISIBLE videoView setOnClickListener new View OnClickListener Override public void onClick View view if videoView isPlaying videoView pause else videoView start void setUpMediaControl videoView setMediaController videoControlView void setUpCallToAction PlayerActivity PlayerItem item if item callToActionText null item callToActionUrl null callToActionView setVisibility View VISIBLE callToActionView setText item callToActionText setUpCallToActionListener item callToActionUrl setUpRootViewOnClickListener void setUpCallToActionListener final String callToActionUrl callToActionView setOnClickListener new View OnClickListener Override public void onClick View v final Uri uri Uri parse callToActionUrl final Intent intent new Intent Intent ACTION VIEW uri IntentUtils safeStartActivity callToActionView getContext intent void setUpRootViewOnClickListener rootView setOnClickListener new View OnClickListener Override public void onClick View v if callToActionView getVisibility View VISIBLE callToActionView setVisibility View GONE else callToActionView setVisibility View VISIBLEpackage com kaku colorfulnews widget import android content Context import android support annotation NonNull import android support annotation Nullable import android support v4 view ViewCompat import android support v4 widget ViewDragHelper import android util AttributeSet import android view MotionEvent import android view View import android view ViewConfiguration import android widget FrameLayout public class PullBackLayout extends FrameLayout private final ViewDragHelper dragger http blog csdn net lmj623565791 article details 46858663 private final int minimumFlingVelocity Nullable private Callback callback public PullBackLayout Context context this context null public PullBackLayout Context context AttributeSet attrs this context attrs 0 public PullBackLayout Context context AttributeSet attrs int defStyleAttr super context attrs defStyleAttr dragger ViewDragHelper create this 1f 8f new ViewDragCallback 1f 8f minimumFlingVelocity ViewConfiguration get context getScaledMinimumFlingVelocity public void setCallback Nullable Callback callback this callback callback Override public boolean onInterceptTouchEvent MotionEvent ev try return dragger shouldInterceptTouchEvent ev catch Exception e e printStackTrace return false Override public boolean onTouchEvent NonNull MotionEvent event try dragger processTouchEvent event return true catch Exception e e printStackTrace return false Override public void computeScroll if dragger continueSettling true ViewCompat postInvalidateOnAnimation this public interface Callback void onPullStart void onPull float progress void onPullCancel void onPullComplete private class ViewDragCallback extends ViewDragHelper Callback Override public boolean tryCaptureView View child int pointerId return true Override public int clampViewPositionHorizontal View child int left int dx return 0 Override public int clampViewPositionVertical View child int top int dy return Math max 0 top Override public int getViewHorizontalDragRange View child return 0 Override public int getViewVerticalDragRange View child return getHeight Override public void onViewCaptured View capturedChild int activePointerId if callback null callback onPullStart Override public void onViewPositionChanged View changedView int left int top int dx int dy if callback null callback onPull float top float getHeight Override public void onViewReleased View releasedChild float xvel float yvel int slop yvel minimumFlingVelocity getHeight 6 getHeight 3 if releasedChild getTop slop if callback null callback onPullComplete else if callback null callback onPullCancel dragger settleCapturedViewAt 0 0 invalidatepackage com kaku colorfulnews widget import android content Context import android util AttributeSet import android widget ImageView public class RatioImageView extends ImageView private int originalWidth 1 private int originalHeight 1 public RatioImageView Context context super context public RatioImageView Context context AttributeSet attrs super context attrs public RatioImageView Context context AttributeSet attrs int defStyleAttr super context attrs defStyleAttr public void setOriginalSize int originalWidth int originalHeight this originalWidth originalWidth this originalHeight originalHeight Override protected void onMeasure int widthMeasureSpec int heightMeasureSpec if originalWidth 0 originalHeight 0 float ratio float originalWidth float originalHeight int width MeasureSpec getSize widthMeasureSpec int height MeasureSpec getSize heightMeasureSpec if width 0 height int float width ratio setMeasuredDimension width height else super onMeasure widthMeasureSpec heightMeasureSpecpackage com zxy recovery core import android app Activity import android app Application import android content Context import android os Build import com zxy recovery callback RecoveryActivityLifecycleCallback import com zxy recovery callback RecoveryCallback import com zxy recovery exception RecoveryException import com zxy recovery tools RecoveryLog import com zxy recovery tools RecoveryUtil public class Recovery private volatile static Recovery sInstance private static final Object LOCK new Object private Context mContext private boolean isDebug false private boolean isRecoverStack true private boolean isRecoverInBackground false private Class extends Activity mMainPageClass private RecoveryCallback mCallback private Recovery public static Recovery getInstance if sInstance null synchronized LOCK if sInstance null sInstance new Recovery return sInstance public void init Context context if context null throw new RecoveryException Context can not be null if context instanceof Application context context getApplicationContext mContext context registerRecoveryHandler registerRecoveryLifecycleCallback public Recovery debug boolean isDebug this isDebug isDebug return this public Recovery recoverStack boolean isRecoverStack this isRecoverStack isRecoverStack return this public Recovery recoverInBackground boolean isRecoverInBackground this isRecoverInBackground isRecoverInBackground return this public Recovery mainPage Class extends Activity clazz this mMainPageClass clazz return this public Recovery callback RecoveryCallback callback this mCallback callback return this private void registerRecoveryHandler RecoveryHandler newInstance Thread getDefaultUncaughtExceptionHandler setCallback mCallback register private void registerRecoveryLifecycleCallback Application mContext registerActivityLifecycleCallbacks new RecoveryActivityLifecycleCallback private void registerRecoveryProxy OS version in the 5 0 6 0 don t register agent if Build VERSION SDK INT Build VERSION CODES LOLLIPOP Build VERSION SDK INT Build VERSION CODES M return if mMainPageClass null return if RecoveryUtil isMainProcess RecoveryUtil checkNotNull mContext The context is not initialized return new Thread new Runnable Override public void run while true boolean isSuccess RecoveryComponentHook hookActivityManagerProxy RecoveryLog e hook is success isSuccess if isSuccess break start public Context getContext return RecoveryUtil checkNotNull mContext The context is not initialized public boolean isDebug return isDebug boolean isRecoverInBackground return isRecoverInBackground boolean isRecoverStack return isRecoverStack Class extends Activity getMainPageClass return mMainPageClasspackage com zxy recovery core import android content DialogInterface import android content Intent import android os Bundle import android support v7 app AlertDialog import android support v7 app AppCompatActivity import android support v7 widget Toolbar import android view KeyEvent import android view Menu import android view MenuItem import android view View import android widget Button import android widget ImageButton import android widget TextView import android widget Toast import com zxy recovery R import com zxy recovery tools RecoverySharedPrefsUtil import com zxy recovery tools RecoveryUtil import com zxy recovery tools Reflect import java io File import java io FileWriter import java io IOException import java text SimpleDateFormat import java util ArrayList import java util Date import java util Locale public final class RecoveryActivity extends AppCompatActivity public static final String RECOVERY MODE ACTIVE recovery mode active private static final String DEFAULT CRASH FILE DIR NAME recovery crash private boolean isDebugMode false private boolean isDebugModeActive false private RecoveryStore ExceptionData mExceptionData private Toolbar mToolbar private String mStackTrace private String mCause private Button mRecoverBtn private Button mRestartBtn private Button mRestartClearBtn private View mMainLayout private View mDebugLayout private TextView mExceptionTypeTv private TextView mClassNameTv private TextView mMethodNameTv private TextView mLineNumberTv private TextView mStackTraceTv private TextView mCauseTv private TextView mCrashTipsTv Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState setContentView R layout activity recovery setupToolbar initView initData setupEvent private void setupToolbar mToolbar Toolbar findViewById R id toolbar setSupportActionBar mToolbar if getSupportActionBar null getSupportActionBar setDisplayShowTitleEnabled false mToolbar setTitle RecoveryUtil getAppName this mToolbar setNavigationOnClickListener new View OnClickListener Override public void onClick View v isDebugModeActive false showMainView setDisplayHomeAsUpEnabled false Override public boolean onCreateOptionsMenu Menu menu if isDebugMode return false if isDebugModeActive getMenuInflater inflate R menu menu recovery sub menu return true getMenuInflater inflate R menu menu recovery menu return true Override public boolean onOptionsItemSelected MenuItem item int id item getItemId if id R id action debug isDebugModeActive true showDebugView setDisplayHomeAsUpEnabled true else if id R id action save boolean isSuccess saveCrashData Toast makeText this isSuccess Save success Save failed Toast LENGTH SHORT show return super onOptionsItemSelected item private void initView mMainLayout findViewById R id recovery main layout mDebugLayout findViewById R id recovery debug layout mRecoverBtn Button findViewById R id btn recover mRestartBtn Button findViewById R id btn restart mRestartClearBtn Button findViewById R id btn restart clear mExceptionTypeTv TextView findViewById R id tv type mClassNameTv TextView findViewById R id tv class name mMethodNameTv TextView findViewById R id tv method name mLineNumberTv TextView findViewById R id tv line number mStackTraceTv TextView findViewById R id tv stack trace mCauseTv TextView findViewById R id tv cause mCrashTipsTv TextView findViewById R id tv crash tips private void initData isDebugMode isDebugMode if isDebugMode invalidateOptionsMenu mExceptionData getExceptionData mCause getCause mStackTrace getStackTrace private void setupEvent mRecoverBtn setOnClickListener new View OnClickListener Override public void onClick View v boolean restart RecoverySharedPrefsUtil shouldRestartApp if restart RecoverySharedPrefsUtil clear restart return if isRecoverStack recoverActivityStack else recoverTopActivity mRestartBtn setOnClickListener new View OnClickListener Override public void onClick View v boolean restart RecoverySharedPrefsUtil shouldRestartApp if restart RecoverySharedPrefsUtil clear restart mRestartClearBtn setOnClickListener new View OnClickListener Override public void onClick View v AlertDialog dialog new AlertDialog Builder RecoveryActivity this setTitle getResources getString R string recovery dialog tips setMessage getResources getString R string recovery dialog tips msg setPositiveButton getResources getString R string recovery dialog sure new DialogInterface OnClickListener Override public void onClick DialogInterface dialog int which if dialog null dialog dismiss RecoveryUtil clearApplicationData restart setNegativeButton getResources getString R string recovery dialog cancel new DialogInterface OnClickListener Override public void onClick DialogInterface dialog int which if dialog null dialog dismiss create dialog setCanceledOnTouchOutside false dialog show mCrashTipsTv setText String format getResources getString R string recovery crash tips msg RecoveryUtil getAppName this if mExceptionData null String type mExceptionData type null mExceptionData type String name mExceptionData className null mExceptionData className mExceptionTypeTv setText String format getResources getString R string recovery exception type type substring type lastIndexOf 1 mClassNameTv setText String format getResources getString R string recovery class name name substring name lastIndexOf 1 mMethodNameTv setText String format getResources getString R string recovery method name mExceptionData methodName mLineNumberTv setText String format getResources getString R string recovery line number mExceptionData lineNumber mCauseTv setText String valueOf mCause mStackTraceTv setText String valueOf mStackTrace private boolean isDebugMode return getIntent getBooleanExtra RecoveryStore IS DEBUG false private RecoveryStore ExceptionData getExceptionData return getIntent getParcelableExtra RecoveryStore EXCEPTION DATA private String getCause return getIntent getStringExtra RecoveryStore EXCEPTION CAUSE private String getStackTrace return getIntent getStringExtra RecoveryStore STACK TRACE private void restart Intent launchIntent getApplication getPackageManager getLaunchIntentForPackage this getPackageName if launchIntent null launchIntent addFlags Intent FLAG ACTIVITY NEW TASK Intent FLAG ACTIVITY CLEAR TASK startActivity launchIntent overridePendingTransition 0 0 finish private void recoverTopActivity Intent intent getRecoveryIntent if intent null RecoveryUtil isIntentAvailable this intent intent setExtrasClassLoader getClassLoader intent addFlags Intent FLAG ACTIVITY NEW TASK Intent FLAG ACTIVITY CLEAR TASK intent putExtra RECOVERY MODE ACTIVE true startActivity intent overridePendingTransition 0 0 finish return restart private boolean isRecoverStack boolean hasRecoverStack getIntent hasExtra RecoveryStore RECOVERY STACK return hasRecoverStack getIntent getBooleanExtra RecoveryStore RECOVERY STACK true private void recoverActivityStack ArrayList Intent intents getRecoveryIntents if intents null intents isEmpty ArrayList Intent availableIntents new ArrayList for Intent tmp intents if tmp null RecoveryUtil isIntentAvailable this tmp tmp setExtrasClassLoader getClassLoader availableIntents add tmp if availableIntents isEmpty availableIntents get availableIntents size 1 putExtra RECOVERY MODE ACTIVE true startActivities availableIntents toArray new Intent availableIntents size overridePendingTransition 0 0 finish return restart private Intent getRecoveryIntent boolean hasRecoverIntent getIntent hasExtra RecoveryStore RECOVERY INTENT if hasRecoverIntent return null return getIntent getParcelableExtra RecoveryStore RECOVERY INTENT private ArrayList Intent getRecoveryIntents boolean hasRecoveryIntents getIntent hasExtra RecoveryStore RECOVERY INTENTS if hasRecoveryIntents return null return getIntent getParcelableArrayListExtra RecoveryStore RECOVERY INTENTS private boolean saveCrashData SimpleDateFormat format new SimpleDateFormat yyyy MM dd HH mm ss Locale CHINA String date format format new Date System currentTimeMillis File dir new File getExternalFilesDir null File separator DEFAULT CRASH FILE DIR NAME if dir exists dir mkdirs File file new File dir String valueOf date txt FileWriter writer null try writer new FileWriter file writer write nException n mExceptionData null null mExceptionData toString n n writer write Cause n mCause n n writer write StackTrace n mStackTrace n n writer flush catch IOException e e printStackTrace return false finally if writer null try writer close catch IOException e e printStackTrace return true private void killProcess android os Process killProcess android os Process myPid System exit 10 private void setDisplayHomeAsUpEnabled boolean enabled if getSupportActionBar null getSupportActionBar setDisplayHomeAsUpEnabled enabled final ImageButton navButton ImageButton Reflect on Toolbar class field mNavButtonView get mToolbar if navButton null if enabled navButton setVisibility View VISIBLE else navButton setVisibility View GONE invalidateOptionsMenu private void showDebugView mMainLayout setVisibility View GONE mDebugLayout setVisibility View VISIBLE private void showMainView mMainLayout setVisibility View VISIBLE mDebugLayout setVisibility View GONE Override public boolean onKeyDown int keyCode KeyEvent event if event getKeyCode KeyEvent KEYCODE BACK isDebugModeActive isDebugModeActive false showMainView setDisplayHomeAsUpEnabled false return true return super onKeyDown keyCode event Override protected void onStop super onStop finish Override public void finish super finish killProcesspackage com zxy recovery callback import android app Activity import android app Application import android content Intent import android os Bundle import android view View import android view Window import com zxy recovery core Recovery import com zxy recovery core RecoveryActivity import com zxy recovery core RecoveryStore import com zxy recovery tools Reflect public class RecoveryActivityLifecycleCallback implements Application ActivityLifecycleCallbacks Override public void onActivityCreated final Activity activity Bundle savedInstanceState boolean isLegal RecoveryStore getInstance verifyActivity activity if isLegal return if activity getIntent getBooleanExtra RecoveryActivity RECOVERY MODE ACTIVE false Reflect on Recovery class method registerRecoveryProxy invoke Recovery getInstance Window window activity getWindow if window null View decorView window getDecorView if decorView null return decorView post new Runnable Override public void run RecoveryStore getInstance putActivity activity Object o activity getIntent clone RecoveryStore getInstance setIntent Intent o Override public void onActivityStarted Activity activity Override public void onActivityResumed Activity activity Override public void onActivityPaused Activity activity Override public void onActivityStopped Activity activity Override public void onActivitySaveInstanceState Activity activity Bundle outState Override public void onActivityDestroyed Activity activity RecoveryStore getInstance removeActivity activitypackage com zxy recovery callback public interface RecoveryCallback void stackTrace String stackTrace void cause String cause void exception String throwExceptionType String throwClassName String throwMethodName int throwLineNumberpackage com zxy recovery core import com zxy recovery tools RecoveryLog import com zxy recovery tools Reflect import java lang reflect Proxy final class RecoveryComponentHook static boolean hookActivityManagerProxy Singleton IActivityManager Object gDefault Reflect on android app ActivityManagerNative field gDefault get null if gDefault null return false Object currentActivityManagerProxy Reflect on android util Singleton field mInstance get gDefault if currentActivityManagerProxy null return false try ActivityManagerDelegate delegate new ActivityManagerDelegate currentActivityManagerProxy if currentActivityManagerProxy getClass isInstance delegate return true Class interfaces Class forName android app ActivityManagerNative getInterfaces Object proxy Proxy newProxyInstance Thread currentThread getContextClassLoader interfaces delegate Reflect on android util Singleton field mInstance set gDefault proxy catch ClassNotFoundException e e printStackTrace RecoveryLog e e toString return truepackage com zxy recovery exception public class RecoveryException extends RuntimeException public RecoveryException String message super message public RecoveryException String message Throwable cause super message causepackage com zxy recovery core import android content Intent import android text TextUtils import com zxy recovery callback RecoveryCallback import com zxy recovery tools DefaultHandlerUtil import com zxy recovery tools RecoverySharedPrefsUtil import com zxy recovery tools RecoveryUtil import java io PrintWriter import java io StringWriter final class RecoveryHandler implements Thread UncaughtExceptionHandler private Thread UncaughtExceptionHandler mDefaultUncaughtExceptionHandler private RecoveryCallback mCallback private RecoveryStore ExceptionData mExceptionData private String mStackTrace private String mCause private RecoveryHandler Thread UncaughtExceptionHandler defHandler mDefaultUncaughtExceptionHandler defHandler static RecoveryHandler newInstance Thread UncaughtExceptionHandler defHandler return new RecoveryHandler defHandler Override public synchronized void uncaughtException Thread t Throwable e RecoverySharedPrefsUtil recordCrashData StringWriter sw new StringWriter PrintWriter pw new PrintWriter sw e printStackTrace pw pw flush String stackTrace sw toString String cause e getMessage Throwable rootTr e while e getCause null e e getCause if e getStackTrace null e getStackTrace length 0 rootTr e String msg e getMessage if TextUtils isEmpty msg cause msg String exceptionType rootTr getClass getName String throwClassName String throwMethodName int throwLineNumber if rootTr getStackTrace length 0 StackTraceElement trace rootTr getStackTrace 0 throwClassName trace getClassName throwMethodName trace getMethodName throwLineNumber trace getLineNumber else throwClassName unknown throwMethodName unknown throwLineNumber 0 mExceptionData RecoveryStore ExceptionData newInstance type exceptionType className throwClassName methodName throwMethodName lineNumber throwLineNumber mStackTrace stackTrace mCause cause if mCallback null mCallback stackTrace stackTrace mCallback cause cause mCallback exception exceptionType throwClassName throwMethodName throwLineNumber if DefaultHandlerUtil isSystemDefaultUncaughtExceptionHandler mDefaultUncaughtExceptionHandler if mDefaultUncaughtExceptionHandler null startRecoverActivity mDefaultUncaughtExceptionHandler uncaughtException t e else startRecoverActivity RecoveryHandler setCallback RecoveryCallback callback mCallback callback return this private void startRecoverActivity if RecoveryUtil isAppInBackground Recovery getInstance getContext Recovery getInstance isRecoverInBackground killProcess return Intent intent new Intent intent setClass Recovery getInstance getContext RecoveryActivity class intent addFlags Intent FLAG ACTIVITY NEW TASK Intent FLAG ACTIVITY CLEAR TASK Intent FLAG ACTIVITY EXCLUDE FROM RECENTS if RecoveryStore getInstance getIntent null intent putExtra RecoveryStore RECOVERY INTENT RecoveryStore getInstance getIntent if RecoveryStore getInstance getIntents isEmpty intent putParcelableArrayListExtra RecoveryStore RECOVERY INTENTS RecoveryStore getInstance getIntents intent putExtra RecoveryStore RECOVERY STACK Recovery getInstance isRecoverStack intent putExtra RecoveryStore IS DEBUG Recovery getInstance isDebug if mExceptionData null intent putExtra RecoveryStore EXCEPTION DATA mExceptionData if mStackTrace null intent putExtra RecoveryStore STACK TRACE mStackTrace if mCause null intent putExtra RecoveryStore EXCEPTION CAUSE mCause Recovery getInstance getContext startActivity intent killProcess void register Thread setDefaultUncaughtExceptionHandler this private void killProcess android os Process killProcess android os Process myPid System exit 10package com zxy recovery tools import android util Log import com zxy recovery core Recovery public class RecoveryLog private static final String TAG Recovery public static void e String message if Recovery getInstance isDebug Log e TAG messagepackage com zxy recovery tools import com zxy recovery core CrashData import com zxy recovery core Recovery import com zxy recovery exception RecoveryException public class RecoverySharedPrefsUtil private static final long DEFAULT TIME INTERVAL 60 1000 private static final int DEFAULT MAX COUNT 3 private static final String SHARED PREFS NAME recovery info private static final String CRASH COUNT crash count private static final String CRASH TIME crash time private static final String SHOULD RESTART APP should restart app private RecoverySharedPrefsUtil throw new RecoveryException Stub public static void recordCrashData int count 0 long time 0L boolean shouldRestart false try count Integer parseInt get CRASH COUNT String valueOf 0 time Long parseLong get CRASH TIME String valueOf 0L catch Exception e count 0 time 0L RecoveryLog e e getMessage count Math max count 0 time Math max time 0L count 1 time time 0L System currentTimeMillis time long interval System currentTimeMillis time if count DEFAULT MAX COUNT interval DEFAULT TIME INTERVAL shouldRestart true count 0 time 0L else if count DEFAULT MAX COUNT interval DEFAULT TIME INTERVAL count 1 time System currentTimeMillis CrashData data CrashData newInstance count count time time restart shouldRestart RecoveryLog e data toString saveCrashData data private static void saveCrashData CrashData data if data null return SharedPreferencesCompat newBuilder Recovery getInstance getContext SHARED PREFS NAME put CRASH COUNT String valueOf data crashCount put CRASH TIME String valueOf data crashTime put SHOULD RESTART APP String valueOf data shouldRestart apply public static boolean shouldRestartApp return Boolean parseBoolean get SHOULD RESTART APP String valueOf false public static void clear SharedPreferencesCompat clear Recovery getInstance getContext SHARED PREFS NAME private static void put String key String value SharedPreferencesCompat put Recovery getInstance getContext SHARED PREFS NAME key value private static String get String key String defValue return SharedPreferencesCompat get Recovery getInstance getContext SHARED PREFS NAME key defValuepackage com zxy recovery core import android app Activity import android content ComponentName import android content Intent import android os Parcel import android os Parcelable import java lang ref WeakReference import java util ArrayList import java util List import java util concurrent CopyOnWriteArrayList import java util concurrent atomic AtomicInteger public final class RecoveryStore static final String RECOVERY INTENT recovery intent static final String RECOVERY INTENTS recovery intents static final String RECOVERY STACK recovery stack static final String IS DEBUG recovery is debug static final String STACK TRACE recovery stack trace static final String EXCEPTION DATA recovery exception data static final String EXCEPTION CAUSE recovery exception cause private volatile static RecoveryStore sInstance private static final Object LOCK new Object private List WeakReference Activity mRunningActivities private Intent mIntent private RecoveryStore mRunningActivities new CopyOnWriteArrayList public static RecoveryStore getInstance if sInstance null synchronized LOCK if sInstance null sInstance new RecoveryStore return sInstance public Intent getIntent return mIntent public synchronized void setIntent Intent intent mIntent intent public boolean verifyActivity Activity activity return activity null RecoveryActivity class isInstance activity public List WeakReference Activity getRunningActivities return mRunningActivities public void putActivity Activity activity WeakReference Activity weakReference new WeakReference activity mRunningActivities add weakReference public void removeActivity Activity activity for WeakReference Activity activityWeakReference mRunningActivities if activityWeakReference null continue Activity tmpActivity activityWeakReference get if tmpActivity null continue if tmpActivity activity mRunningActivities remove activityWeakReference break int getRunningActivityCount AtomicInteger count new AtomicInteger 0 for WeakReference Activity activityWeakReference mRunningActivities if activityWeakReference null continue Activity activity activityWeakReference get if activity null continue count set count incrementAndGet return count get ComponentName getBaseActivity for WeakReference Activity activityWeakReference mRunningActivities if activityWeakReference null continue Activity tmpActivity activityWeakReference get if tmpActivity null continue return tmpActivity getComponentName return null ArrayList Intent getIntents ArrayList Intent intentList new ArrayList for WeakReference Activity activityWeakReference mRunningActivities if activityWeakReference null continue Activity tmpActivity activityWeakReference get if tmpActivity null continue intentList add Intent tmpActivity getIntent clone return intentList static final class ExceptionData implements Parcelable String type String className String methodName int lineNumber Override public int describeContents return 0 Override public void writeToParcel Parcel dest int flags dest writeString this type dest writeString this className dest writeString this methodName dest writeInt this lineNumber ExceptionData public static ExceptionData newInstance return new ExceptionData public ExceptionData type String type this type type return this public ExceptionData className String className this className className return this public ExceptionData methodName String methodName this methodName methodName return this public ExceptionData lineNumber int lineNumber this lineNumber lineNumber return this protected ExceptionData Parcel in this type in readString this className in readString this methodName in readString this lineNumber in readInt public static final Creator ExceptionData CREATOR new Creator ExceptionData Override public ExceptionData createFromParcel Parcel source return new ExceptionData source Override public ExceptionData newArray int size return new ExceptionData size Override public String toString return ExceptionData className className type type methodName methodName lineNumber lineNumberpackage com zxy recovery tools import android app ActivityManager import android app Application import android content Context import android content Intent import android content pm ApplicationInfo import android content pm PackageManager import android content pm ResolveInfo import android os Environment import com zxy recovery core Recovery import com zxy recovery exception RecoveryException import com zxy recovery exception ReflectException import java io File import java util List public class RecoveryUtil private RecoveryUtil throw new RecoveryException Stub public static T T checkNotNull T t String message if t null throw new ReflectException String valueOf message return t public static boolean isIntentAvailable Context context Intent intent if context null intent null return false PackageManager packageManager context getApplicationContext getPackageManager List ResolveInfo list packageManager queryIntentActivities intent PackageManager MATCH DEFAULT ONLY return list size 0 public static boolean isAppInBackground Context context ActivityManager activityManager ActivityManager context getSystemService Context ACTIVITY SERVICE List ActivityManager RunningAppProcessInfo appProcesses activityManager getRunningAppProcesses if appProcesses null return true for ActivityManager RunningAppProcessInfo appProcess appProcesses if appProcess processName equals context getPackageName return appProcess importance ActivityManager RunningAppProcessInfo IMPORTANCE BACKGROUND return false public static String getAppName Context context PackageManager packageManager null ApplicationInfo applicationInfo null if context instanceof Application context context getApplicationContext try packageManager context getPackageManager applicationInfo packageManager getApplicationInfo context getPackageName 0 catch PackageManager NameNotFoundException e applicationInfo null CharSequence charSequence packageManager getApplicationLabel applicationInfo return charSequence null String charSequence public static boolean isMainProcess Context context try ActivityManager am ActivityManager context getSystemService Context ACTIVITY SERVICE List ActivityManager RunningAppProcessInfo processInfo am getRunningAppProcesses String mainProcessName context getPackageName int myPid android os Process myPid for ActivityManager RunningAppProcessInfo info processInfo if info pid myPid mainProcessName equals info processName return true catch Exception e e printStackTrace return false private static File getDataDir return new File File separator data File separator data File separator Recovery getInstance getContext getPackageName private static File getExternalDataDir File file null if Environment MEDIA MOUNTED equals Environment getExternalStorageState file Recovery getInstance getContext getExternalCacheDir return file null null file getParentFile private static boolean clearAppData File dir if dir null dir isDirectory dir exists return false File files dir listFiles int length files length for int i 0 i length i File file files i if file null continue if file isFile file exists boolean result file delete RecoveryLog e file getName result delete success delete failed continue if file isDirectory file exists clearAppData file return true public static void clearApplicationData clearAppData getDataDir clearAppData getExternalDataDirpackage com zxy recovery tools import android text TextUtils import com zxy recovery exception ReflectException import java lang reflect Constructor import java lang reflect Field import java lang reflect InvocationTargetException import java lang reflect Method import java lang reflect Modifier public class Reflect private Class mReflectObjectClazz private Reflect String className checkNotEmpty className ClassName can not be empty try this mReflectObjectClazz Class forName className catch ClassNotFoundException e throw new ReflectException Class className can not be found e getCause private Reflect Class clazz checkNotNull clazz Reflect class can not be null this mReflectObjectClazz clazz public static Reflect on String className return new Reflect className public static Reflect on Class clazz return new Reflect clazz public final ReflectMethod method String methodName Class types checkNotEmpty methodName MethodName can not be empty Method method try if types null types length 0 method mReflectObjectClazz getDeclaredMethod methodName else method mReflectObjectClazz getDeclaredMethod methodName types method setAccessible true return ReflectMethod create method catch NoSuchMethodException e e printStackTrace return ReflectMethod create null public static final class ReflectMethod private Method method private ReflectMethod Method method this method method static ReflectMethod create Method method return new ReflectMethod method public Method obtain return method public Object invoke Object invoker Object params if method null return null if invoker null if method getModifiers Modifier STATIC 0 throw new ReflectException Invoker can not be null try if params null params length 0 return method invoke invoker return method invoke invoker params catch IllegalAccessException e e printStackTrace catch InvocationTargetException e e printStackTrace return null public final ReflectField field String fieldName checkNotEmpty fieldName FieldName can not be empty try Field field mReflectObjectClazz getDeclaredField fieldName field setAccessible true return ReflectField create field catch NoSuchFieldException e e printStackTrace return ReflectField create null public static final class ReflectField private Field field private ReflectField Field field this field field static ReflectField create Field field return new ReflectField field public Field obtain return field public void set Object target Object value if field null return if target null if field getModifiers Modifier STATIC 0 throw new ReflectException Target object can not be null try field set target value catch IllegalAccessException e e printStackTrace public Object get Object target if field null return null if target null if field getModifiers Modifier STATIC 0 throw new ReflectException Target object can not be null try return field get target catch IllegalAccessException e e printStackTrace return null public final ReflectConstructor constructor Class types Constructor constructor try if types null types length 0 constructor mReflectObjectClazz getDeclaredConstructor else constructor mReflectObjectClazz getDeclaredConstructor types constructor setAccessible true return ReflectConstructor create constructor catch NoSuchMethodException e e printStackTrace return ReflectConstructor create null public static final class ReflectConstructor private Constructor constructor private ReflectConstructor Constructor constructor this constructor constructor static ReflectConstructor create Constructor constructor return new ReflectConstructor constructor public Constructor obtain return constructor public Object newInstance Object params if constructor null return null try if params null params length 0 return constructor newInstance return constructor newInstance params catch InstantiationException e e printStackTrace catch IllegalAccessException e e printStackTrace catch InvocationTargetException e e printStackTrace return null public Object newInstance if mReflectObjectClazz null return null try return mReflectObjectClazz newInstance catch InstantiationException e e printStackTrace catch IllegalAccessException e e printStackTrace return null private static T void checkNotNull T t String message if t null throw new ReflectException String valueOf message private static void checkNotEmpty String t String message if TextUtils isEmpty t throw new ReflectException String valueOf messagepackage com zxy recovery exception public class ReflectException extends RuntimeException public ReflectException super public ReflectException String detailMessage super detailMessage public ReflectException String detailMessage Throwable throwable super detailMessage throwable public ReflectException Throwable throwable super throwablepackage com kaku colorfulnews listener public interface RequestCallBack T void beforeRequest void success T data void onError String errorMsgpackage com twitter sdk android unity import android app Activity import android content Intent import android os Bundle import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterException import com twitter sdk android core TwitterSession import com twitter sdk android core TwitterSessionHelper import com twitter sdk android core identity TwitterAuthClient public class RequestEmailActivity extends Activity TwitterAuthClient authClient Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState final String session getIntent getStringExtra TwitterKit EXTRA TWITTER SESSION final TwitterSession twitterSession TwitterSessionHelper deserialize session new TwitterAuthClient requestEmail twitterSession new Callback String Override public void success Result String result final UnityMessage message new UnityMessage Builder setMethod RequestEmailComplete setData result data build message send finish Override public void failure TwitterException ex final String error new ApiError Serializer serialize new ApiError 0 ex getMessage final UnityMessage message new UnityMessage Builder setMethod RequestEmailFailed setData error build message send finish Override protected void onActivityResult int requestCode int resultCode Intent data super onActivityResult requestCode resultCode data authClient onActivityResult requestCode resultCode datapackage com twitter sdk android tweetui import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterException import com twitter sdk android core models Tweet class ResetTweetCallback extends Callback Tweet BaseTweetView baseTweetView TweetRepository tweetRepository Callback Tweet cb ResetTweetCallback BaseTweetView baseTweetView TweetRepository tweetRepository Callback Tweet cb this baseTweetView baseTweetView this tweetRepository tweetRepository this cb cb Override public void success Result Tweet result tweetRepository updateCache result data baseTweetView setTweet result data if cb null cb success result Override public void failure TwitterException exception if cb null cb failure exceptionpackage com twitter sdk android core import retrofit2 Response public class Result T public final T data public final Response response public Result T data Response response this data data this response responsepackage com kaku colorfulnews repository network import android support annotation NonNull import android util SparseArray import com kaku colorfulnews App import com kaku colorfulnews common ApiConstants import com kaku colorfulnews common HostType import com kaku colorfulnews mvp entity GirlData import com kaku colorfulnews mvp entity NewsDetail import com kaku colorfulnews mvp entity NewsSummary import com kaku colorfulnews utils NetUtil import com socks library KLog import java io File import java io IOException import java util List import java util Locale import java util Map import java util concurrent TimeUnit import okhttp3 Cache import okhttp3 CacheControl import okhttp3 Interceptor import okhttp3 OkHttpClient import okhttp3 Request import okhttp3 Response import okhttp3 ResponseBody import retrofit2 Retrofit import retrofit2 adapter rxjava RxJavaCallAdapterFactory import retrofit2 converter gson GsonConverterFactory import rx Observable public class RetrofitManager private NewsService mNewsService private static final long CACHE STALE SEC 60 60 24 2 private static final String CACHE CONTROL CACHE only if cached max stale CACHE STALE SEC private static final String CACHE CONTROL AGE max age 0 private static volatile OkHttpClient sOkHttpClient private static SparseArray RetrofitManager sRetrofitManager new SparseArray HostType TYPE COUNT public RetrofitManager HostType HostTypeChecker int hostType Retrofit retrofit new Retrofit Builder baseUrl ApiConstants getHost hostType client getOkHttpClient addConverterFactory GsonConverterFactory create addCallAdapterFactory RxJavaCallAdapterFactory create build mNewsService retrofit create NewsService class private OkHttpClient getOkHttpClient if sOkHttpClient null synchronized RetrofitManager class Cache cache new Cache new File App getAppContext getCacheDir HttpCache 1024 1024 100 if sOkHttpClient null sOkHttpClient new OkHttpClient Builder cache cache connectTimeout 6 TimeUnit SECONDS readTimeout 6 TimeUnit SECONDS writeTimeout 6 TimeUnit SECONDS addInterceptor mRewriteCacheControlInterceptor addNetworkInterceptor mRewriteCacheControlInterceptor addInterceptor mLoggingInterceptor build return sOkHttpClient private final Interceptor mRewriteCacheControlInterceptor new Interceptor Override public Response intercept Chain chain throws IOException Request request chain request if NetUtil isNetworkAvailable request request newBuilder cacheControl CacheControl FORCE CACHE build KLog d no network Response originalResponse chain proceed request if NetUtil isNetworkAvailable Headers String cacheControl request cacheControl toString return originalResponse newBuilder header Cache Control cacheControl removeHeader Pragma build else return originalResponse newBuilder header Cache Control public only if cached max stale CACHE STALE SEC removeHeader Pragma build private final Interceptor mLoggingInterceptor new Interceptor Override public Response intercept Chain chain throws IOException Request request chain request long t1 System nanoTime KLog i String format Sending request s on s n s request url chain connection request headers Response response chain proceed request long t2 System nanoTime KLog i String format Locale getDefault Received response for s in 1fms n s response request url t2 t1 1e6d response headers return response public static RetrofitManager getInstance int hostType RetrofitManager retrofitManager sRetrofitManager get hostType if retrofitManager null retrofitManager new RetrofitManager hostType sRetrofitManager put hostType retrofitManager return retrofitManager return retrofitManager NonNull private String getCacheControl return NetUtil isNetworkAvailable CACHE CONTROL AGE CACHE CONTROL CACHE public Observable Map String List NewsSummary getNewsListObservable String newsType String newsId int startPage return mNewsService getNewsList getCacheControl newsType newsId startPage public Observable Map String NewsDetail getNewsDetailObservable String postId KLog d Thread currentThread getName return mNewsService getNewDetail getCacheControl postId public Observable ResponseBody getNewsBodyHtmlPhoto String photoPath return mNewsService getNewsBodyHtmlPhoto photoPath public Observable GirlData getPhotoListObservable int size int page return mNewsService getPhotoList size pagepackage com twitter sdk android tweetcomposer import android graphics Bitmap import android graphics BitmapShader import android graphics Canvas import android graphics Paint import android graphics Path import android graphics RectF import android graphics Shader import com squareup picasso Transformation import java util Arrays import static android graphics Bitmap createBitmap class RoundedCornerTransformation implements Transformation final float radii RoundedCornerTransformation float radii this radii radii Override public Bitmap transform Bitmap source final RectF rect new RectF 0 0 source getWidth source getHeight final Bitmap result createBitmap source getWidth source getHeight source getConfig final BitmapShader bitmapShader new BitmapShader source Shader TileMode CLAMP Shader TileMode CLAMP final Paint paint new Paint paint setAntiAlias true paint setShader bitmapShader final Path path new Path path addRoundRect rect radii Path Direction CCW final Canvas canvas new Canvas result canvas drawPath path paint source recycle return result Override public String key return RoundedCornerTransformation Arrays toString radii public static class Builder int topLeftRadius int topRightRadius int bottomRightRadius int bottomLeftRadius public Builder setRadius int radius topLeftRadius radius topRightRadius radius bottomRightRadius radius bottomLeftRadius radius return this public Builder setRadii int topLeftRadius int topRightRadius int bottomRightRadius int bottomLeftRadius this topLeftRadius topLeftRadius this topRightRadius topRightRadius this bottomRightRadius bottomRightRadius this bottomLeftRadius bottomLeftRadius return this RoundedCornerTransformation build if topLeftRadius 0 topRightRadius 0 bottomRightRadius 0 bottomLeftRadius 0 throw new IllegalStateException Radius must not be negative final float radii topLeftRadius topLeftRadius topRightRadius topRightRadius bottomRightRadius bottomRightRadius bottomLeftRadius bottomLeftRadius return new RoundedCornerTransformation radiipackage com twitter sdk android mopub internal import android content Context import android graphics Bitmap import android graphics BitmapShader import android graphics Canvas import android graphics Paint import android graphics Path import android graphics RectF import android graphics Shader import android graphics drawable BitmapDrawable import android util AttributeSet import android widget ImageView import static android graphics Bitmap createBitmap public class RoundedImageView extends ImageView private float roundedCornerRadii public RoundedImageView Context context AttributeSet attrs super context attrs 0 setDefaultCornerRadii public RoundedImageView Context context AttributeSet attrs int styleResId super context attrs styleResId setDefaultCornerRadii private void setDefaultCornerRadii setCornerRadii 0 0 0 0 public void setCornerRadii int topLeftRadius int topRightRadius int bottomLeftRadius int bottomRightRadius if topLeftRadius 0 topRightRadius 0 bottomRightRadius 0 bottomLeftRadius 0 throw new IllegalStateException Radius must not be negative roundedCornerRadii new float topLeftRadius topLeftRadius topRightRadius topRightRadius bottomLeftRadius bottomLeftRadius bottomRightRadius bottomRightRadius Override public void setImageBitmap Bitmap bitmap setImageDrawable new BitmapDrawable getResources transform bitmap private Bitmap transform Bitmap source final RectF rect new RectF 0 0 source getWidth source getHeight final Bitmap result createBitmap source getWidth source getHeight source getConfig final BitmapShader bitmapShader new BitmapShader source Shader TileMode CLAMP Shader TileMode CLAMP final Paint paint new Paint paint setAntiAlias true paint setShader bitmapShader final Path path new Path path addRoundRect rect roundedCornerRadii Path Direction CCW final Canvas canvas new Canvas result canvas drawPath path paint return resultpackage com kaku colorfulnews utils import rx Observable import rx subjects PublishSubject import rx subjects SerializedSubject import rx subjects Subject public class RxBus private static volatile RxBus sRxBus private final Subject Object Object mBus PublishSubject Observable public RxBus mBus new SerializedSubject PublishSubject create RxBus public static RxBus getInstance if sRxBus null synchronized RxBus class if sRxBus null sRxBus new RxBus return sRxBus public void post Object o mBus onNext o eventType eventType public T Observable T toObservable Class T eventType return mBus ofType eventType ofType filter cast return mBus filter new Func1 Object Boolean Override public Boolean call Object o return eventType isInstance o cast eventTypepackage com twitter sdk android core models import com google gson Gson import com google gson TypeAdapter import com google gson TypeAdapterFactory import com google gson reflect TypeToken import com google gson stream JsonReader import com google gson stream JsonWriter import java io IOException import java util Collections import java util List public class SafeListAdapter implements TypeAdapterFactory Override public T TypeAdapter T create final Gson gson final TypeToken T tokenType final TypeAdapter T delegate gson getDelegateAdapter this tokenType return new TypeAdapter T Override public void write JsonWriter out T value throws IOException delegate write out value Override public T read JsonReader arg0 throws IOException final T t delegate read arg0 if List class isAssignableFrom tokenType getRawType if t null return T Collections EMPTY LIST final List list List t return T Collections unmodifiableList list return tpackage com twitter sdk android core models import com google gson Gson import com google gson TypeAdapter import com google gson TypeAdapterFactory import com google gson reflect TypeToken import com google gson stream JsonReader import com google gson stream JsonWriter import java io IOException import java util Collections import java util Map public class SafeMapAdapter implements TypeAdapterFactory Override public T TypeAdapter T create final Gson gson final TypeToken T tokenType final TypeAdapter T delegate gson getDelegateAdapter this tokenType return new TypeAdapter T Override public void write JsonWriter out T value throws IOException delegate write out value Override public T read JsonReader arg0 throws IOException final T t delegate read arg0 if Map class isAssignableFrom tokenType getRawType if t null return T Collections EMPTY MAP final Map map Map t return T Collections unmodifiableMap map return tpackage com twitter sdk android tweetcomposer import com twitter sdk android core internal scribe EventNamespace import com twitter sdk android core internal scribe ScribeItem import java util List interface ScribeClient void scribe EventNamespace eventNamespace List ScribeItem itemspackage com twitter sdk android tweetcomposer import com twitter sdk android core internal scribe DefaultScribeClient import com twitter sdk android core internal scribe EventNamespace import com twitter sdk android core internal scribe ScribeItem import java util List class ScribeClientImpl implements ScribeClient private final DefaultScribeClient scribeClient public ScribeClientImpl DefaultScribeClient scribeClient this scribeClient scribeClient Override public void scribe EventNamespace eventNamespace List ScribeItem items if scribeClient null scribeClient scribe eventNamespace itemspackage com twitter sdk android core internal scribe public class ScribeConfig public static final String BASE URL https api twitter com public static final int DEFAULT MAX FILES TO KEEP 100 public static final int DEFAULT SEND INTERVAL SECONDS 10 60 10 minutes public final boolean isEnabled public final String baseUrl public final String pathVersion public final String pathType public final String sequence public final String userAgent public final int maxFilesToKeep public final int sendIntervalSeconds public ScribeConfig boolean isEnabled String baseUrl String pathVersion String pathType String sequence String userAgent int maxFilesToKeep int sendIntervalSeconds this isEnabled isEnabled this baseUrl baseUrl this pathVersion pathVersion this pathType pathType this sequence sequence this userAgent userAgent this maxFilesToKeep maxFilesToKeep this sendIntervalSeconds sendIntervalSecondspackage com twitter sdk android tweetcomposer import com twitter sdk android core internal scribe EventNamespace import com twitter sdk android core internal scribe ScribeItem final class ScribeConstants private ScribeConstants namespaces with client tfw become SyndicationClientEvent scribes to logs tfw client event static final String SCRIBE TFW CLIENT tfw static final String SCRIBE PAGE android static final String SCRIBE SECTION composer static final String SCRIBE COMPONENT static final String SCRIBE IMPRESSION ELEMENT static final String SCRIBE TWEET ELEMENT tweet static final String SCRIBE CANCEL ELEMENT cancel static final String SCRIBE IMPRESSION ACTION impression static final String SCRIBE CLICK ACTION click static final int SCRIBE PROMO APP CARD TYPE 8 static final EventNamespace Builder ComposerEventBuilder new EventNamespace Builder setClient SCRIBE TFW CLIENT setPage SCRIBE PAGE setSection SCRIBE SECTION static ScribeItem newCardScribeItem Card card promo app card is currently the only type of Card return new ScribeItem Builder setItemType ScribeItem TYPE TWEET setCardEvent new ScribeItem CardEvent SCRIBE PROMO APP CARD TYPE buildpackage com twitter sdk android core internal scribe import android text TextUtils import com google gson Gson import com google gson annotations SerializedName import io fabric sdk android services events EventTransform import java io IOException import java util Collections import java util List public class ScribeEvent private static final String CURRENT FORMAT VERSION 2 SerializedName event namespace final EventNamespace eventNamespace SerializedName ts final String timestamp SerializedName format version final String formatVersion SerializedName category final String category SerializedName items final List ScribeItem items public ScribeEvent String category EventNamespace eventNamespace long timestamp this category eventNamespace timestamp Collections ScribeItem emptyList public ScribeEvent String category EventNamespace eventNamespace long timestamp List ScribeItem items this category category this eventNamespace eventNamespace this timestamp String valueOf timestamp this formatVersion CURRENT FORMAT VERSION this items Collections unmodifiableList items Override public String toString return new StringBuilder append event namespace append eventNamespace append ts append timestamp append format version append formatVersion append category append category append items append TextUtils join items toString Override public boolean equals Object o if this o return true if o null getClass o getClass return false final ScribeEvent that ScribeEvent o if category null category equals that category that category null return false if eventNamespace null eventNamespace equals that eventNamespace that eventNamespace null return false if formatVersion null formatVersion equals that formatVersion that formatVersion null return false if timestamp null timestamp equals that timestamp that timestamp null return false if items null items equals that items that items null return false return true Override public int hashCode int result eventNamespace null eventNamespace hashCode 0 result 31 result timestamp null timestamp hashCode 0 result 31 result formatVersion null formatVersion hashCode 0 result 31 result category null category hashCode 0 result 31 result items null items hashCode 0 return result public static class Transform implements EventTransform ScribeEvent private final Gson gson public Transform Gson gson this gson gson Override public byte toBytes ScribeEvent event throws IOException return gson toJson event getBytes UTF 8package com twitter sdk android core internal scribe import java util Collections import java util List public class ScribeEventFactory public static ScribeEvent newScribeEvent EventNamespace ns long timestamp String language String advertisingId return newScribeEvent ns timestamp language advertisingId Collections ScribeItem emptyList public static ScribeEvent newScribeEvent EventNamespace ns String eventInfo long timestamp String language String advertisingId List ScribeItem items switch ns client case SyndicationClientEvent CLIENT NAME return new SyndicationClientEvent ns eventInfo timestamp language advertisingId items default return new SyndicatedSdkImpressionEvent ns timestamp language advertisingId itemspackage com twitter sdk android core internal scribe import io fabric sdk android FabricAndroidTestCase import io fabric sdk android services common CommonUtils import com google gson GsonBuilder import java io IOException import java io InputStream import java util Arrays import java util List public class ScribeEventTransformTest extends FabricAndroidTestCase static final String TEST MESSAGE TEST MESSAGE static final String TEST ITEM TYPE item type 6 static final String TEST DESCRIPTION description TEST MESSAGE private ScribeEvent Transform transform private EventNamespace eventNamespace private String scribeEventJsonString Override protected void setUp throws Exception super setUp transform new ScribeEvent Transform new GsonBuilder create eventNamespace new EventNamespace Builder setClient testclient setPage testpage setSection testsection setComponent testcomponent setElement testelement setAction testaction builder InputStream is null try is getContext getAssets open scribe event json scribeEventJsonString CommonUtils streamToString is trim finally CommonUtils closeQuietly is public void testToBytes throws IOException final ScribeEvent scribeEvent new ScribeEvent testcategory eventNamespace 1404426136717L final byte bytes transform toBytes scribeEvent assertEquals scribeEventJsonString new String bytes UTF 8 public void testToBytes withItems throws IOException final ScribeItem scribeItem ScribeItem fromMessage TEST MESSAGE final List ScribeItem itemList Arrays asList scribeItem final ScribeEvent scribeEvent new ScribeEvent testcategory eventNamespace 1404426136717L itemList final byte bytes transform toBytes scribeEvent assertTrue new String bytes UTF 8 contains TEST ITEM TYPE assertTrue new String bytes UTF 8 contains TEST DESCRIPTIONpackage com twitter sdk android core internal scribe import android content Context import io fabric sdk android services common CurrentTimeProvider import io fabric sdk android services events EventTransform import io fabric sdk android services events EventsFilesManager import io fabric sdk android services events QueueFileEventStorage import java io IOException import java util UUID class ScribeFilesManager extends EventsFilesManager ScribeEvent static final String FILE PREFIX se static final String FILE EXTENSION tap public ScribeFilesManager Context context EventTransform ScribeEvent transform CurrentTimeProvider currentTimeProvider QueueFileEventStorage eventsStorage int defaultMaxFilesToKeep throws IOException super context transform currentTimeProvider eventsStorage defaultMaxFilesToKeep Override protected String generateUniqueRollOverFileName final UUID targetUUIDComponent UUID randomUUID return new StringBuilder append FILE PREFIX append ROLL OVER FILE NAME SEPARATOR append targetUUIDComponent toString append ROLL OVER FILE NAME SEPARATOR append currentTimeProvider getCurrentTimeMillis append FILE EXTENSION toStringpackage com twitter sdk android core internal scribe import android content Context import android text TextUtils import io fabric sdk android services common CommonUtils import io fabric sdk android services common IdManager import io fabric sdk android services common QueueFile import io fabric sdk android services events FilesSender import com twitter sdk android core GuestSessionProvider import com twitter sdk android core Session import com twitter sdk android core SessionManager import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthToken import com twitter sdk android core internal network GuestAuthInterceptor import com twitter sdk android core internal network OAuth1aInterceptor import java io ByteArrayOutputStream import java io File import java io IOException import java io InputStream import java net HttpURLConnection import java util List import java util concurrent ExecutorService import java util concurrent atomic AtomicReference import javax net ssl SSLSocketFactory import okhttp3 Interceptor import okhttp3 OkHttpClient import okhttp3 Request import okhttp3 ResponseBody import retrofit2 Call import retrofit2 Response import retrofit2 Retrofit import retrofit2 http Field import retrofit2 http FormUrlEncoded import retrofit2 http Headers import retrofit2 http POST import retrofit2 http Path class ScribeFilesSender implements FilesSender private static final String SEND FILE FAILURE ERROR Failed sending files private static final byte START JSON ARRAY private static final byte COMMA private static final byte END JSON ARRAY private final Context context private final ScribeConfig scribeConfig private final long ownerId private final TwitterAuthConfig authConfig private final SessionManager extends Session TwitterAuthToken sessionManager private final GuestSessionProvider guestSessionProvider private final SSLSocketFactory sslSocketFactory private final AtomicReference ScribeService scribeService private final ExecutorService executorService private final IdManager idManager public ScribeFilesSender Context context ScribeConfig scribeConfig long ownerId TwitterAuthConfig authConfig SessionManager extends Session TwitterAuthToken sessionManager GuestSessionProvider guestSessionProvider SSLSocketFactory sslSocketFactory ExecutorService executorService IdManager idManager this context context this scribeConfig scribeConfig this ownerId ownerId this authConfig authConfig this sessionManager sessionManager this guestSessionProvider guestSessionProvider this sslSocketFactory sslSocketFactory this executorService executorService this idManager idManager this scribeService new AtomicReference Override public boolean send List File files if hasApiAdapter try final String scribeEvents getScribeEventsAsJsonArrayString files CommonUtils logControlled context scribeEvents final Response ResponseBody response upload scribeEvents if response code HttpURLConnection HTTP OK return true else CommonUtils logControlledError context SEND FILE FAILURE ERROR null if response code HttpURLConnection HTTP INTERNAL ERROR response code HttpURLConnection HTTP BAD REQUEST return true catch Exception e CommonUtils logControlledError context SEND FILE FAILURE ERROR e else CommonUtils logControlled context Cannot attempt upload at this time return false String getScribeEventsAsJsonArrayString List File files throws IOException final ByteArrayOutputStream out new ByteArrayOutputStream 1024 final boolean appendComma new boolean 1 out write START JSON ARRAY for File f files QueueFile qf null try qf new QueueFile f qf forEach new QueueFile ElementReader Override public void read InputStream in int length throws IOException final byte buf new byte length in read buf if appendComma 0 out write COMMA else First time through we don t append comma but subsequent times we do appendComma 0 true out write buf finally CommonUtils closeQuietly qf out write END JSON ARRAY return out toString UTF 8 private boolean hasApiAdapter return getScribeService null void setScribeService ScribeService restAdapter scribeService set restAdapter synchronized ScribeService getScribeService if scribeService get null final Session session getSession ownerId OkHttpClient client if isValidSession session client new OkHttpClient Builder sslSocketFactory sslSocketFactory addInterceptor new ConfigRequestInterceptor scribeConfig idManager addInterceptor new OAuth1aInterceptor session authConfig build else client new OkHttpClient Builder sslSocketFactory sslSocketFactory addInterceptor new ConfigRequestInterceptor scribeConfig idManager addInterceptor new GuestAuthInterceptor guestSessionProvider build final Retrofit retrofit new Retrofit Builder baseUrl scribeConfig baseUrl client client build scribeService compareAndSet null retrofit create ScribeService class return scribeService get private Session getSession long ownerId return sessionManager getSession ownerId private boolean isValidSession Session session return session null session getAuthToken null Response ResponseBody upload String scribeEvents throws IOException final ScribeService service getScribeService if TextUtils isEmpty scribeConfig sequence return service uploadSequence scribeConfig sequence scribeEvents execute else return service upload scribeConfig pathVersion scribeConfig pathType scribeEvents execute interface ScribeService Headers Content Type application x www form urlencoded charset UTF 8 FormUrlEncoded POST version jot type Call ResponseBody upload Path version String version Path type String type Field log String logs Headers Content Type application x www form urlencoded charset UTF 8 FormUrlEncoded POST scribe sequence Call ResponseBody uploadSequence Path sequence String sequence Field log String logs At a certain point we might need to allow either a custom RequestInterceptor to be set by the user of the ScribeClient or a custom map of headers to be supplied static class ConfigRequestInterceptor implements Interceptor private static final String USER AGENT HEADER User Agent private static final String CLIENT UUID HEADER X Client UUID private static final String POLLING HEADER X Twitter Polling private static final String POLLING HEADER VALUE true private final ScribeConfig scribeConfig private final IdManager idManager ConfigRequestInterceptor ScribeConfig scribeConfig IdManager idManager this scribeConfig scribeConfig this idManager idManager Override public okhttp3 Response intercept Chain chain throws IOException final Request Builder builder chain request newBuilder if TextUtils isEmpty scribeConfig userAgent builder header USER AGENT HEADER scribeConfig userAgent if TextUtils isEmpty idManager getDeviceUUID builder header CLIENT UUID HEADER idManager getDeviceUUID builder header POLLING HEADER POLLING HEADER VALUE return chain proceed builder buildpackage com twitter sdk android core internal scribe import android content Context import io fabric sdk android services events DisabledEventsStrategy import io fabric sdk android services events EventsFilesManager import io fabric sdk android services events EventsHandler import io fabric sdk android services events EventsStrategy import java util concurrent ScheduledExecutorService class ScribeHandler extends EventsHandler ScribeEvent public ScribeHandler Context context EventsStrategy ScribeEvent strategy EventsFilesManager filesManager ScheduledExecutorService executorService super context strategy filesManager executorService public void scribe ScribeEvent event recordEventAsync event false public void scribeAndFlush ScribeEvent event recordEventAsync event true Override protected EventsStrategy ScribeEvent getDisabledEventsStrategy return new DisabledEventsStrategypackage com twitter sdk android core internal scribe import com google gson annotations SerializedName import com twitter sdk android core internal VineCardUtils import com twitter sdk android core models Card import com twitter sdk android core models MediaEntity import com twitter sdk android core models Tweet import com twitter sdk android core models User import java io Serializable public class ScribeItem implements Serializable public static final int TYPE TWEET 0 public static final int TYPE USER 3 public static final int TYPE MESSAGE 6 SerializedName item type public final Integer itemType SerializedName id public final Long id SerializedName description public final String description SerializedName card event public final CardEvent cardEvent SerializedName media details public final MediaDetails mediaDetails private ScribeItem Integer itemType Long id String description CardEvent cardEvent MediaDetails mediaDetails this itemType itemType this id id this description description this cardEvent cardEvent this mediaDetails mediaDetails public static ScribeItem fromTweet Tweet tweet return new ScribeItem Builder setItemType TYPE TWEET setId tweet id build public static ScribeItem fromUser User user return new ScribeItem Builder setItemType TYPE USER setId user id build public static ScribeItem fromMessage String message return new ScribeItem Builder setItemType TYPE MESSAGE setDescription message build public static ScribeItem fromTweetCard long tweetId Card card return new ScribeItem Builder setItemType ScribeItem TYPE TWEET setId tweetId setMediaDetails createCardDetails tweetId card build public static ScribeItem fromMediaEntity long tweetId MediaEntity mediaEntity return new ScribeItem Builder setItemType ScribeItem TYPE TWEET setId tweetId setMediaDetails createMediaDetails tweetId mediaEntity build static ScribeItem MediaDetails createMediaDetails long tweetId MediaEntity mediaEntity return new ScribeItem MediaDetails tweetId getMediaType mediaEntity mediaEntity id static ScribeItem MediaDetails createCardDetails long tweetId Card card return new ScribeItem MediaDetails tweetId MediaDetails TYPE VINE Long valueOf VineCardUtils getPublisherId card static int getMediaType MediaEntity mediaEntity if MediaDetails GIF TYPE equals mediaEntity type return ScribeItem MediaDetails TYPE ANIMATED GIF else return ScribeItem MediaDetails TYPE CONSUMER Override public boolean equals Object o if this o return true if o null getClass o getClass return false final ScribeItem that ScribeItem o if itemType null itemType equals that itemType that itemType null return false if id null id equals that id that id null return false if description null description equals that description that description null return false if cardEvent null cardEvent equals that cardEvent that cardEvent null return false return mediaDetails null mediaDetails equals that mediaDetails that mediaDetails null Override public int hashCode int result itemType null itemType hashCode 0 result 31 result id null id hashCode 0 result 31 result description null description hashCode 0 result 31 result cardEvent null cardEvent hashCode 0 result 31 result mediaDetails null mediaDetails hashCode 0 return result public static class CardEvent implements Serializable public CardEvent int cardType promotionCardType cardType SerializedName promotion card type final int promotionCardType Override public boolean equals Object o if this o return true if o null getClass o getClass return false final CardEvent cardEvent CardEvent o return promotionCardType cardEvent promotionCardType Override public int hashCode return promotionCardType public static class MediaDetails implements Serializable public static final int TYPE CONSUMER 1 public static final int TYPE AMPLIFY 2 public static final int TYPE ANIMATED GIF 3 public static final int TYPE VINE 4 public static final String GIF TYPE animated gif SerializedName content id public final long contentId SerializedName media type public final int mediaType SerializedName publisher id public final long publisherId public MediaDetails long contentId int mediaType long publisherId this contentId contentId this mediaType mediaType this publisherId publisherId Override public boolean equals Object o if this o return true if o null getClass o getClass return false final MediaDetails that MediaDetails o if contentId that contentId return false if mediaType that mediaType return false return publisherId that publisherId Override public int hashCode int result int contentId contentId 32 result 31 result mediaType result 31 result int publisherId publisherId 32 return result public static class Builder private Integer itemType private Long id private String description private CardEvent cardEvent private MediaDetails mediaDetails public Builder setItemType int itemType this itemType itemType return this public Builder setId long id this id id return this public Builder setDescription String description this description description return this public Builder setCardEvent CardEvent cardEvent this cardEvent cardEvent return this public Builder setMediaDetails MediaDetails mediaDetails this mediaDetails mediaDetails return this public ScribeItem build return new ScribeItem itemType id description cardEvent mediaDetailspackage com kaku colorfulnews widget import android content Context import android support design widget CoordinatorLayout import android support design widget FloatingActionButton import android support v4 view ViewCompat import android util AttributeSet import android view View public class ScrollAwareFABBehavior extends FloatingActionButton Behavior public ScrollAwareFABBehavior Context context AttributeSet attrs super Override public boolean onStartNestedScroll final CoordinatorLayout coordinatorLayout final FloatingActionButton child final View directTargetChild final View target final int nestedScrollAxes Ensure we react to vertical scrolling return nestedScrollAxes ViewCompat SCROLL AXIS VERTICAL super onStartNestedScroll coordinatorLayout child directTargetChild target nestedScrollAxes Override public void onNestedScroll CoordinatorLayout coordinatorLayout FloatingActionButton child View target int dxConsumed int dyConsumed int dxUnconsumed int dyUnconsumed super onNestedScroll coordinatorLayout child target dxConsumed dyConsumed dxUnconsumed dyUnconsumed if dyConsumed 0 child getVisibility View VISIBLE child hide else if dyConsumed 0 child getVisibility View VISIBLE child showpackage com kaku colorfulnews event public class ScrollToTopEventpackage com twitter sdk android core models import com google gson annotations SerializedName import java util List public class Search SerializedName statuses public final List Tweet tweets SerializedName search metadata public final SearchMetadata searchMetadata public Search List Tweet tweets SearchMetadata searchMetadata this tweets tweets this searchMetadata searchMetadatapackage com twitter sdk android core models import com google gson annotations SerializedName public class SearchMetadata SerializedName max id public final long maxId SerializedName since id public final long sinceId SerializedName refresh url public final String refreshUrl SerializedName next results public final String nextResults SerializedName count public final long count SerializedName completed in public final double completedIn SerializedName since id str public final String sinceIdStr SerializedName query public final String query SerializedName max id str public final String maxIdStr public SearchMetadata int maxId int sinceId String refreshUrl String nextResults int count double completedIn String sinceIdStr String query String maxIdStr this maxId maxId this sinceId sinceId this refreshUrl refreshUrl this nextResults nextResults this count count this completedIn completedIn this sinceIdStr sinceIdStr this query query this maxIdStr maxIdStrpackage com twitter sdk android core services import com twitter sdk android core services params Geocode import com twitter sdk android core models Search import retrofit2 Call import retrofit2 http GET import retrofit2 http Query public interface SearchService GET 1 1 search tweets json tweet mode extended include cards true cards platform TwitterKit 13 Call Search tweets Query q String query EncodedQuery protects commas from encode Query value geocode encoded true Geocode geocode Query lang String lang Query locale String locale Query result type String resultType Query count Integer count Query until String until Query since id Long sinceId Query max id Long maxId Query include entities Boolean includeEntitiespackage com twitter sdk android tweetui import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterException import com twitter sdk android core models Search import com twitter sdk android core models Tweet import java util List import retrofit2 Call public class SearchTimeline extends BaseTimeline implements Timeline Tweet static final String FILTER RETWEETS filter retweets leading whitespace intentional private static final String SCRIBE SECTION search final String query final String resultType final String languageCode final Integer maxItemsPerRequest SearchTimeline TweetUi tweetUi String query String resultType String languageCode Integer maxItemsPerRequest super tweetUi this languageCode languageCode this maxItemsPerRequest maxItemsPerRequest this resultType resultType if the query is non null append the filter Retweets modifier this query query null null query FILTER RETWEETS Override public void next Long sinceId Callback TimelineResult Tweet cb createSearchRequest sinceId null enqueue new SearchCallback cb Override public void previous Long maxId Callback TimelineResult Tweet cb api quirk search api provides results that are inclusive of the maxId iff FILTER RETWEETS is added to the query which we currently always add decrement the maxId to get exclusive results createSearchRequest null decrementMaxId maxId enqueue new SearchCallback cb Override String getTimelineType return SCRIBE SECTION Call Search createSearchRequest final Long sinceId final Long maxId return TwitterCore getInstance getApiClient getSearchService tweets query null languageCode null resultType maxItemsPerRequest null sinceId maxId true class SearchCallback extends Callback Search final Callback TimelineResult Tweet cb SearchCallback Callback TimelineResult Tweet cb this cb cb Override public void success Result Search result final List Tweet tweets result data tweets final TimelineResult Tweet timelineResult new TimelineResult new TimelineCursor tweets tweets if cb null cb success new Result timelineResult result response Override public void failure TwitterException exception if cb null cb failure exception public enum ResultType RECENT recent POPULAR popular MIXED mixed FILTERED filtered final String type ResultType String type this type type public static class Builder private TweetUi tweetUi private String query private String lang private String resultType ResultType FILTERED type private Integer maxItemsPerRequest 30 public Builder this TweetUi getInstance public Builder TweetUi tweetUi if tweetUi null throw new IllegalArgumentException TweetUi instance must not be null this tweetUi tweetUi public Builder query String query this query query return this public Builder resultType ResultType resultType this resultType resultType type return this public Builder languageCode String languageCode this lang languageCode return this public Builder maxItemsPerRequest Integer maxItemsPerRequest this maxItemsPerRequest maxItemsPerRequest return this public SearchTimeline build if query null throw new IllegalStateException query must not be null return new SearchTimeline tweetUi query resultType lang maxItemsPerRequestpackage com kaku colorfulnews di component import android content Context import com kaku colorfulnews di module ServiceModule import com kaku colorfulnews di scope ContextLife import com kaku colorfulnews di scope PerService import dagger Component PerService Component dependencies ApplicationComponent class modules ServiceModule class public interface ServiceComponent ContextLife Service Context getServiceContext ContextLife Application Context getApplicationContextpackage com kaku colorfulnews di module import android app Service import android content Context import com kaku colorfulnews di scope ContextLife import com kaku colorfulnews di scope PerService import dagger Module import dagger Provides Module public class ServiceModule private Service mService public ServiceModule Service service mService service Provides PerService ContextLife Service public Context ProvideServiceContext return mServicepackage com twitter sdk android core import com google gson annotations SerializedName public class Session T extends AuthToken SerializedName auth token private final T authToken SerializedName id private final long id public Session T authToken long id if authToken null throw new IllegalArgumentException AuthToken must not be null this authToken authToken this id id public T getAuthToken return authToken public long getId return id Override public boolean equals Object o if this o return true if o null getClass o getClass return false final Session session Session o if id session id return false return authToken null authToken equals session authToken session authToken null Override public int hashCode int result authToken null authToken hashCode 0 result 31 result int id id 32 return resultpackage com twitter sdk android core import java util Map public interface SessionManager T extends Session T getActiveSession void setActiveSession T session void clearActiveSession T getSession long id void setSession long id T session void clearSession long id Map Long T getSessionMappackage com twitter sdk android core internal import android app Activity import android text format DateUtils import io fabric sdk android ActivityLifecycleManager import io fabric sdk android services common SystemCurrentTimeProvider import com twitter sdk android core Session import com twitter sdk android core SessionManager import java util Calendar import java util TimeZone import java util concurrent ExecutorService public class SessionMonitor T extends Session protected final MonitorState monitorState private final SystemCurrentTimeProvider time private final SessionManager T sessionManager private final ExecutorService executorService private final SessionVerifier sessionVerifier public SessionMonitor SessionManager T sessionManager ExecutorService executorService SessionVerifier T sessionVerifier this sessionManager new SystemCurrentTimeProvider executorService new MonitorState sessionVerifier SessionMonitor SessionManager T sessionManager SystemCurrentTimeProvider time ExecutorService executorService MonitorState monitorState SessionVerifier sessionVerifier this time time this sessionManager sessionManager this executorService executorService this monitorState monitorState this sessionVerifier sessionVerifier public void monitorActivityLifecycle ActivityLifecycleManager activityLifecycleManager activityLifecycleManager registerCallbacks new ActivityLifecycleManager Callbacks Override public void onActivityStarted Activity activity triggerVerificationIfNecessary public void triggerVerificationIfNecessary final Session session sessionManager getActiveSession final long currentTime time getCurrentTimeMillis final boolean startVerification session null monitorState beginVerification currentTime if startVerification executorService submit new Runnable Override public void run verifyAll protected void verifyAll for T session sessionManager getSessionMap values sessionVerifier verifySession session monitorState endVerification time getCurrentTimeMillis protected static class MonitorState private static final long TIME THRESHOLD IN MILLIS 6 DateUtils HOUR IN MILLIS public boolean verifying public long lastVerification private final Calendar utcCalendar public MonitorState this utcCalendar Calendar getInstance TimeZone getTimeZone UTC public synchronized boolean beginVerification long currentTime final boolean isPastThreshold currentTime lastVerification TIME THRESHOLD IN MILLIS final boolean dayHasChanged isOnSameDate currentTime lastVerification if verifying isPastThreshold dayHasChanged return verifying true return false public synchronized void endVerification long currentTime verifying false lastVerification currentTime private boolean isOnSameDate long timeA long timeB utcCalendar setTimeInMillis timeA final int dayA utcCalendar get Calendar DAY OF YEAR final int yearA utcCalendar get Calendar YEAR utcCalendar setTimeInMillis timeB final int dayB utcCalendar get Calendar DAY OF YEAR final int yearB utcCalendar get Calendar YEAR return dayA dayB yearA yearBpackage com twitter sdk android core internal import com twitter sdk android core Session public interface SessionVerifier T extends Session void verifySession T sessionpackage com zxy recovery tools import android content Context import android content SharedPreferences import android os Process import android support annotation NonNull import android text TextUtils import java util Map import java util Set import java util concurrent ExecutorService import java util concurrent Executors import java util concurrent ThreadFactory public class SharedPreferencesCompat private SharedPreferencesCompat throw new SharedPreferencesException Stub private static SharedPreferences getSharedPrefs Context context String sharedPrefsName checkNotNull context Context can not be null checkNotEmpty sharedPrefsName SharedPreferences name can not be empty return context getSharedPreferences sharedPrefsName Context MODE PRIVATE public static void put Context context String sharedPrefsName String key String value checkNotEmpty key SharedPreferences key can not be empty checkNotNull value SharedPreferences value can not be null SharedPreferences Editor editor getSharedPrefs context sharedPrefsName edit editor putString key value SharedPreferencesEditorCompat apply editor public static String get Context context String sharedPrefsName String key String defValue checkNotEmpty key SharedPreferences key can not be empty return getSharedPrefs context sharedPrefsName getString key defValue public static void clear Context context String sharedPrefsName SharedPreferences Editor editor getSharedPrefs context sharedPrefsName edit editor clear SharedPreferencesEditorCompat apply editor public static void remove Context context String sharedPrefsName String key checkNotEmpty key SharedPreferences key can not be empty SharedPreferences Editor editor getSharedPrefs context sharedPrefsName edit editor remove key SharedPreferencesEditorCompat apply editor public static Map String getAll Context context String sharedPrefsName checkNotNull context Context can not be null return getSharedPrefs context sharedPrefsName getAll public static boolean contains Context context String sharedPrefsName String key checkNotEmpty key SharedPreferences key can not be empty return getSharedPrefs context sharedPrefsName contains key public static Set String getStringSet Context context String sharedPrefsName String key Set String defValues checkNotEmpty key SharedPreferences key can not be empty return getSharedPrefs context sharedPrefsName getStringSet key defValues public static Builder newBuilder Context context String sharedPrefsName return new Builder context sharedPrefsName public static final class Builder private SharedPreferences Editor mEditor private Builder Context context String sharedPrefsName mEditor getSharedPrefs context sharedPrefsName edit public Builder put String key String value checkNotEmpty key SharedPreferences key can not be empty checkNotNull value SharedPreferences value can not be null mEditor putString key value return this public void apply SharedPreferencesEditorCompat apply mEditor private static T void checkNotNull T t String message if t null throw new SharedPreferencesException String valueOf message private static void checkNotEmpty String t String message if TextUtils isEmpty t throw new SharedPreferencesException String valueOf message private static final class SharedPreferencesException extends RuntimeException public SharedPreferencesException String message Throwable cause super message cause public SharedPreferencesException String message super message private static final class SharedPreferencesEditorCompat private static final ExecutorService SINGLE THREAD POOL static SINGLE THREAD POOL Executors newFixedThreadPool 1 new SharedPreferencesThreadFactory static void apply final SharedPreferences Editor editor try editor apply catch Throwable e SINGLE THREAD POOL submit new Runnable Override public void run editor commit private static final class SharedPreferencesThreadFactory implements ThreadFactory private static final String THREAD NAME SharedPreferencesThread Override public Thread newThread NonNull final Runnable r Runnable wrapper new Runnable Override public void run try Process setThreadPriority Process THREAD PRIORITY BACKGROUND catch Throwable t t printStackTrace r run Thread thread new Thread wrapper THREAD NAME if thread isDaemon thread setDaemon false return threadpackage com twitter sdk android core identity import android app Activity import android content Context import android content Intent import android content pm PackageManager import android os Bundle import android os ResultReceiver import android view View import android widget TextView import com twitter sdk android core R import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterSession import io fabric sdk android Fabric public class ShareEmailActivity extends Activity static final String EXTRA RESULT RECEIVER result receiver static final String EXTRA SESSION ID session id ShareEmailController controller private TwitterSession session Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState setContentView R layout tw activity share email try final Intent startIntent getIntent final ResultReceiver resultReceiver getResultReceiver startIntent session getSession startIntent controller new ShareEmailController new ShareEmailClient session resultReceiver final TextView shareEmailDescView TextView findViewById R id tw share email desc setUpShareEmailDesc this shareEmailDescView catch IllegalArgumentException e Fabric getLogger e TwitterCore TAG Failed to create ShareEmailActivity e finish private ResultReceiver getResultReceiver Intent intent final ResultReceiver resultReceiver intent getParcelableExtra EXTRA RESULT RECEIVER if resultReceiver null throw new IllegalArgumentException ResultReceiver must not be null This activity should not be started directly return resultReceiver private TwitterSession getSession Intent intent TODO Make session parcelable and pass actual session final long sessionId intent getLongExtra EXTRA SESSION ID TwitterSession UNKNOWN USER ID final TwitterSession session TwitterCore getInstance getSessionManager getSession sessionId if session null throw new IllegalArgumentException No TwitterSession for id sessionId return session void setUpShareEmailDesc Context context TextView shareEmailDescView final PackageManager packageManager context getPackageManager shareEmailDescView setText getResources getString R string tw share email desc packageManager getApplicationLabel context getApplicationInfo session getUserName public void onClickNotNow View view controller cancelRequest finish public void onClickAllow View view controller executeRequest finish Override public void onBackPressed controller cancelRequest super onBackPressedpackage com twitter sdk android core identity import android content Context import android content Intent import android content pm ApplicationInfo import android content pm PackageManager import android widget Button import android widget TextView import io fabric sdk android FabricActivityTestCase import io fabric sdk android FabricTestUtils import com twitter sdk android core Callback import com twitter sdk android core R import com twitter sdk android core SessionManager import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterSession import static org mockito Matchers any import static org mockito Mockito mock import static org mockito Mockito verify import static org mockito Mockito when public class ShareEmailActivityTest extends FabricActivityTestCase ShareEmailActivity private static final String TEST APP NAME app name private static final String TEST USER NAME user name private static final long TEST SESSION ID 1L private static final long TEST SESSION ID2 2L private Context context private TwitterSession mockSession private ShareEmailController mockController public ShareEmailActivityTest super ShareEmailActivity class Override protected void setUp throws Exception super setUp context getInstrumentation getTargetContext final TwitterCore twitterCore new TwitterCore new TwitterAuthConfig FabricTestUtils resetFabric FabricTestUtils with context twitterCore mockSession mock TwitterSession class when mockSession getUserName thenReturn TEST USER NAME when mockSession getId thenReturn TEST SESSION ID mockController mock TestShareEmailController class final SessionManager TwitterSession sessionManager TwitterCore getInstance getSessionManager sessionManager setActiveSession mockSession Override protected void tearDown throws Exception FabricTestUtils resetFabric super tearDown private void init final ShareEmailResultReceiver resultReceiver new ShareEmailResultReceiver mock Callback class final Intent intent new Intent context ShareEmailActivity class putExtra ShareEmailActivity EXTRA RESULT RECEIVER resultReceiver putExtra ShareEmailActivity EXTRA SESSION ID TEST SESSION ID init intent private void init Intent intent final ShareEmailActivity activity startActivity intent null null activity controller mockController public void testOnCreate extraResultReceiverMissing final Intent intent new Intent context ShareEmailActivity class init intent assertTrue isFinishCalled public void testOnCreate extraSessionIdMissing final ShareEmailResultReceiver resultReceiver new ShareEmailResultReceiver mock Callback class final Intent intent new Intent context ShareEmailActivity class putExtra ShareEmailActivity EXTRA RESULT RECEIVER resultReceiver init intent assertTrue isFinishCalled public void testOnCreate extraSessionIdUnknown final ShareEmailResultReceiver resultReceiver new ShareEmailResultReceiver mock Callback class final Intent intent new Intent context ShareEmailActivity class putExtra ShareEmailActivity EXTRA RESULT RECEIVER resultReceiver putExtra ShareEmailActivity EXTRA SESSION ID TwitterSession UNKNOWN USER ID init intent assertTrue isFinishCalled public void testOnCreate extraSessionIdNotFound final ShareEmailResultReceiver resultReceiver new ShareEmailResultReceiver mock Callback class final Intent intent new Intent context ShareEmailActivity class putExtra ShareEmailActivity EXTRA RESULT RECEIVER resultReceiver putExtra ShareEmailActivity EXTRA SESSION ID TEST SESSION ID2 init intent assertTrue isFinishCalled public void testOnClickNotNow init final Button button Button getActivity findViewById R id tw not now btn button performClick verify mockController cancelRequest public void testOnClickAllow init final Button button Button getActivity findViewById R id tw allow btn button performClick verify mockController executeRequest public void testSetUpShareEmailDesc init final TextView textView new TextView context final Context mockContext mock Context class final PackageManager mockPackageManager mock PackageManager class when mockContext getPackageManager thenReturn mockPackageManager when mockPackageManager getApplicationLabel any ApplicationInfo class thenReturn TEST APP NAME getActivity setUpShareEmailDesc mockContext textView assertEquals context getString R string tw share email desc TEST APP NAME TEST USER NAME textView getText toString public void testOnBackPressed init getActivity onBackPressed verify mockController cancelRequestpackage com twitter sdk android core identity import android app Activity import com twitter sdk android core Callback import com twitter sdk android core TwitterApiClient import com twitter sdk android core TwitterSession import com twitter sdk android core models User import retrofit2 Call import retrofit2 http GET import retrofit2 http Query class ShareEmailClient extends TwitterApiClient static final int RESULT CODE CANCELED Activity RESULT CANCELED static final int RESULT CODE OK Activity RESULT OK static final int RESULT CODE ERROR Activity RESULT FIRST USER static final String RESULT DATA EMAIL email static final String RESULT DATA MSG msg static final String RESULT DATA ERROR error ShareEmailClient TwitterSession session super session protected void getEmail Callback User callback getService EmailService class verifyCredentials true true enqueue callback interface EmailService GET 1 1 account verify credentials json include email true Call User verifyCredentials Query include entities Boolean includeEntities Query skip status Boolean skipStatuspackage com twitter sdk android core identity import io fabric sdk android FabricAndroidTestCase import io fabric sdk android FabricTestUtils import retrofit2 Call import com twitter sdk android core Callback import com twitter sdk android core TestFixtures import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterSession import com twitter sdk android core models User import static org mockito Matchers anyBoolean import static org mockito Matchers eq import static org mockito Mockito mock import static org mockito Mockito verify import static org mockito Mockito when public class ShareEmailClientTest extends FabricAndroidTestCase private ShareEmailClient EmailService mockEmailService private ShareEmailClient shareEmailClient public void setUp throws Exception super setUp FabricTestUtils resetFabric FabricTestUtils with getContext new TwitterCore new TwitterAuthConfig TestFixtures KEY TestFixtures SECRET mockEmailService mock ShareEmailClient EmailService class when mockEmailService verifyCredentials anyBoolean anyBoolean thenReturn mock Call class shareEmailClient new ShareEmailClient mock TwitterSession class Override protected T T getService Class T cls if cls equals EmailService class return T mockEmailService else return super getService cls Override protected void tearDown throws Exception FabricTestUtils resetFabric super tearDown public void testGetEmail throws Exception final Callback User mockCallback mock Callback class shareEmailClient getEmail mockCallback verify mockEmailService verifyCredentials eq true eq truepackage com twitter sdk android core identity import android os Bundle import android os ResultReceiver import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterException import com twitter sdk android core models User import io fabric sdk android Fabric class ShareEmailController private static final String EMPTY EMAIL private final ShareEmailClient emailClient private final ResultReceiver resultReceiver public ShareEmailController ShareEmailClient emailClient ResultReceiver resultReceiver this emailClient emailClient this resultReceiver resultReceiver public void executeRequest emailClient getEmail newCallback Callback User newCallback return new Callback User Override public void success Result User result handleSuccess result data Override public void failure TwitterException exception Fabric getLogger e TwitterCore TAG Failed to get email address exception Create new exception that can be safely serialized since Retrofit errors may throw a NotSerializableException sendResultCodeError new TwitterException Failed to get email address void handleSuccess User user if user email null sendResultCodeError new TwitterException Your application may not have access to email addresses or the user may not have an email address To request access please visit https support twitter com forms platform else if EMPTY EMAIL equals user email sendResultCodeError new TwitterException This user does not have an email address else sendResultCodeOk user email void sendResultCodeOk String email final Bundle bundle new Bundle bundle putString ShareEmailClient RESULT DATA EMAIL email resultReceiver send ShareEmailClient RESULT CODE OK bundle void sendResultCodeError TwitterException exception final Bundle bundle new Bundle bundle putSerializable ShareEmailClient RESULT DATA ERROR exception resultReceiver send ShareEmailClient RESULT CODE ERROR bundle public void cancelRequest final Bundle bundle new Bundle bundle putSerializable ShareEmailClient RESULT DATA MSG The user chose not to share their email address at this time resultReceiver send ShareEmailClient RESULT CODE CANCELED bundlepackage com twitter sdk android core identity import android os Bundle import android os ResultReceiver import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterException class ShareEmailResultReceiver extends ResultReceiver private final Callback String callback public ShareEmailResultReceiver Callback String callback super null if callback null throw new IllegalArgumentException Callback must not be null this callback callback Override public void onReceiveResult int resultCode Bundle resultData switch resultCode case ShareEmailClient RESULT CODE OK callback success new Result resultData getString ShareEmailClient RESULT DATA EMAIL null break case ShareEmailClient RESULT CODE CANCELED callback failure new TwitterException resultData getString ShareEmailClient RESULT DATA MSG break case ShareEmailClient RESULT CODE ERROR callback failure TwitterException resultData getSerializable ShareEmailClient RESULT DATA ERROR break default throw new IllegalArgumentException Invalid result code resultCodepackage com twitter sdk android tweetui import android content Context import android content Intent import android content res Resources import android view View import com twitter sdk android core IntentUtils import com twitter sdk android core models Tweet import io fabric sdk android Fabric class ShareTweetAction implements View OnClickListener final Tweet tweet final TweetUi tweetUi final TweetScribeClient tweetScribeClient ShareTweetAction Tweet tweet TweetUi tweetUi this tweet tweetUi new TweetScribeClientImpl tweetUi For testing only ShareTweetAction Tweet tweet TweetUi tweetUi TweetScribeClient tweetScribeClient super this tweet tweet this tweetUi tweetUi this tweetScribeClient tweetScribeClient Override public void onClick View v onClick v getContext v getResources void scribeShareAction tweetScribeClient share tweet void onClick Context context Resources resources if tweet null tweet user null return scribeShareAction final String shareSubject getShareSubject resources final String shareContent getShareContent resources final Intent shareIntent getShareIntent shareSubject shareContent final String shareText resources getString R string tw share tweet final Intent chooser Intent createChooser shareIntent shareText launchShareIntent chooser context String getShareContent Resources resources return resources getString R string tw share content format tweet user screenName tweet id String getShareSubject Resources resources return resources getString R string tw share subject format tweet user name tweet user screenName void launchShareIntent Intent chooser Context context if IntentUtils safeStartActivity context chooser Fabric getLogger e TweetUi LOGTAG Activity cannot be found to handle share intent Intent getShareIntent String subject String content final Intent intent new Intent intent setAction Intent ACTION SEND intent putExtra Intent EXTRA SUBJECT subject intent putExtra Intent EXTRA TEXT content intent setType text plain return intentpackage com twitter sdk android tweetui internal import android annotation SuppressLint import android text Layout import android text Spanned import android view MotionEvent import android view View import android widget TextView public class SpanClickHandler private final View view private Layout layout private float left private float top private HighlightedClickableSpan highlightedClickableSpan public static void enableClicksOnSpans TextView textView final SpanClickHandler helper new SpanClickHandler textView null textView setOnTouchListener new View OnTouchListener SuppressLint ClickableViewAccessibility Override public boolean onTouch View view MotionEvent event final TextView textView TextView view final Layout layout textView getLayout if layout null helper layout layout helper left textView getTotalPaddingLeft textView getScrollX helper top textView getTotalPaddingTop textView getScrollY return helper handleTouchEvent event return false public SpanClickHandler View view Layout layout this view view this layout layout public void setPosition float left float top this left left this top top public boolean handleTouchEvent MotionEvent event final CharSequence text layout getText final Spanned spannedText text instanceof Spanned Spanned text null if spannedText null return false final int action event getAction MotionEvent ACTION MASK final int x int event getX left final int y int event getY top if x 0 x layout getWidth y 0 y layout getHeight deselectSpan return false Get the clicked line and check x is within the text on this line final int line layout getLineForVertical y if x layout getLineLeft line x layout getLineRight line deselectSpan return false if action MotionEvent ACTION DOWN final int offset layout getOffsetForHorizontal line x final HighlightedClickableSpan span spannedText getSpans offset offset HighlightedClickableSpan class if span length 0 selectSpan span 0 return true else if action MotionEvent ACTION UP final HighlightedClickableSpan selectedSpan highlightedClickableSpan if selectedSpan null selectedSpan onClick view deselectSpan return true return false private void selectSpan HighlightedClickableSpan span span select true highlightedClickableSpan span invalidate private void deselectSpan final HighlightedClickableSpan selectedSpan highlightedClickableSpan if selectedSpan null selectedSpan isSelected selectedSpan select false highlightedClickableSpan null invalidate private void invalidate view invalidate int left int top int left layout getWidth int top layout getHeightpackage com kaku colorfulnews mvp ui activities import android animation ValueAnimator import android content Intent import android os Bundle import android support annotation Nullable import android support v7 app AppCompatActivity import android view animation Animation import android view animation AnimationUtils import android widget ImageView import android widget TextView import com daimajia androidanimations library Techniques import com daimajia androidanimations library YoYo import com kaku colorfulnews R import com socks library KLog import java util concurrent TimeUnit import butterknife BindView import butterknife ButterKnife import rx Observable import rx android schedulers AndroidSchedulers import rx functions Action1 import rx schedulers Schedulers public class SplashActivity extends AppCompatActivity BindView R id logo outer iv ImageView mLogoOuterIv BindView R id logo inner iv ImageView mLogoInnerIv boolean isShowingRubberEffect false BindView R id app name tv TextView mAppNameTv Override protected void onCreate Nullable Bundle savedInstanceState super onCreate savedInstanceState overridePendingTransition R anim zoomin 0 setContentView R layout activity splash ButterKnife bind this initAnimation private void initAnimation startLogoInner1 startLogoOuterAndAppName private void startLogoInner1 Animation animation AnimationUtils loadAnimation this R anim anim top in mLogoInnerIv startAnimation animation private void startLogoOuterAndAppName final ValueAnimator valueAnimator ValueAnimator ofFloat 0 1 valueAnimator setDuration 1000 valueAnimator addUpdateListener new ValueAnimator AnimatorUpdateListener Override public void onAnimationUpdate ValueAnimator animation float fraction animation getAnimatedFraction KLog d fraction fraction if fraction 0 8 isShowingRubberEffect isShowingRubberEffect true startLogoOuter startShowAppName finishActivity else if fraction 0 95 valueAnimator cancel startLogoInner2 valueAnimator start private void startLogoOuter YoYo with Techniques RubberBand duration 1000 playOn mLogoOuterIv private void startShowAppName YoYo with Techniques FadeIn duration 1000 playOn mAppNameTv private void startLogoInner2 YoYo with Techniques Bounce duration 1000 playOn mLogoInnerIv private void finishActivity Observable timer 1000 TimeUnit MILLISECONDS subscribeOn Schedulers io observeOn AndroidSchedulers mainThread subscribe new Action1 Long Override public void call Long aLong startActivity new Intent SplashActivity this NewsActivity class overridePendingTransition 0 android R anim fade out finishpackage com twitter sdk android core identity import android app Activity import android content ComponentName import android content Context import android content Intent import android content pm PackageInfo import android content pm PackageManager import android content pm Signature import io fabric sdk android Fabric import com twitter sdk android core Callback import com twitter sdk android core IntentUtils import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterSession class SSOAuthHandler extends AuthHandler Package name of the Twitter for Android application static final String TWITTER PACKAGE NAME com twitter android Package name of the Twitter Dogfood Android application static final String DOGFOOD PACKAGE NAME com twitter android beta Class name of the Activity responsible for Single sign on flow static final String SSO CLASS NAME TWITTER PACKAGE NAME SingleSignOnActivity Twitter for Android application signature static final String TWITTER SIGNATURE 3082025d308201c6a00302010202044bd76cce300d06092 a864886f70d01010505003073310b3009060355040613025553310b3009060355040813024341311630 140603550407130d53616e204672616e636973636f31163014060355040a130d547769747465722c204 96e632e310f300d060355040b13064d6f62696c65311630140603550403130d4c656c616e6420526563 686973301e170d3130303432373233303133345a170d3438303832353233303133345a3073310b30090 60355040613025553310b3009060355040813024341311630140603550407130d53616e204672616e63 6973636f31163014060355040a130d547769747465722c20496e632e310f300d060355040b13064d6f6 2696c65311630140603550403130d4c656c616e642052656368697330819f300d06092a864886f70d01 0101050003818d003081890281810086233c2e51c62232d49cc932e470713d63a6a1106b38f9e442e01 bc79ca4f95c72b2cb3f1369ef7dea6036bff7c4b2828cb3787e7657ad83986751ced5b131fcc6f413ef b7334e32ed9787f9e9a249ae108fa66009ac7a7932c25d37e1e07d4f9f66aa494c270dbac87d261c966 8d321c2fba4ef2800e46671a597ff2eac5d7f0203010001300d06092a864886f70d0101050500038181 003e1f01cb6ea8be8d2cecef5cd2a64c97ba8728aa5f08f8275d00508d64d139b6a72c5716b40a040df 0eeeda04de9361107e123ee8d3dc05e70c8a355f46dbadf1235443b0b214c57211afd4edd147451c443 d49498d2a7ff27e45a99c39b9e47429a1dae843ba233bf8ca81296dbe1dc5c5434514d995b027924680 9392a219b Twitter Android Dogfood application signature static final String DOGFOOD SIGNATURE 308203523082023aa00302010202044fd0006b300d06092a864 886f70d0101050500306b310b3009060355040613025553310b30090603550408130243413116301406 03550407130d53616e204672616e636973636f3110300e060355040a130754776974746572310f300d0 60355040b13064d6f62696c65311430120603550403130b4a6f6e617468616e204c65301e170d313230 3630373031313431395a170d3339313032343031313431395a306b310b3009060355040613025553310 b3009060355040813024341311630140603550407130d53616e204672616e636973636f3110300e0603 55040a130754776974746572310f300d060355040b13064d6f62696c65311430120603550403130b4a6 f6e617468616e204c6530820122300d06092a864886f70d01010105000382010f003082010a02820101 0089e6cbdfed4288a9c0a215d33d4fa978a5bdd20be426ef4b497d358a9fd1c6efec9684f059f6955e6 0e5fda1b5910bb2d097e7421a78f9c81e95cd8ef3bf50add7f8d9f073c0478736a6c7fd38c587155978 3a76420d37f3f874f2114ec02532e85587791d24037485b1b95ec8cbc75b52042867988b51c7c3589d5 b5972fd20a2e8a7c9ced986873f5008a418b2921daa7cfb78afc174eecdb8a79dc0961bea9740d09c46 56ac9b8c86263a788e35af1d4a3f86ce053a1aefb5369def91614a390219f896f378712376baa05934a 341798950e229f4f735b86004952b259f23cc9fc3b8c1bc8171984884dc92940e91f2e9a78a84a78f0c 2946b7e37bbf3b9b0203010001300d06092a864886f70d010105050003820101001cf15250365e66cc8 7bb5054de1661266cf87907841016b20dfa1f9f59842020cbc33f9b4d41717db0428d11696a0bade6a4 950a48cc4fa8ae56c850647379a5c2d977436b644162c453dd36b7745ccb9ff0b5fc070125024de73da b6dcda5c69372e978a49865f569927199ed0f61d7cbee1839079a7da2e83f8c90f7421a8c81b3f17f1c c05d52aedac9acd6e092ffd9ad572960e779a5b91a78e1aeb2b3c7b24464bd223c745e40abd74fc5863 10809520d183443fcca3c6ade3be458afedbd3325df9c0e552636e35bb55b240eb8c0ba3973c4fb8121 3f22363be2d70e85014650c2f4fc679747a7ec31ea7b08da7dd9b9ba279a7fbbc1bd440fbe831bf4 private static final String EXTRA CONSUMER KEY ck private static final String EXTRA CONSUMER SECRET cs public SSOAuthHandler TwitterAuthConfig authConfig Callback TwitterSession callback int requestCode super authConfig callback requestCode Override public boolean authorize Activity activity return startAuthActivityForResult activity private boolean startAuthActivityForResult Activity activity final PackageManager pm activity getPackageManager final String packageName availableSSOPackage pm if packageName null Fabric getLogger e TwitterCore TAG SSO app signature check failed null return false final ComponentName ssoActivity new ComponentName packageName SSO CLASS NAME final TwitterAuthConfig authConfig getAuthConfig final Intent intent new Intent setComponent ssoActivity if IntentUtils isActivityAvailable activity intent Fabric getLogger e TwitterCore TAG SSO auth activity not found null return false intent putExtra EXTRA CONSUMER KEY authConfig getConsumerKey putExtra EXTRA CONSUMER SECRET authConfig getConsumerSecret try activity startActivityForResult intent requestCode return true catch Exception e Fabric getLogger e TwitterCore TAG SSO exception occurred e return false public static String availableSSOPackage PackageManager pm if checkAppSignature pm TWITTER PACKAGE NAME TWITTER SIGNATURE return TWITTER PACKAGE NAME else if checkAppSignature pm DOGFOOD PACKAGE NAME DOGFOOD SIGNATURE return DOGFOOD PACKAGE NAME else return null public static boolean isAvailable Context context final PackageManager pm context getPackageManager return checkAppSignature pm TWITTER PACKAGE NAME TWITTER SIGNATURE checkAppSignature pm DOGFOOD PACKAGE NAME DOGFOOD SIGNATURE private static boolean checkAppSignature PackageManager pm String packageName String requiredSignature PackageInfo p try p pm getPackageInfo packageName PackageManager GET SIGNATURES catch PackageManager NameNotFoundException e return false for Signature s p signatures if requiredSignature equals s toCharsString return false return truepackage com twitter sdk android tweetcomposer import com twitter sdk android core models Tweet import retrofit2 Call import retrofit2 http Field import retrofit2 http FormUrlEncoded import retrofit2 http POST public interface StatusesService FormUrlEncoded POST 1 1 statuses update json Call Tweet update Field status String status Field card uri String cardUripackage com twitter sdk android core internal scribe import com google gson annotations SerializedName import java util Collections import java util List public class SyndicatedSdkImpressionEvent extends ScribeEvent public static final String CLIENT NAME android private static final String SCRIBE CATEGORY syndicated sdk impression SerializedName external ids public final ExternalIds externalIds SerializedName device id created at public final long deviceIdCreatedAt SerializedName language public final String language public SyndicatedSdkImpressionEvent EventNamespace eventNamespace long timestamp String language String adId this eventNamespace timestamp language adId Collections ScribeItem emptyList public SyndicatedSdkImpressionEvent EventNamespace eventNamespace long timestamp String language String adId List ScribeItem items super SCRIBE CATEGORY eventNamespace timestamp items this language language this externalIds new ExternalIds adId this deviceIdCreatedAt 0 see field comment public class ExternalIds SerializedName AD ID public final String adId public ExternalIds String adId this adId adIdpackage com twitter sdk android core internal scribe import com google gson annotations SerializedName import java util List public class SyndicationClientEvent extends ScribeEvent public static final String CLIENT NAME tfw private static final String SCRIBE CATEGORY tfw client event SerializedName language public final String language SerializedName event info public final String eventInfo SerializedName external ids public final ExternalIds externalIds public SyndicationClientEvent EventNamespace eventNamespace String eventInfo long timestamp String language String adId List ScribeItem items super SCRIBE CATEGORY eventNamespace timestamp items this language language this eventInfo eventInfo externalIds new ExternalIds adId public class ExternalIds SerializedName 6 public final String adId public ExternalIds String adId this adId adIdpackage com kaku colorfulnews utils import android annotation TargetApi import android app Activity import android os Build import android view View TargetApi Build VERSION CODES KITKAT public class SystemUiVisibilityUtil private static final int FLAG IMMERSIVE View SYSTEM UI FLAG IMMERSIVE SYSTEM UI FLAG HIDE NAVIGATION View SYSTEM UI FLAG HIDE NAVIGATION View SYSTEM UI FLAG FULLSCREEN Activity public static void exit Activity activity if Build VERSION SDK INT 19 addFlags activity getWindow getDecorView FLAG IMMERSIVE public static void addFlags View decorView int flags decorView setSystemUiVisibility decorView getSystemUiVisibility flags public static void enter Activity activity if Build VERSION SDK INT 19 clearFlags activity getWindow getDecorView FLAG IMMERSIVE public static void clearFlags View view int flags view setSystemUiVisibility view getSystemUiVisibility flags flags view getSystemUiVisibility flagspackage com zxy recovery test import android app Activity import android content Intent import android os Bundle import android view View public class TestActivity extends BaseActivity Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState setContentView R layout activity test new Thread new Runnable int i 0 Override public void run while true if i 3 Activity activity null activity finish try Thread sleep 1000 catch InterruptedException e e printStackTrace i start public void onClick View view if view getId R id btn Activity activity null activity finish else if view getId R id btn2 Intent intent new Intent TestActivity this TestActivity2 class startActivity intentpackage com zxy recovery test import android app Activity import android content Intent import android os Bundle import android view View public class TestActivity2 extends BaseActivity Override protected void onCreate Bundle savedInstanceState super onCreate savedInstanceState setContentView R layout activity test2 public void onClick View view if view getId R id btn Activity activity null activity finish else if view getId R id btn2 startActivity new Intent this MainActivity classpackage com twitter sdk android core identity public class TestAuthState extends AuthStatepackage com twitter sdk android core public final class TestFixtures public static final String KEY key public static final String TOKEN token public static final String SECRET secret public static final long USER ID 11Lpackage com twitter sdk android core identity import android webkit WebView import android widget ProgressBar import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core internal oauth OAuth1aService public class TestOAuthController extends OAuthController TestOAuthController ProgressBar spinner WebView webView TwitterAuthConfig authConfig OAuth1aService oAuth1aService Listener listener super spinner webView authConfig oAuth1aService listenerpackage com twitter sdk android core identity import com twitter sdk android core TwitterSession public class TestShareEmailClient extends ShareEmailClient public TestShareEmailClient TwitterSession session super sessionpackage com twitter sdk android core identity import android os ResultReceiver public class TestShareEmailController extends ShareEmailController public TestShareEmailController ShareEmailClient emailClient ResultReceiver resultReceiver super emailClient resultReceiverpackage com twitter sdk android core identity import android content Context import android content pm PackageInfo import android content pm PackageManager import android content pm Signature import static org mockito Mockito public final class TestUtils private TestUtils Private constructor public static void setupTwitterInstalled Context mockContext throws PackageManager NameNotFoundException setupTwitterInstalled mockContext SSOAuthHandler TWITTER SIGNATURE public static void setupTwitterInstalled Context mockContext String signature throws PackageManager NameNotFoundException final PackageManager mockPm mock PackageManager class final PackageInfo mockPackageInfo mock PackageInfo class mockPackageInfo signatures new Signature new Signature signature when mockContext getPackageManager thenReturn mockPm when mockPm getPackageInfo SSOAuthHandler TWITTER PACKAGE NAME PackageManager GET SIGNATURES thenReturn mockPackageInfo when mockPm getPackageInfo SSOAuthHandler DOGFOOD PACKAGE NAME PackageManager GET SIGNATURES thenThrow new PackageManager NameNotFoundException public static void setupNoSSOAppInstalled Context mockContext throws PackageManager NameNotFoundException final PackageManager mockPm mock PackageManager class when mockContext getPackageManager thenReturn mockPm when mockPm getPackageInfo SSOAuthHandler TWITTER PACKAGE NAME PackageManager GET SIGNATURES thenThrow new PackageManager NameNotFoundException when mockPm getPackageInfo SSOAuthHandler DOGFOOD PACKAGE NAME PackageManager GET SIGNATURES thenThrow new PackageManager NameNotFoundExceptionpackage com twitter sdk android tweetui import com twitter sdk android core Callback public interface Timeline T void next Long minPosition final Callback TimelineResult T cb void previous Long maxPosition final Callback TimelineResult T cbpackage com twitter sdk android tweetui import com twitter sdk android core models Identifiable import java util List public class TimelineCursor public final Long minPosition public final Long maxPosition public TimelineCursor Long minPosition Long maxPosition this minPosition minPosition this maxPosition maxPosition TimelineCursor List extends Identifiable items this minPosition items size 0 items get items size 1 getId null this maxPosition items size 0 items get 0 getId nullpackage com twitter sdk android tweetui internal import android database DataSetObservable import android database DataSetObserver import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterException import com twitter sdk android core models Identifiable import com twitter sdk android tweetui Timeline import com twitter sdk android tweetui TimelineResult import java util ArrayList import java util List public class TimelineDelegate T extends Identifiable once capacity is exceeded additional items will not be loaded static final long CAPACITY 200L timeline that next and previous items are loaded from final Timeline T timeline Observable for Adapter DataSetObservers for ListViews final DataSetObservable listAdapterObservable final TimelineStateHolder timelineStateHolder List T itemList public TimelineDelegate Timeline T timeline this timeline null null TimelineDelegate Timeline T timeline DataSetObservable observable List T items if timeline null throw new IllegalArgumentException Timeline must not be null this timeline timeline this timelineStateHolder new TimelineStateHolder if observable null listAdapterObservable new DataSetObservable else listAdapterObservable observable if items null itemList new ArrayList else itemList items public void refresh Callback TimelineResult T developerCb reset scrollStateHolder cursors to be null loadNext will get latest items timelineStateHolder resetCursors load latest timeline items and replace existing items loadNext timelineStateHolder positionForNext new RefreshCallback developerCb timelineStateHolder public void next Callback TimelineResult T developerCb loadNext timelineStateHolder positionForNext new NextCallback developerCb timelineStateHolder public void previous loadPrevious timelineStateHolder positionForPrevious new PreviousCallback timelineStateHolder public int getCount return itemList size public T getItem int position if isLastPosition position previous return itemList get position public long getItemId int position final Identifiable item itemList get position return item getId public void setItemById T item for int i 0 i itemList size i if item getId itemList get i getId itemList set i item notifyDataSetChanged boolean withinMaxCapacity return itemList size CAPACITY boolean isLastPosition int position return position itemList size 1 void loadNext Long minPosition Callback TimelineResult T cb if withinMaxCapacity if timelineStateHolder startTimelineRequest timeline next minPosition cb else cb failure new TwitterException Request already in flight else cb failure new TwitterException Max capacity reached void loadPrevious Long maxPosition Callback TimelineResult T cb if withinMaxCapacity if timelineStateHolder startTimelineRequest timeline previous maxPosition cb else cb failure new TwitterException Request already in flight else cb failure new TwitterException Max capacity reached class DefaultCallback extends Callback TimelineResult T final Callback TimelineResult T developerCallback final TimelineStateHolder timelineStateHolder DefaultCallback Callback TimelineResult T developerCb TimelineStateHolder timelineStateHolder this developerCallback developerCb this timelineStateHolder timelineStateHolder Override public void success Result TimelineResult T result timelineStateHolder finishTimelineRequest if developerCallback null developerCallback success result Override public void failure TwitterException exception timelineStateHolder finishTimelineRequest if developerCallback null developerCallback failure exception class NextCallback extends DefaultCallback NextCallback Callback TimelineResult T developerCb TimelineStateHolder timelineStateHolder super developerCb timelineStateHolder Override public void success Result TimelineResult T result if result data items size 0 final ArrayList T receivedItems new ArrayList result data items receivedItems addAll itemList itemList receivedItems notifyDataSetChanged timelineStateHolder setNextCursor result data timelineCursor do nothing when zero items are received Subsequent next call does not change super success result class RefreshCallback extends NextCallback RefreshCallback Callback TimelineResult T developerCb TimelineStateHolder timelineStateHolder super developerCb timelineStateHolder Override public void success Result TimelineResult T result if result data items size 0 itemList clear super success result class PreviousCallback extends DefaultCallback PreviousCallback TimelineStateHolder timelineStateHolder super null timelineStateHolder Override public void success Result TimelineResult T result if result data items size 0 itemList addAll result data items notifyDataSetChanged timelineStateHolder setPreviousCursor result data timelineCursor do nothing when zero items are received Subsequent next call does not change super success result public void registerDataSetObserver DataSetObserver observer listAdapterObservable registerObserver observer public void unregisterDataSetObserver DataSetObserver observer listAdapterObservable unregisterObserver observer public void notifyDataSetChanged listAdapterObservable notifyChanged public void notifyDataSetInvalidated listAdapterObservable notifyInvalidatedpackage com twitter sdk android tweetui import android content Context import android database DataSetObserver import android widget BaseAdapter import com twitter sdk android core Callback import com twitter sdk android core models Identifiable import com twitter sdk android tweetui internal TimelineDelegate abstract class TimelineListAdapter T extends Identifiable extends BaseAdapter protected final Context context protected final TimelineDelegate T delegate public TimelineListAdapter Context context Timeline T timeline this context new TimelineDelegate timeline TimelineListAdapter Context context TimelineDelegate T delegate if context null throw new IllegalArgumentException Context must not be null this context context this delegate delegate delegate refresh null public void refresh Callback TimelineResult T cb delegate refresh cb Override public int getCount return delegate getCount Override public T getItem int position return delegate getItem position Override public long getItemId int position return delegate getItemId position Override public void registerDataSetObserver DataSetObserver observer delegate registerDataSetObserver observer Override public void unregisterDataSetObserver DataSetObserver observer delegate unregisterDataSetObserver observer Override public void notifyDataSetChanged delegate notifyDataSetChanged Override public void notifyDataSetInvalidated delegate notifyDataSetInvalidatedpackage com twitter sdk android tweetui import java util List public class TimelineResult T public final TimelineCursor timelineCursor public final List T items public TimelineResult TimelineCursor timelineCursor List T items this timelineCursor timelineCursor this items itemspackage com twitter sdk android tweetui internal import com twitter sdk android tweetui TimelineCursor import java util concurrent atomic AtomicBoolean public class TimelineStateHolder cursor for Timeline next calls TimelineCursor nextCursor cursor for Timeline previous calls TimelineCursor previousCursor true while a request is in flight false otherwise public final AtomicBoolean requestInFlight new AtomicBoolean false public TimelineStateHolder intentionally blank public TimelineStateHolder TimelineCursor nextCursor TimelineCursor previousCursor this nextCursor nextCursor this previousCursor previousCursor public void resetCursors nextCursor null previousCursor null public Long positionForNext return nextCursor null null nextCursor maxPosition public Long positionForPrevious return previousCursor null null previousCursor minPosition public void setNextCursor TimelineCursor timelineCursor nextCursor timelineCursor setCursorsIfNull timelineCursor public void setPreviousCursor TimelineCursor timelineCursor previousCursor timelineCursor setCursorsIfNull timelineCursor public void setCursorsIfNull TimelineCursor timelineCursor if nextCursor null nextCursor timelineCursor if previousCursor null previousCursor timelineCursor public boolean startTimelineRequest return requestInFlight compareAndSet false true public void finishTimelineRequest requestInFlight set falsepackage com twitter sdk android tweetui import android content Context import android content res TypedArray import android util AttributeSet import android widget ImageButton public class ToggleImageButton extends ImageButton private static final int STATE TOGGLED ON R attr state toggled on boolean isToggledOn String contentDescriptionOn String contentDescriptionOff final boolean toggleOnClick public ToggleImageButton Context context this context null public ToggleImageButton Context context AttributeSet attrs this context attrs 0 public ToggleImageButton Context context AttributeSet attrs int defStyle super context attrs defStyle TypedArray a null try a context getTheme obtainStyledAttributes attrs R styleable ToggleImageButton defStyle 0 final String contentDescriptionOn a getString R styleable ToggleImageButton contentDescriptionOn final String contentDescriptionOff a getString R styleable ToggleImageButton contentDescriptionOff this contentDescriptionOn contentDescriptionOn null String getContentDescription contentDescriptionOn this contentDescriptionOff contentDescriptionOff null String getContentDescription contentDescriptionOff toggleOnClick a getBoolean R styleable ToggleImageButton toggleOnClick true setToggledOn false finally if a null a recycle Override public int onCreateDrawableState int extraSpace final int drawableState super onCreateDrawableState extraSpace 2 if isToggledOn mergeDrawableStates drawableState STATE TOGGLED ON return drawableState Override public boolean performClick if toggleOnClick toggle return super performClick public void setToggledOn boolean isToggledOn this isToggledOn isToggledOn setContentDescription isToggledOn contentDescriptionOn contentDescriptionOff refreshDrawableState public void toggle setToggledOn isToggledOn public boolean isToggledOn return isToggledOnpackage com kaku colorfulnews utils import rx Observable import rx android schedulers AndroidSchedulers import rx schedulers Schedulers public class TransformUtils public static T Observable Transformer T T defaultSchedulers return new Observable Transformer T T Override public Observable T call Observable T tObservable return tObservable unsubscribeOn Schedulers io subscribeOn Schedulers io observeOn AndroidSchedulers mainThreadpackage com twitter sdk android core models import com google gson annotations SerializedName import java util List public class Tweet implements Identifiable public static final long INVALID ID 1L SerializedName coordinates public final Coordinates coordinates SerializedName created at public final String createdAt SerializedName current user retweet public final Object currentUserRetweet SerializedName entities public final TweetEntities entities SerializedName extended entities public final TweetEntities extendedEtities SerializedName favorite count public final Integer favoriteCount SerializedName favorited public final boolean favorited SerializedName filter level public final String filterLevel SerializedName id public final long id SerializedName id str public final String idStr SerializedName in reply to screen name public final String inReplyToScreenName SerializedName in reply to status id public final long inReplyToStatusId SerializedName in reply to status id str public final String inReplyToStatusIdStr SerializedName in reply to user id public final long inReplyToUserId SerializedName in reply to user id str public final String inReplyToUserIdStr SerializedName lang public final String lang SerializedName place public final Place place SerializedName possibly sensitive public final boolean possiblySensitive SerializedName scopes public final Object scopes SerializedName quoted status id public final long quotedStatusId SerializedName quoted status id str public final String quotedStatusIdStr SerializedName quoted status public final Tweet quotedStatus SerializedName retweet count public final int retweetCount SerializedName retweeted public final boolean retweeted SerializedName retweeted status public final Tweet retweetedStatus SerializedName source public final String source SerializedName value text alternate full text public final String text SerializedName display text range public final List Integer displayTextRange SerializedName truncated public final boolean truncated SerializedName user public final User user SerializedName withheld copyright public final boolean withheldCopyright SerializedName withheld in countries public final List String withheldInCountries SerializedName withheld scope public final String withheldScope SerializedName card public final Card card public Tweet Coordinates coordinates String createdAt Object currentUserRetweet TweetEntities entities TweetEntities extendedEtities Integer favoriteCount boolean favorited String filterLevel long id String idStr String inReplyToScreenName long inReplyToStatusId String inReplyToStatusIdStr long inReplyToUserId String inReplyToUserIdStr String lang Place place boolean possiblySensitive Object scopes long quotedStatusId String quotedStatusIdStr Tweet quotedStatus int retweetCount boolean retweeted Tweet retweetedStatus String source String text List Integer displayTextRange boolean truncated User user boolean withheldCopyright List String withheldInCountries String withheldScope Card card this coordinates coordinates this createdAt createdAt this currentUserRetweet currentUserRetweet this entities entities this extendedEtities extendedEtities this favoriteCount favoriteCount this favorited favorited this filterLevel filterLevel this id id this idStr idStr this inReplyToScreenName inReplyToScreenName this inReplyToStatusId inReplyToStatusId this inReplyToStatusIdStr inReplyToStatusIdStr this inReplyToUserId inReplyToUserId this inReplyToUserIdStr inReplyToUserIdStr this lang lang this place place this possiblySensitive possiblySensitive this scopes scopes this quotedStatusId quotedStatusId this quotedStatusIdStr quotedStatusIdStr this quotedStatus quotedStatus this retweetCount retweetCount this retweeted retweeted this retweetedStatus retweetedStatus this source source this text text this displayTextRange displayTextRange this truncated truncated this user user this withheldCopyright withheldCopyright this withheldInCountries withheldInCountries this withheldScope withheldScope this card card Override public long getId return this id Override public boolean equals Object o if o null return false if o instanceof Tweet return false final Tweet other Tweet o return this id other id Override public int hashCode return int this idpackage com twitter sdk android tweetui import android content Context import android util AttributeSet import android widget ImageButton import android widget LinearLayout import com twitter sdk android core Callback import com twitter sdk android core models Tweet public class TweetActionBarView extends LinearLayout final DependencyProvider dependencyProvider ToggleImageButton likeButton ImageButton shareButton Callback Tweet actionCallback public TweetActionBarView Context context this context null new DependencyProvider public TweetActionBarView Context context AttributeSet attrs this context attrs new DependencyProvider TweetActionBarView Context context AttributeSet attrs DependencyProvider dependencyProvider super context attrs this dependencyProvider dependencyProvider Override protected void onFinishInflate super onFinishInflate findSubviews void setOnActionCallback Callback Tweet actionCallback this actionCallback actionCallback void findSubviews likeButton ToggleImageButton findViewById R id tw tweet like button shareButton ImageButton findViewById R id tw tweet share button void setTweet Tweet tweet setLike tweet setShare tweet void setLike Tweet tweet final TweetUi tweetUi dependencyProvider getTweetUi if tweet null likeButton setToggledOn tweet favorited final LikeTweetAction likeTweetAction new LikeTweetAction tweet tweetUi actionCallback likeButton setOnClickListener likeTweetAction void setShare Tweet tweet final TweetUi tweetUi dependencyProvider getTweetUi if tweet null shareButton setOnClickListener new ShareTweetAction tweet tweetUi static class DependencyProvider TweetUi getTweetUi return TweetUi getInstancepackage com twitter sdk android core models import java util Collections import java util List public class TweetBuilder private Coordinates coordinates private String createdAt private Object currentUserRetweet private TweetEntities entities private TweetEntities extendedEtities private Integer favoriteCount private boolean favorited private String filterLevel private long id Tweet INVALID ID private String idStr private String inReplyToScreenName private long inReplyToStatusId private String inReplyToStatusIdStr private long inReplyToUserId private String inReplyToUserIdStr private String lang private Place place private boolean possiblySensitive private Object scopes private long quotedStatusId private String quotedStatusIdStr private Tweet quotedStatus private int retweetCount private boolean retweeted private Tweet retweetedStatus private String source private String text private List Integer displayTextRange Collections EMPTY LIST private boolean truncated private User user private boolean withheldCopyright private List String withheldInCountries Collections EMPTY LIST private String withheldScope private Card card public TweetBuilder setCoordinates Coordinates coordinates this coordinates coordinates return this public TweetBuilder setCreatedAt String createdAt this createdAt createdAt return this public TweetBuilder setCurrentUserRetweet Object currentUserRetweet this currentUserRetweet currentUserRetweet return this public TweetBuilder setEntities TweetEntities entities this entities entities return this public TweetBuilder setExtendedEntities TweetEntities extendedEtities this extendedEtities extendedEtities return this public TweetBuilder setFavoriteCount Integer favoriteCount this favoriteCount favoriteCount return this public TweetBuilder setFavorited boolean favorited this favorited favorited return this public TweetBuilder setFilterLevel String filterLevel this filterLevel filterLevel return this public TweetBuilder setId long id this id id return this public TweetBuilder setIdStr String idStr this idStr idStr return this public TweetBuilder setInReplyToScreenName String inReplyToScreenName this inReplyToScreenName inReplyToScreenName return this public TweetBuilder setInReplyToStatusId long inReplyToStatusId this inReplyToStatusId inReplyToStatusId return this public TweetBuilder setInReplyToStatusIdStr String inReplyToStatusIdStr this inReplyToStatusIdStr inReplyToStatusIdStr return this public TweetBuilder setInReplyToUserId long inReplyToUserId this inReplyToUserId inReplyToUserId return this public TweetBuilder setInReplyToUserIdStr String inReplyToUserIdStr this inReplyToUserIdStr inReplyToUserIdStr return this public TweetBuilder setLang String lang this lang lang return this public TweetBuilder setPlace Place place this place place return this public TweetBuilder setPossiblySensitive boolean possiblySensitive this possiblySensitive possiblySensitive return this public TweetBuilder setScopes Object scopes this scopes scopes return this public TweetBuilder setQuotedStatusId long quotedStatusId this quotedStatusId quotedStatusId return this public TweetBuilder setQuotedStatusIdStr String quotedStatusIdStr this quotedStatusIdStr quotedStatusIdStr return this public TweetBuilder setQuotedStatus Tweet quotedStatus this quotedStatus quotedStatus return this public TweetBuilder setRetweetCount int retweetCount this retweetCount retweetCount return this public TweetBuilder setRetweeted boolean retweeted this retweeted retweeted return this public TweetBuilder setRetweetedStatus Tweet retweetedStatus this retweetedStatus retweetedStatus return this public TweetBuilder setSource String source this source source return this public TweetBuilder setText String text this text text return this public TweetBuilder setDisplayTextRange List Integer displayTextRange this displayTextRange displayTextRange return this public TweetBuilder setTruncated boolean truncated this truncated truncated return this public TweetBuilder setUser User user this user user return this public TweetBuilder setWithheldCopyright boolean withheldCopyright this withheldCopyright withheldCopyright return this public TweetBuilder setWithheldInCountries List String withheldInCountries this withheldInCountries withheldInCountries return this public TweetBuilder setWithheldScope String withheldScope this withheldScope withheldScope return this public TweetBuilder setCard Card card this card card return this public TweetBuilder copy Tweet tweet this coordinates tweet coordinates this createdAt tweet createdAt this currentUserRetweet tweet currentUserRetweet this entities tweet entities this extendedEtities tweet extendedEtities this favoriteCount tweet favoriteCount this favorited tweet favorited this filterLevel tweet filterLevel this id tweet id this idStr tweet idStr this inReplyToScreenName tweet inReplyToScreenName this inReplyToStatusId tweet inReplyToStatusId this inReplyToStatusIdStr tweet inReplyToStatusIdStr this inReplyToUserId tweet inReplyToUserId this inReplyToUserIdStr tweet inReplyToStatusIdStr this lang tweet lang this place tweet place this possiblySensitive tweet possiblySensitive this scopes tweet scopes this quotedStatusId tweet quotedStatusId this quotedStatusIdStr tweet quotedStatusIdStr this quotedStatus tweet quotedStatus this retweetCount tweet retweetCount this retweeted tweet retweeted this retweetedStatus tweet retweetedStatus this source tweet source this text tweet text this displayTextRange tweet displayTextRange this truncated tweet truncated this user tweet user this withheldCopyright tweet withheldCopyright this withheldInCountries tweet withheldInCountries this withheldScope tweet withheldScope this card tweet card return this public Tweet build return new Tweet coordinates createdAt currentUserRetweet entities extendedEtities favoriteCount favorited filterLevel id idStr inReplyToScreenName inReplyToStatusId inReplyToStatusIdStr inReplyToUserId inReplyToUserIdStr lang place possiblySensitive scopes quotedStatusId quotedStatusIdStr quotedStatus retweetCount retweeted retweetedStatus source text displayTextRange truncated user withheldCopyright withheldInCountries withheldScope cardpackage com twitter sdk android tweetcomposer import android content Context import android content Intent import android content pm PackageManager import android content pm ResolveInfo import android net Uri import android text TextUtils import com twitter sdk android core GuestSessionProvider import com twitter sdk android core Session import com twitter sdk android core SessionManager import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterSession import com twitter sdk android core internal scribe DefaultScribeClient import io fabric sdk android Fabric import io fabric sdk android Kit import io fabric sdk android services concurrency DependsOn import io fabric sdk android services network UrlUtils import java net URL import java util List import java util concurrent ConcurrentHashMap DependsOn TwitterCore class public class TweetComposer extends Kit Void private static final String MIME TYPE PLAIN TEXT text plain private static final String MIME TYPE JPEG image jpeg private static final String TWITTER PACKAGE NAME com twitter android private static final String WEB INTENT https twitter com intent tweet text s url s private static final String KIT SCRIBE NAME TweetComposer private final ConcurrentHashMap Session ComposerApiClient apiClients String advertisingId SessionManager TwitterSession sessionManager GuestSessionProvider guestSessionProvider private ScribeClient scribeClient public TweetComposer this apiClients new ConcurrentHashMap scribeClient new ScribeClientImpl null Override public String getVersion return BuildConfig VERSION NAME BuildConfig BUILD NUMBER protected boolean onPreExecute sessionManager TwitterCore getInstance getSessionManager guestSessionProvider TwitterCore getInstance getGuestSessionProvider return super onPreExecute Override protected Void doInBackground advertisingId getIdManager getAdvertisingId scribeClient new ScribeClientImpl new DefaultScribeClient this KIT SCRIBE NAME sessionManager guestSessionProvider getIdManager return null Override public String getIdentifier return BuildConfig GROUP BuildConfig ARTIFACT ID public ComposerApiClient getApiClient TwitterSession session checkInitialized if apiClients containsKey session apiClients putIfAbsent session new ComposerApiClient session return apiClients get session public static TweetComposer getInstance checkInitialized return Fabric getKit TweetComposer class protected ScribeClient getScribeClient return scribeClient private static void checkInitialized if Fabric getKit TweetComposer class null throw new IllegalStateException Must start Twitter Kit with Fabric with first String getAdvertisingId return advertisingId public static class Builder private final Context context private String text private URL url private Uri imageUri public Builder Context context if context null throw new IllegalArgumentException Context must not be null this context context public Builder text String text if text null throw new IllegalArgumentException text must not be null if this text null throw new IllegalStateException text already set this text text return this public Builder url URL url if url null throw new IllegalArgumentException url must not be null if this url null throw new IllegalStateException url already set this url url return this public Builder image Uri imageUri if imageUri null throw new IllegalArgumentException imageUri must not be null if this imageUri null throw new IllegalStateException imageUri already set this imageUri imageUri return this public Intent createIntent Intent intent createTwitterIntent if intent null intent createWebIntent return intent Intent createTwitterIntent final Intent intent new Intent Intent ACTION SEND final StringBuilder builder new StringBuilder if TextUtils isEmpty text builder append text if url null if builder length 0 builder append builder append url toString intent putExtra Intent EXTRA TEXT builder toString intent setType MIME TYPE PLAIN TEXT if imageUri null intent putExtra Intent EXTRA STREAM imageUri intent setType MIME TYPE JPEG final PackageManager packManager context getPackageManager final List ResolveInfo resolvedInfoList packManager queryIntentActivities intent PackageManager MATCH DEFAULT ONLY for ResolveInfo resolveInfo resolvedInfoList if resolveInfo activityInfo packageName startsWith TWITTER PACKAGE NAME intent setClassName resolveInfo activityInfo packageName resolveInfo activityInfo name return intent return null Intent createWebIntent final String url this url null this url toString final String tweetUrl String format WEB INTENT UrlUtils urlEncode text UrlUtils urlEncode url return new Intent Intent ACTION VIEW Uri parse tweetUrl public void show final Intent intent createIntent context startActivity intentpackage com twitter sdk android tweetui import android content res Resources import android text format DateUtils import java text ParseException import java text SimpleDateFormat import java util Calendar import java util Date import java util Locale Cribbed from twitter android internal renamed and formatted to our standards methods here should only be accessed on the main thread final class TweetDateUtils Sat Mar 14 02 34 20 0000 2009 static final SimpleDateFormat DATE TIME RFC822 new SimpleDateFormat EEE MMM dd HH mm ss Z yyyy Locale ENGLISH static final SimpleDateFormat RELATIVE DATE FORMAT new SimpleDateFormat MM dd yy Locale ENGLISH static final long INVALID DATE 1 private TweetDateUtils static long apiTimeToLong String apiTime if apiTime null return INVALID DATE try return DATE TIME RFC822 parse apiTime getTime catch ParseException e return INVALID DATE static boolean isValidTimestamp String timestamp return TweetDateUtils apiTimeToLong timestamp TweetDateUtils INVALID DATE public static String dotPrefix String timestamp if timestamp charAt 0 return timestamp return timestamp static String getRelativeTimeString Resources res long currentTimeMillis long timestamp final long diff currentTimeMillis timestamp if diff 0 if diff DateUtils MINUTE IN MILLIS Less than a minute ago final int secs int diff 1000 return res getQuantityString R plurals tw time secs secs secs else if diff DateUtils HOUR IN MILLIS Less than an hour ago final int mins int diff DateUtils MINUTE IN MILLIS return res getQuantityString R plurals tw time mins mins mins else if diff DateUtils DAY IN MILLIS Less than a day ago final int hours int diff DateUtils HOUR IN MILLIS return res getQuantityString R plurals tw time hours hours hours else final Calendar now Calendar getInstance now setTimeInMillis currentTimeMillis final Calendar c Calendar getInstance c setTimeInMillis timestamp final Date d new Date timestamp if now get Calendar YEAR c get Calendar YEAR Same year RELATIVE DATE FORMAT applyPattern res getString R string tw relative date format short else Outside of our year RELATIVE DATE FORMAT applyPattern res getString R string tw relative date format long return RELATIVE DATE FORMAT format d RELATIVE DATE FORMAT applyPattern res getString R string tw relative date format long return RELATIVE DATE FORMAT format new Date timestamppackage com twitter sdk android core models import com google gson annotations SerializedName import java util Collections import java util List public class TweetEntities SerializedName urls public final List UrlEntity urls SerializedName user mentions public final List MentionEntity userMentions SerializedName media public final List MediaEntity media SerializedName hashtags public final List HashtagEntity hashtags public TweetEntities List UrlEntity urls List MentionEntity userMentions List MediaEntity media List HashtagEntity hashtags this urls getSafeList urls this userMentions getSafeList userMentions this media getSafeList media this hashtags getSafeList hashtags private T List T getSafeList List T entities Entities may be null if Gson does not find object to parse When that happens make sure to return an empty list if entities null return Collections EMPTY LIST else return Collections unmodifiableList entitiespackage com twitter sdk android tweetui import com twitter sdk android core models Tweet public interface TweetLinkClickListener void onLinkClick Tweet tweet String urlpackage com twitter sdk android tweetui import com twitter sdk android core models MediaEntity import com twitter sdk android core models Tweet public interface TweetMediaClickListener void onMediaEntityClick Tweet tweet MediaEntity entitypackage com twitter sdk android tweetui internal import android os Build import com twitter sdk android core models MediaEntity import com twitter sdk android core models Tweet import com twitter sdk android core models VideoInfo import java util ArrayList import java util List final public class TweetMediaUtils public static final String PHOTO TYPE photo public static final String VIDEO TYPE video public static final String GIF TYPE animated gif private static final String CONTENT TYPE MP4 video mp4 private static final String CONTENT TYPE HLS application x mpegURL private TweetMediaUtils static public MediaEntity getPhotoEntity Tweet tweet final List MediaEntity mediaEntityList getAllMediaEntities tweet for int i mediaEntityList size 1 i 0 i final MediaEntity entity mediaEntityList get i if entity type null isPhotoType entity return entity return null static public boolean hasPhoto Tweet tweet return getPhotoEntity tweet null static public MediaEntity getVideoEntity Tweet tweet for MediaEntity mediaEntity getAllMediaEntities tweet if mediaEntity type null isVideoType mediaEntity return mediaEntity return null static public boolean hasSupportedVideo Tweet tweet final MediaEntity entity getVideoEntity tweet return entity null getSupportedVariant entity null static boolean isPhotoType MediaEntity mediaEntity return PHOTO TYPE equals mediaEntity type static boolean isVideoType MediaEntity mediaEntity return VIDEO TYPE equals mediaEntity type GIF TYPE equals mediaEntity type static public VideoInfo Variant getSupportedVariant MediaEntity mediaEntity for VideoInfo Variant variant mediaEntity videoInfo variants if isVariantSupported variant return variant return null static public boolean isLooping MediaEntity mediaEntity return GIF TYPE equals mediaEntity type static boolean isVariantSupported VideoInfo Variant variant if Build VERSION SDK INT Build VERSION CODES LOLLIPOP CONTENT TYPE HLS equals variant contentType return true else if CONTENT TYPE MP4 equals variant contentType return true return false static List MediaEntity getAllMediaEntities Tweet tweet final List MediaEntity entities new ArrayList if tweet entities null tweet entities media null entities addAll tweet entities media if tweet extendedEtities null tweet extendedEtities media null entities addAll tweet extendedEtities media return entitiespackage com twitter sdk android tweetui internal import android content Context import android graphics Canvas import android graphics drawable Drawable import android util AttributeSet import android widget ImageView import com twitter sdk android core internal util AspectRatioImageView public class TweetMediaView extends AspectRatioImageView Overlay overlay new Overlay null public TweetMediaView Context context super context public TweetMediaView Context context AttributeSet attrs super context attrs Override protected void onDraw Canvas canvas super onDraw canvas overlay draw canvas Override protected void drawableStateChanged super drawableStateChanged overlay setDrawableState getDrawableState Override protected void onMeasure int widthMeasureSpec int heightMeasureSpec super onMeasure widthMeasureSpec heightMeasureSpec overlay setDrawableBounds getMeasuredWidth getMeasuredHeight Override protected void onSizeChanged int width int height int oldWidth int oldHeight super onSizeChanged width height oldWidth oldHeight overlay setDrawableBounds width height Override public void invalidateDrawable Drawable drawable if drawable overlay drawable invalidate else super invalidateDrawable drawable public void setOverlayDrawable Drawable drawable overlay cleanupDrawable this if drawable null drawable setCallback this overlay new Overlay drawable overlay setDrawableState getDrawableState requestLayout static protected class Overlay final Drawable drawable Overlay Drawable drawable this drawable drawable protected void cleanupDrawable ImageView imageView if drawable null drawable setCallback null imageView unscheduleDrawable drawable protected void setDrawableBounds int width int height if drawable null drawable setBounds 0 0 width height protected void setDrawableState int state if drawable null drawable isStateful drawable setState state protected void draw Canvas canvas if drawable null drawable draw canvaspackage com twitter sdk android tweetui import android os Handler import android support v4 util LruCache import android text TextUtils import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core SessionManager import com twitter sdk android core TwitterAuthException import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterException import com twitter sdk android core TwitterSession import com twitter sdk android core models Tweet import java util List import io fabric sdk android Fabric class TweetRepository Cache size units are in number of entries an average Tweet is roughly 900 bytes in memory private static final int DEFAULT CACHE SIZE 20 private final TwitterCore twitterCore private final Handler mainHandler private final SessionManager TwitterSession userSessionManagers leave this package accessible for testing final LruCache Long Tweet tweetCache final LruCache Long FormattedTweetText formatCache TweetRepository Handler mainHandler SessionManager TwitterSession userSessionManagers this mainHandler userSessionManagers TwitterCore getInstance Testing only TweetRepository Handler mainHandler SessionManager TwitterSession userSessionManagers TwitterCore twitterCore this twitterCore twitterCore this mainHandler mainHandler this userSessionManagers userSessionManagers tweetCache new LruCache DEFAULT CACHE SIZE formatCache new LruCache DEFAULT CACHE SIZE FormattedTweetText formatTweetText final Tweet tweet if tweet null return null final FormattedTweetText cached formatCache get tweet id if cached null return cached final FormattedTweetText formattedTweetText TweetTextUtils formatTweetText tweet if formattedTweetText null TextUtils isEmpty formattedTweetText text formatCache put tweet id formattedTweetText return formattedTweetText void updateCache final Tweet tweet tweetCache put tweet id tweet private void deliverTweet final Tweet tweet final Callback Tweet cb if cb null return mainHandler post new Runnable Override public void run cb success new Result tweet null void favorite final long tweetId final Callback Tweet cb getUserSession new LoggingCallback TwitterSession cb Fabric getLogger Override public void success Result TwitterSession result twitterCore getApiClient result data getFavoriteService create tweetId false enqueue cb void unfavorite final long tweetId final Callback Tweet cb getUserSession new LoggingCallback TwitterSession cb Fabric getLogger Override public void success Result TwitterSession result twitterCore getApiClient result data getFavoriteService destroy tweetId false enqueue cb void retweet final long tweetId final Callback Tweet cb getUserSession new LoggingCallback TwitterSession cb Fabric getLogger Override public void success Result TwitterSession result twitterCore getApiClient result data getStatusesService retweet tweetId false enqueue cb void unretweet final long tweetId final Callback Tweet cb getUserSession new LoggingCallback TwitterSession cb Fabric getLogger Override public void success Result TwitterSession result twitterCore getApiClient result data getStatusesService unretweet tweetId false enqueue cb void getUserSession final Callback TwitterSession cb final TwitterSession session userSessionManagers getActiveSession if session null cb failure new TwitterAuthException User authorization required else cb success new Result session null void loadTweet final long tweetId final Callback Tweet cb final Tweet cachedTweet tweetCache get tweetId if cachedTweet null deliverTweet cachedTweet cb return twitterCore getApiClient getStatusesService show tweetId null null null enqueue new SingleTweetCallback cb void loadTweets final List Long tweetIds final Callback List Tweet cb final String commaSepIds TextUtils join tweetIds twitterCore getApiClient getStatusesService lookup commaSepIds null null null enqueue new MultiTweetsCallback tweetIds cb class SingleTweetCallback extends Callback Tweet final Callback Tweet cb SingleTweetCallback Callback Tweet cb this cb cb Override public void success Result Tweet result final Tweet tweet result data updateCache tweet if cb null cb success new Result tweet result response Override public void failure TwitterException exception cb failure exception class MultiTweetsCallback extends Callback List Tweet final Callback List Tweet cb final List Long tweetIds MultiTweetsCallback List Long tweetIds Callback List Tweet cb this cb cb this tweetIds tweetIds Override public void success Result List Tweet result if cb null final List Tweet sorted Utils orderTweets tweetIds result data cb success new Result sorted result response Override public void failure TwitterException exception cb failure exceptionpackage com twitter sdk android tweetui import com twitter sdk android core models Tweet public interface TweetScribeClient void impression Tweet tweet String viewName boolean actionEnabled void share Tweet tweet void favorite Tweet tweet void unfavorite Tweet tweet void click Tweet tweet String viewNamepackage com twitter sdk android tweetui import com twitter sdk android core internal scribe EventNamespace import com twitter sdk android core internal scribe ScribeItem import com twitter sdk android core internal scribe SyndicatedSdkImpressionEvent import com twitter sdk android core internal scribe SyndicationClientEvent import com twitter sdk android core models Tweet import java util ArrayList import java util List class TweetScribeClientImpl implements TweetScribeClient tfw client event specific names static final String TFW CLIENT EVENT PAGE android static final String TFW CLIENT EVENT SECTION tweet static final String TFW CLIENT EVENT ELEMENT intentionally blank syndicated sdk impression specific names static final String SYNDICATED SDK IMPRESSION PAGE tweet static final String SYNDICATED SDK IMPRESSION COMPONENT static final String SYNDICATED SDK IMPRESSION ELEMENT intentionally blank general names static final String SCRIBE CLICK ACTION click static final String SCRIBE IMPRESSION ACTION impression static final String SCRIBE FAVORITE ACTION favorite static final String SCRIBE UNFAVORITE ACTION unfavorite static final String SCRIBE SHARE ACTION share static final String SCRIBE ACTIONS ELEMENT actions final TweetUi tweetUi TweetScribeClientImpl TweetUi tweetUi this tweetUi tweetUi Override public void impression Tweet tweet String viewName boolean actionEnabled final List ScribeItem items new ArrayList items add ScribeItem fromTweet tweet tweetUi scribe getTfwImpressionNamespace viewName actionEnabled items tweetUi scribe getSyndicatedImpressionNamespace viewName items Override public void share Tweet tweet final List ScribeItem items new ArrayList items add ScribeItem fromTweet tweet tweetUi scribe getTfwShareNamespace items Override public void favorite Tweet tweet final List ScribeItem items new ArrayList items add ScribeItem fromTweet tweet tweetUi scribe getTfwFavoriteNamespace items Override public void unfavorite Tweet tweet final List ScribeItem items new ArrayList items add ScribeItem fromTweet tweet tweetUi scribe getTfwUnfavoriteNamespace items Override public void click Tweet tweet String viewName final List ScribeItem items new ArrayList items add ScribeItem fromTweet tweet tweetUi scribe getTfwClickNamespace viewName items static EventNamespace getTfwImpressionNamespace String viewName boolean actionEnabled return new EventNamespace Builder setClient SyndicationClientEvent CLIENT NAME setPage TFW CLIENT EVENT PAGE setSection TFW CLIENT EVENT SECTION setComponent viewName setElement actionEnabled SCRIBE ACTIONS ELEMENT TFW CLIENT EVENT ELEMENT setAction SCRIBE IMPRESSION ACTION builder static EventNamespace getTfwUnfavoriteNamespace return new EventNamespace Builder setClient SyndicationClientEvent CLIENT NAME setPage TFW CLIENT EVENT PAGE setSection TFW CLIENT EVENT SECTION setElement SCRIBE ACTIONS ELEMENT setAction SCRIBE UNFAVORITE ACTION builder static EventNamespace getTfwFavoriteNamespace return new EventNamespace Builder setClient SyndicationClientEvent CLIENT NAME setPage TFW CLIENT EVENT PAGE setSection TFW CLIENT EVENT SECTION setElement SCRIBE ACTIONS ELEMENT setAction SCRIBE FAVORITE ACTION builder static EventNamespace getTfwShareNamespace return new EventNamespace Builder setClient SyndicationClientEvent CLIENT NAME setPage TFW CLIENT EVENT PAGE setSection TFW CLIENT EVENT SECTION setElement SCRIBE ACTIONS ELEMENT setAction SCRIBE SHARE ACTION builder static EventNamespace getTfwClickNamespace String viewName return new EventNamespace Builder setClient SyndicationClientEvent CLIENT NAME setPage TFW CLIENT EVENT PAGE setSection TFW CLIENT EVENT SECTION setComponent viewName setElement TFW CLIENT EVENT ELEMENT setAction SCRIBE CLICK ACTION builder static EventNamespace getSyndicatedImpressionNamespace String viewName return new EventNamespace Builder setClient SyndicatedSdkImpressionEvent CLIENT NAME setPage SYNDICATED SDK IMPRESSION PAGE setSection viewName setComponent SYNDICATED SDK IMPRESSION COMPONENT setElement SYNDICATED SDK IMPRESSION ELEMENT setAction SCRIBE IMPRESSION ACTION builderpackage com twitter sdk android tweetui import android text SpannableStringBuilder import android text Spanned import android text TextUtils import android text style CharacterStyle import android view View import com twitter sdk android tweetui internal ClickableLinkSpan import java util ArrayList import java util Collections import java util Comparator import java util List final class TweetTextLinkifier private static final String PHOTO TYPE photo private TweetTextLinkifier static CharSequence linkifyUrls FormattedTweetText tweetText final LinkClickListener listener boolean stripLastPhotoEntity final int linkColor final int linkHighlightColor if tweetText null return null if TextUtils isEmpty tweetText text return tweetText text final SpannableStringBuilder spannable new SpannableStringBuilder tweetText text final List FormattedUrlEntity urls tweetText urlEntities final List FormattedMediaEntity media tweetText mediaEntities final FormattedMediaEntity lastPhoto if stripLastPhotoEntity lastPhoto getLastPhotoEntity tweetText else lastPhoto null final List FormattedUrlEntity combined mergeAndSortEntities urls media addUrlEntities spannable combined lastPhoto listener linkColor linkHighlightColor return spannable static List FormattedUrlEntity mergeAndSortEntities final List FormattedUrlEntity urls final List FormattedMediaEntity media if media null return urls final ArrayList FormattedUrlEntity combined new ArrayList urls combined addAll media Collections sort combined new Comparator FormattedUrlEntity Override public int compare FormattedUrlEntity lhs FormattedUrlEntity rhs if lhs null rhs null return 1 if lhs null rhs null return 1 if lhs null rhs null return 0 if lhs start rhs start return 1 if lhs start rhs start return 1 return 0 return combined private static void addUrlEntities final SpannableStringBuilder spannable final List FormattedUrlEntity entities final FormattedMediaEntity lastPhoto final LinkClickListener listener final int linkColor final int linkHighlightColor if entities null entities isEmpty return int offset 0 int len int start int end for final FormattedUrlEntity url entities start url start offset end url end offset if start 0 end spannable length replace the last photo url with empty string we can use the start indices as as simple check since none of this will work anyways if we have overlapping entities if lastPhoto null lastPhoto start url start spannable replace start end len end start end len offset len else if TextUtils isEmpty url displayUrl spannable replace start end url displayUrl len end start url displayUrl length end len offset len final CharacterStyle span new ClickableLinkSpan linkHighlightColor linkColor false Override public void onClick View widget if listener null return listener onUrlClicked url url spannable setSpan span start end Spanned SPAN EXCLUSIVE EXCLUSIVE private static FormattedMediaEntity getLastPhotoEntity final FormattedTweetText formattedTweetText if formattedTweetText null return null final List FormattedMediaEntity mediaEntityList formattedTweetText mediaEntities if mediaEntityList isEmpty return null FormattedMediaEntity entity for int i mediaEntityList size 1 i 0 i entity mediaEntityList get i if PHOTO TYPE equals entity type return entity return nullpackage com twitter sdk android tweetui import android text TextUtils import com twitter sdk android core models MediaEntity import com twitter sdk android core models Tweet import com twitter sdk android core models UrlEntity import com twitter sdk android tweetui internal util HtmlEntities import java util ArrayList import java util List final class TweetTextUtils private TweetTextUtils static FormattedTweetText formatTweetText Tweet tweet if tweet null return null final FormattedTweetText adjustedTweet new FormattedTweetText convertEntities adjustedTweet tweet format adjustedTweet tweet return adjustedTweet static void convertEntities FormattedTweetText formattedTweetText Tweet tweet if tweet entities null return final List UrlEntity coreUrls tweet entities urls if coreUrls null for UrlEntity entity coreUrls final FormattedUrlEntity formattedUrlEntity new FormattedUrlEntity entity formattedTweetText urlEntities add formattedUrlEntity final List MediaEntity coreMedia tweet entities media if coreMedia null for MediaEntity entity coreMedia final FormattedMediaEntity formattedMediaEntity new FormattedMediaEntity entity formattedTweetText mediaEntities add formattedMediaEntity static void format FormattedTweetText formattedTweetText Tweet tweet if TextUtils isEmpty tweet text return final HtmlEntities Unescaped u HtmlEntities HTML40 unescape tweet text final StringBuilder result new StringBuilder u unescaped adjustIndicesForEscapedChars formattedTweetText urlEntities u indices adjustIndicesForEscapedChars formattedTweetText mediaEntities u indices adjustIndicesForSupplementaryChars result formattedTweetText formattedTweetText text result toString static void adjustIndicesForEscapedChars List extends FormattedUrlEntity entities List int indices if entities null indices null indices isEmpty return final int size indices size int m 0 marker int diff 0 accumulated difference int inDiff end difference for escapes in range int len escaped length int start escaped start int end escaped end int i reusable index int index For each of the entities update the start and end indices Note tweet entities are sorted for FormattedUrlEntity entity entities inDiff 0 Go through the escaped entities indices for i m i size i index indices get i start index 0 end index 1 len is actually end start 1 1 len end start if end entity start bump position of the next marker diff len m else if end entity end inDiff len Once we ve accumulated diffs calc the offset entity start entity start diff entity end entity end diff inDiff static void adjustIndicesForSupplementaryChars StringBuilder content FormattedTweetText formattedTweetText final List Integer highSurrogateIndices new ArrayList final int len content length 1 for int i 0 i len i if Character isHighSurrogate content charAt i Character isLowSurrogate content charAt i 1 highSurrogateIndices add i adjustEntitiesWithOffsets formattedTweetText urlEntities highSurrogateIndices adjustEntitiesWithOffsets formattedTweetText mediaEntities highSurrogateIndices static void adjustEntitiesWithOffsets List extends FormattedUrlEntity entities List Integer indices if entities null indices null return for FormattedUrlEntity entity entities find all indices start and update offsets by that much final int start entity start int offset 0 for Integer index indices if index offset start offset 1 else break entity start entity start offset entity end entity end offsetpackage com twitter sdk android tweetui import android content Context import android view View import android view ViewGroup import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterException import com twitter sdk android core models Tweet import com twitter sdk android tweetui internal TimelineDelegate public class TweetTimelineListAdapter extends TimelineListAdapter Tweet protected Callback Tweet actionCallback final protected int styleResId public TweetTimelineListAdapter Context context Timeline Tweet timeline this context timeline R style tw TweetLightStyle null TweetTimelineListAdapter Context context Timeline Tweet timeline int styleResId Callback Tweet cb this context new TimelineDelegate timeline styleResId cb TweetTimelineListAdapter Context context TimelineDelegate Tweet delegate int styleResId Callback Tweet cb super context delegate this styleResId styleResId this actionCallback new ReplaceTweetCallback delegate cb Override public View getView int position View convertView ViewGroup parent View rowView convertView final Tweet tweet getItem position if rowView null final BaseTweetView tv new CompactTweetView context tweet styleResId tv setOnActionCallback actionCallback rowView tv else BaseTweetView rowView setTweet tweet return rowView static class ReplaceTweetCallback extends Callback Tweet TimelineDelegate Tweet delegate Callback Tweet cb ReplaceTweetCallback TimelineDelegate Tweet delegate Callback Tweet cb this delegate delegate this cb cb Override public void success Result Tweet result delegate setItemById result data if cb null cb success result Override public void failure TwitterException exception if cb null cb failure exception public static class Builder private Context context private Timeline Tweet timeline private Callback Tweet actionCallback private int styleResId R style tw TweetLightStyle public Builder Context context this context context public Builder setTimeline Timeline Tweet timeline this timeline timeline return this public Builder setViewStyle int styleResId this styleResId styleResId return this public Builder setOnActionCallback Callback Tweet actionCallback this actionCallback actionCallback return this public TweetTimelineListAdapter build return new TweetTimelineListAdapter context timeline styleResId actionCallbackpackage com twitter sdk android tweetui import io fabric sdk android Fabric import io fabric sdk android Kit import io fabric sdk android services concurrency DependsOn import com squareup picasso Picasso import com twitter sdk android core GuestSessionProvider import com twitter sdk android core SessionManager import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterSession import com twitter sdk android core internal scribe DefaultScribeClient import com twitter sdk android core internal scribe EventNamespace import com twitter sdk android core internal scribe ScribeItem import java util List DependsOn TwitterCore class public class TweetUi extends Kit Boolean static final String LOGTAG TweetUi static final String NOT STARTED ERROR Must start TweetUi Kit in Fabric with private static final String KIT SCRIBE NAME TweetUi SessionManager TwitterSession sessionManager GuestSessionProvider guestSessionProvider DefaultScribeClient scribeClient private TweetRepository tweetRepository private Picasso imageLoader public static TweetUi getInstance checkInitialized return Fabric getKit TweetUi class Override public String getIdentifier return BuildConfig GROUP BuildConfig ARTIFACT ID Override public String getVersion return BuildConfig VERSION NAME BuildConfig BUILD NUMBER Override protected boolean onPreExecute super onPreExecute final TwitterCore twitterCore TwitterCore getInstance sessionManager twitterCore getSessionManager guestSessionProvider twitterCore getGuestSessionProvider tweetRepository new TweetRepository getFabric getMainHandler twitterCore getSessionManager return true Override protected Boolean doInBackground imageLoader Picasso with getContext setUpScribeClient return true private static void checkInitialized if Fabric getKit TweetUi class null throw new IllegalStateException NOT STARTED ERROR private void setUpScribeClient scribeClient new DefaultScribeClient this KIT SCRIBE NAME sessionManager guestSessionProvider getIdManager void scribe EventNamespace namespaces if scribeClient null return for EventNamespace ns namespaces scribeClient scribe ns void scribe EventNamespace ns List ScribeItem items if scribeClient null return scribeClient scribe ns items TweetRepository getTweetRepository return tweetRepository Testing purposes only void setTweetRepository TweetRepository tweetRepository this tweetRepository tweetRepository Picasso getImageLoader return imageLoader Testing purposes only void setImageLoader Picasso imageLoader this imageLoader imageLoaderpackage com twitter sdk android tweetcomposer import android app IntentService import android content Intent import android net Uri import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core TwitterAuthToken import com twitter sdk android core TwitterException import com twitter sdk android core TwitterSession import com twitter sdk android core models Media import com twitter sdk android core models Tweet import com twitter sdk android tweetcomposer internal CardCreate import com twitter sdk android tweetcomposer internal CardData import java io File import io fabric sdk android Fabric import okhttp3 MediaType import okhttp3 RequestBody public class TweetUploadService extends IntentService public static final String UPLOAD SUCCESS com twitter sdk android tweetcomposer UPLOAD SUCCESS public static final String UPLOAD FAILURE com twitter sdk android tweetcomposer UPLOAD FAILURE public static final String EXTRA TWEET ID EXTRA TWEET ID public static final String EXTRA RETRY INTENT EXTRA RETRY INTENT static final String TAG TweetUploadService static final String EXTRA USER TOKEN EXTRA USER TOKEN static final String EXTRA TWEET TEXT EXTRA TWEET TEXT static final String EXTRA TWEET CARD EXTRA TWEET CARD private static final int PLACEHOLDER ID 1 private static final String PLACEHOLDER SCREEN NAME DependencyProvider dependencyProvider TwitterSession twitterSession String tweetText Card tweetCard Intent intent public TweetUploadService this new DependencyProvider testing purposes TweetUploadService DependencyProvider dependencyProvider super TweetUploadService this dependencyProvider dependencyProvider Override protected void onHandleIntent Intent intent final TwitterAuthToken token intent getParcelableExtra EXTRA USER TOKEN this intent intent twitterSession new TwitterSession token PLACEHOLDER ID PLACEHOLDER SCREEN NAME tweetText intent getStringExtra EXTRA TWEET TEXT tweetCard Card intent getSerializableExtra EXTRA TWEET CARD if Card isAppCard tweetCard uploadAppCardTweet twitterSession tweetText tweetCard else uploadTweet twitterSession tweetText void uploadTweet TwitterSession session final String text final ComposerApiClient client dependencyProvider getComposerApiClient session client getComposerStatusesService update text null enqueue new Callback Tweet Override public void success Result Tweet result sendSuccessBroadcast result data getId stopSelf Override public void failure TwitterException exception fail exception void uploadAppCardTweet TwitterSession session final String text final Card card final ComposerApiClient client dependencyProvider getComposerApiClient session final Uri uri Uri parse card imageUri final String path FileUtils getPath TweetUploadService this uri if path null fail new TwitterException Uri file path resolved to null return final File file new File path final String mimeType FileUtils getMimeType file final RequestBody media RequestBody create MediaType parse mimeType file client getMediaService upload media null null enqueue new Callback Media Override public void success Result Media result final CardData cardData CardDataFactory createAppCardData card result data mediaId dependencyProvider getAdvertisingId client getCardService create cardData enqueue new Callback CardCreate Override public void success Result CardCreate result final String cardUri result data cardUri client getComposerStatusesService update text cardUri enqueue new Callback Tweet Override public void success Result Tweet result sendSuccessBroadcast result data getId stopSelf Override public void failure TwitterException exception fail exception Override public void failure TwitterException exception fail exception Override public void failure TwitterException exception fail exception void fail TwitterException e sendFailureBroadcast intent Fabric getLogger e TAG Post Tweet failed e stopSelf void sendSuccessBroadcast long tweetId final Intent intent new Intent UPLOAD SUCCESS intent putExtra EXTRA TWEET ID tweetId sendBroadcast intent void sendFailureBroadcast Intent original final Intent intent new Intent UPLOAD FAILURE intent putExtra EXTRA RETRY INTENT original sendBroadcast intent static class DependencyProvider ComposerApiClient getComposerApiClient TwitterSession session return TweetComposer getInstance getApiClient session String getAdvertisingId return TweetComposer getInstance getAdvertisingIdpackage com twitter sdk android tweetui import android net Uri import android text TextUtils import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core models Tweet import java util List import java util Locale import io fabric sdk android Fabric public final class TweetUtils private static final String PERMALINK FORMAT https twitter com s status d private static final String UNKNOWN SCREEN NAME twitter unknown static final String LOAD TWEET DEBUG loadTweet failure for Tweet Id d private TweetUtils public static void loadTweet final long tweetId final Callback Tweet cb TweetUi getInstance getTweetRepository loadTweet tweetId new com twitter sdk android tweetui LoggingCallback Tweet cb Fabric getLogger Override public void success Result Tweet result if cb null cb success result public static void loadTweets final List Long tweetIds final Callback List Tweet cb TweetUi getInstance getTweetRepository loadTweets tweetIds new com twitter sdk android tweetui LoggingCallback List Tweet cb Fabric getLogger Override public void success Result List Tweet result if cb null cb success result static boolean isTweetResolvable Tweet tweet return tweet null tweet id 0 tweet user null TextUtils isEmpty tweet user screenName static Tweet getDisplayTweet Tweet tweet if tweet null tweet retweetedStatus null return tweet else return tweet retweetedStatus static Uri getPermalink String screenName long tweetId if tweetId 0 return null String permalink if TextUtils isEmpty screenName permalink String format Locale US PERMALINK FORMAT UNKNOWN SCREEN NAME tweetId else permalink String format Locale US PERMALINK FORMAT screenName tweetId return Uri parse permalinkpackage com twitter sdk android tweetui import android content Context import android util AttributeSet import android widget ImageView import com twitter sdk android core models Tweet public class TweetView extends BaseTweetView private static final String VIEW TYPE NAME default public TweetView Context context Tweet tweet super context tweet public TweetView Context context Tweet tweet int styleResId super context tweet styleResId TweetView Context context Tweet tweet int styleResId DependencyProvider dependencyProvider super context tweet styleResId dependencyProvider public TweetView Context context AttributeSet attrs super context attrs public TweetView Context context AttributeSet attrs int defStyle super context attrs defStyle Override protected int getLayout return R layout tw tweet Override void render super render setVerifiedCheck tweet private void setVerifiedCheck Tweet tweet if tweet null tweet user null tweet user verified verifiedCheckView setVisibility ImageView VISIBLE else verifiedCheckView setVisibility ImageView GONE Override String getViewTypeName return VIEW TYPE NAMEpackage com twitter sdk android import android app Activity import com twitter sdk android core Callback import com twitter sdk android core SessionManager import com twitter sdk android core TwitterApiClient import com twitter sdk android core TwitterSession import com twitter sdk android tweetcomposer TweetComposer import io fabric sdk android Fabric import io fabric sdk android Kit import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterAuthConfig import com twitter sdk android tweetui TweetUi import io fabric sdk android KitGroup import java util Arrays import java util Collection import java util Collections public class Twitter extends Kit implements KitGroup public final TwitterCore core public final TweetUi tweetUi public final TweetComposer tweetComposer public final Collection extends Kit kits public static Twitter getInstance return Fabric getKit Twitter class private static void checkInitialized if getInstance null throw new IllegalStateException Must start Twitter Kit with Fabric with first public Twitter TwitterAuthConfig config core new TwitterCore config tweetUi new TweetUi tweetComposer new TweetComposer kits Collections unmodifiableCollection Arrays asList core tweetUi tweetComposer Override public String getVersion return BuildConfig VERSION NAME BuildConfig BUILD NUMBER Override public String getIdentifier return BuildConfig GROUP BuildConfig ARTIFACT ID Override public Collection extends Kit getKits return kits Override protected Object doInBackground Nothing to do return null public static void logIn Activity activity Callback TwitterSession callback checkInitialized getInstance core logIn activity callback public static void logOut checkInitialized getInstance core logOut public static SessionManager TwitterSession getSessionManager checkInitialized return getInstance core getSessionManager public static TwitterApiClient getApiClient checkInitialized return getInstance core getApiClient public static TwitterApiClient getApiClient TwitterSession session checkInitialized return getInstance core getApiClient sessionpackage com twitter sdk android core internal import android net Uri import android os Build public class TwitterApi public static final String BASE HOST api twitter com public static final String BASE HOST URL https BASE HOST private final String baseHostUrl public TwitterApi this BASE HOST URL public TwitterApi String baseHostUrl this baseHostUrl baseHostUrl public String getBaseHostUrl return baseHostUrl public Uri Builder buildUponBaseHostUrl String paths final Uri Builder builder Uri parse getBaseHostUrl buildUpon if paths null for String p paths builder appendPath p return builder public static String buildUserAgent String clientName String version final StringBuilder ua new StringBuilder clientName append append version NOTE We currently do not provide client version code information append append Build MODEL append append Build VERSION RELEASE append append Build MANUFACTURER append append Build MODEL append append Build BRAND append append Build PRODUCT NOTE We do not add client source preload or wifi information append return ua toStringpackage com twitter sdk android core import com twitter sdk android core internal TwitterApi import com twitter sdk android core internal network OkHttpClientHelper import com twitter sdk android core models BindingValues import com twitter sdk android core models BindingValuesAdapter import com twitter sdk android core models SafeListAdapter import com twitter sdk android core models SafeMapAdapter import com twitter sdk android core services AccountService import com twitter sdk android core services CollectionService import com twitter sdk android core services ConfigurationService import com twitter sdk android core services FavoriteService import com twitter sdk android core services ListService import com twitter sdk android core services MediaService import com twitter sdk android core services SearchService import com twitter sdk android core services StatusesService import com google gson Gson import com google gson GsonBuilder import java util concurrent ConcurrentHashMap import okhttp3 OkHttpClient import retrofit2 Retrofit import retrofit2 converter gson GsonConverterFactory public class TwitterApiClient final ConcurrentHashMap Class Object services final Retrofit retrofit TwitterApiClient OkHttpClient client TwitterApi twitterApi this services new ConcurrentHashMap final Gson gson new GsonBuilder registerTypeAdapterFactory new SafeListAdapter registerTypeAdapterFactory new SafeMapAdapter registerTypeAdapter BindingValues class new BindingValuesAdapter create retrofit new Retrofit Builder client client baseUrl twitterApi getBaseHostUrl addConverterFactory GsonConverterFactory create gson build public TwitterApiClient TwitterSession session this OkHttpClientHelper getOkHttpClient session TwitterCore getInstance getAuthConfig TwitterCore getInstance getSSLSocketFactory new TwitterApi public TwitterApiClient this OkHttpClientHelper getOkHttpClient TwitterCore getInstance getGuestSessionProvider TwitterCore getInstance getSSLSocketFactory new TwitterApi public AccountService getAccountService return getService AccountService class public FavoriteService getFavoriteService return getService FavoriteService class public StatusesService getStatusesService return getService StatusesService class public SearchService getSearchService return getService SearchService class public ListService getListService return getService ListService class public CollectionService getCollectionService return getService CollectionService class public ConfigurationService getConfigurationService return getService ConfigurationService class public MediaService getMediaService return getService MediaService class SuppressWarnings unchecked protected T T getService Class T cls if services contains cls services putIfAbsent cls retrofit create cls return T services get clspackage com twitter sdk android core import io fabric sdk android FabricAndroidTestCase import io fabric sdk android FabricTestUtils import okhttp3 OkHttpClient import com twitter sdk android core internal TwitterApi import com twitter sdk android core services FavoriteService import com twitter sdk android core services StatusesService import static org mockito Mockito mock public class TwitterApiClientTest extends FabricAndroidTestCase public void testGetService sdkNotStarted try FabricTestUtils resetFabric new TwitterApiClient mock TwitterSession class fail catch IllegalStateException ise assertEquals Must Initialize Fabric before using singleton ise getMessage public void testConstructor noSession throws Exception try final TwitterCore twitterCore TwitterCoreTestUtils createTwitterCore new TwitterAuthConfig null null FabricTestUtils with getContext twitterCore new TwitterApiClient null fail catch IllegalArgumentException ie assertEquals Session must not be null ie getMessage finally FabricTestUtils resetFabric public void testGetService cachedService throws Exception final TwitterApiClient client newTwitterApiClient final StatusesService service client getService StatusesService class assertSame service client getService StatusesService class public void testGetService differentServices throws Exception final TwitterApiClient client newTwitterApiClient final FavoriteService service client getService FavoriteService class assertNotSame service client getService StatusesService class private TwitterApiClient newTwitterApiClient return new TwitterApiClient mock OkHttpClient class new TwitterApipackage com twitter sdk android core internal public class TwitterApiConstants public static final int MAX TWEET CHARS 140 public static class Base public static final String PARAM ID id public static final String FIELD ID id public static class Errors extends Base public static final String ERRORS errors error when app auth token not recognized such as when expired public static final int APP AUTH ERROR CODE 89 error when a tweet has already been favorited public static final int ALREADY FAVORITED 139 error when a tweet has already been unfavorited public static final int ALREADY UNFAVORITED 144 error when guest auth token not recognized such as when expired public static final int GUEST AUTH ERROR CODE 239 legacy errors are errors that are returned by the api in a different format where there is no array of errors public static final int LEGACY ERROR 0package com twitter sdk android core public class TwitterApiErrorConstants phone normalization errors public static final int DEVICE REGISTRATION INVALID INPUT 44 public static final int REGISTRATION INVALID INPUT 300 public static final int REGISTRATION PHONE NORMALIZATION FAILED 303 device already registered by other user public static final int DEVICE ALREADY REGISTERED 285 rate limit for sms exceeded public static final int RATE LIMIT EXCEEDED 88 registration general error public static final int REGISTRATION GENERAL ERROR 284 public static final int REGISTRATION OPERATION FAILED 302 spammer phone number public static final int SPAMMER 240 public static final int COULD NOT AUTHENTICATE 32 public static final int CLIENT NOT PRIVILEGED 87 public static final int UNKNOWN ERROR 1 Unrecoverable errors public static final int OPERATOR UNSUPPORTED 286 public static final int USER IS NOT SDK USER 269 public static final int EXPIRED LOGIN VERIFICATION REQUEST 235 public static final int MISSING LOGIN VERIFICATION REQUEST 237 public static final int DEVICE REGISTRATION RATE EXCEEDED 299 public static final int PAGE NOT EXIST 34 public static final int EMAIL ALREADY REGISTERED 120package com twitter sdk android core import android text TextUtils import com google gson Gson import com google gson JsonSyntaxException import com twitter sdk android core models ApiError import com twitter sdk android core models ApiErrors import io fabric sdk android Fabric import retrofit2 Response public class TwitterApiException extends TwitterException public static final int DEFAULT ERROR CODE 0 private final ApiError apiError private final TwitterRateLimit twitterRateLimit private final int code private final Response response public TwitterApiException Response response this response readApiError response readApiRateLimit response response code TwitterApiException Response response ApiError apiError TwitterRateLimit twitterRateLimit int code super createExceptionMessage code this apiError apiError this twitterRateLimit twitterRateLimit this code code this response response public int getStatusCode return code public int getErrorCode return apiError null DEFAULT ERROR CODE apiError code public String getErrorMessage return apiError null null apiError message public TwitterRateLimit getTwitterRateLimit return twitterRateLimit public Response getResponse return response public static TwitterRateLimit readApiRateLimit Response response return new TwitterRateLimit response headers public static ApiError readApiError Response response try The response buffer can only be read once so we clone the underlying buffer so the response can be consumed down stream if necessary final String body response errorBody source buffer clone readUtf8 if TextUtils isEmpty body return parseApiError body catch Exception e Fabric getLogger e TwitterCore TAG Unexpected response e return null static ApiError parseApiError String body final Gson gson new Gson try final ApiErrors apiErrors gson fromJson body ApiErrors class if apiErrors errors isEmpty return apiErrors errors get 0 catch JsonSyntaxException e Fabric getLogger e TwitterCore TAG Invalid json body e return null static String createExceptionMessage int code return HTTP request failed Status codepackage com twitter sdk android core identity import android app Activity import android content Context import android content Intent import io fabric sdk android Fabric import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core SessionManager import com twitter sdk android core TwitterAuthException import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterException import com twitter sdk android core TwitterSession import com twitter sdk android core internal scribe DefaultScribeClient import com twitter sdk android core internal scribe EventNamespace import com twitter sdk android core internal scribe TwitterCoreScribeClientHolder public class TwitterAuthClient private static class AuthStateLazyHolder private static final AuthState INSTANCE new AuthState private static final String SCRIBE CLIENT android private static final String SCRIBE LOGIN PAGE login private static final String SCRIBE SHARE EMAIL PAGE shareemail private static final String SCRIBE SECTION intentionally blank private static final String SCRIBE COMPONENT intentionally blank private static final String SCRIBE ELEMENT intentionally blank private static final String SCRIBE ACTION impression final AuthState authState final SessionManager TwitterSession sessionManager private final Context context private final TwitterAuthConfig authConfig public int getRequestCode return authConfig getRequestCode public TwitterAuthClient this TwitterCore getInstance getContext TwitterCore getInstance getAuthConfig TwitterCore getInstance getSessionManager AuthStateLazyHolder INSTANCE TwitterAuthClient Context context TwitterAuthConfig authConfig SessionManager TwitterSession sessionManager AuthState authState this authState authState this context context this authConfig authConfig this sessionManager sessionManager public void authorize Activity activity Callback TwitterSession callback if activity null throw new IllegalArgumentException Activity must not be null if callback null throw new IllegalArgumentException Callback must not be null if activity isFinishing Fabric getLogger e TwitterCore TAG Cannot authorize activity is finishing null else handleAuthorize activity callback private void handleAuthorize Activity activity Callback TwitterSession callback scribeAuthorizeImpression final CallbackWrapper callbackWrapper new CallbackWrapper sessionManager callback if authorizeUsingSSO activity callbackWrapper authorizeUsingOAuth activity callbackWrapper callbackWrapper failure new TwitterAuthException Authorize failed private boolean authorizeUsingSSO Activity activity CallbackWrapper callbackWrapper if SSOAuthHandler isAvailable activity Fabric getLogger d TwitterCore TAG Using SSO return authState beginAuthorize activity new SSOAuthHandler authConfig callbackWrapper authConfig getRequestCode else return false private boolean authorizeUsingOAuth Activity activity CallbackWrapper callbackWrapper Fabric getLogger d TwitterCore TAG Using OAuth return authState beginAuthorize activity new OAuthHandler authConfig callbackWrapper authConfig getRequestCode private void scribeAuthorizeImpression final DefaultScribeClient scribeClient getScribeClient if scribeClient null return final EventNamespace ns new EventNamespace Builder setClient SCRIBE CLIENT setPage SCRIBE LOGIN PAGE setSection SCRIBE SECTION setComponent SCRIBE COMPONENT setElement SCRIBE ELEMENT setAction SCRIBE ACTION builder scribeClient scribe ns public void onActivityResult int requestCode int resultCode Intent data Fabric getLogger d TwitterCore TAG onActivityResult called with requestCode resultCode if authState isAuthorizeInProgress Fabric getLogger e TwitterCore TAG Authorize not in progress null else final AuthHandler authHandler authState getAuthHandler if authHandler null authHandler handleOnActivityResult requestCode resultCode data authState endAuthorize public void requestEmail TwitterSession session Callback String callback if session null throw new IllegalArgumentException Session must not be null if callback null throw new IllegalArgumentException Callback must not be null scribeRequestEmail context startActivity newShareEmailIntent session callback protected DefaultScribeClient getScribeClient return TwitterCoreScribeClientHolder getScribeClient private void scribeRequestEmail final DefaultScribeClient scribeClient getScribeClient if scribeClient null return final EventNamespace ns new EventNamespace Builder setClient SCRIBE CLIENT setPage SCRIBE SHARE EMAIL PAGE setSection SCRIBE SECTION setComponent SCRIBE COMPONENT setElement SCRIBE ELEMENT setAction SCRIBE ACTION builder scribeClient scribe ns Intent newShareEmailIntent TwitterSession session Callback String callback return new Intent context ShareEmailActivity class setFlags Intent FLAG ACTIVITY NEW TASK putExtra ShareEmailActivity EXTRA SESSION ID session getId putExtra ShareEmailActivity EXTRA RESULT RECEIVER new ShareEmailResultReceiver callback static class CallbackWrapper extends Callback TwitterSession private final SessionManager TwitterSession sessionManager private final Callback TwitterSession callback public CallbackWrapper SessionManager TwitterSession sessionManager Callback TwitterSession callback this sessionManager sessionManager this callback callback Override public void success Result TwitterSession result Fabric getLogger d TwitterCore TAG Authorization completed successfully sessionManager setActiveSession result data callback success result Override public void failure TwitterException exception Fabric getLogger e TwitterCore TAG Authorization completed with an error exception callback failure exceptionpackage com twitter sdk android core identity import android app Activity import android content ComponentName import android content Context import android content Intent import android content pm PackageManager import io fabric sdk android FabricAndroidTestCase import io fabric sdk android FabricTestUtils import io fabric sdk android KitStub import com twitter sdk android core Callback import com twitter sdk android core Result import com twitter sdk android core SessionManager import com twitter sdk android core TestFixtures import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterAuthException import com twitter sdk android core TwitterSession import com twitter sdk android core internal scribe DefaultScribeClient import com twitter sdk android core internal scribe EventNamespace import org mockito ArgumentCaptor import static org mockito Mockito public class TwitterAuthClientTest extends FabricAndroidTestCase private static final int TEST REQUEST CODE 100 private Context mockContext private TwitterAuthConfig mockAuthConfig private SessionManager TwitterSession mockSessionManager private AuthState mockAuthState private Callback TwitterSession mockCallback private DefaultScribeClient mockScribeClient private TwitterAuthClient authClient Override protected void setUp throws Exception super setUp mockContext mock Context class when mockContext getPackageName thenReturn getClass getPackage toString mockAuthConfig mock TwitterAuthConfig class when mockAuthConfig getRequestCode thenReturn TEST REQUEST CODE mockSessionManager mock SessionManager class mockAuthState mock TestAuthState class mockCallback mock Callback class mockScribeClient mock DefaultScribeClient class authClient new TwitterAuthClient mockContext mockAuthConfig mockSessionManager mockAuthState public void testConstructor noParameters throws Exception FabricTestUtils with getContext new KitStub try new TwitterAuthClient fail Expected IllegalStateException to be thrown catch IllegalStateException e assertEquals Must start Twitter Kit with Fabric with first e getMessage finally FabricTestUtils resetFabric public void testGetRequestCode assertEquals TEST REQUEST CODE authClient getRequestCode public void testAuthorize activityNull try authClient authorize null mock Callback class fail Expected IllegalArgumentException to be thrown catch IllegalArgumentException e assertEquals Activity must not be null e getMessage public void testAuthorize activityIsFinishing final Activity mockActivity mock Activity class when mockActivity isFinishing thenReturn true Verify that when activity is finishing no further work is done authClient authorize mockActivity mockCallback verifyZeroInteractions mockAuthState public void testAuthorize callbackNull try authClient authorize mock Activity class null fail Expected IllegalArgumentException to be thrown catch IllegalArgumentException e assertEquals Callback must not be null e getMessage public void testAuthorize authorizeInProgress throws PackageManager NameNotFoundException final Activity mockActivity mock Activity class TestUtils setupNoSSOAppInstalled mockActivity when mockAuthState isAuthorizeInProgress thenReturn true Verify that when authorize is in progress callback is notified of error authClient authorize mockActivity mockCallback verify mockCallback failure any TwitterAuthException class public void testAuthorize ssoAvailable throws PackageManager NameNotFoundException final Activity mockActivity mock Activity class TestUtils setupTwitterInstalled mockActivity when mockAuthState beginAuthorize any Activity class any AuthHandler class thenReturn true Verify that when SSO is available SSOAuthHandler is used to complete the authorization flow authClient authorize mockActivity mockCallback verify mockAuthState beginAuthorize eq mockActivity any SSOAuthHandler class public void testAuthorize ssoAvailableViaTwitterDogfood throws PackageManager NameNotFoundException final Activity mockActivity mock Activity class TestUtils setupTwitterInstalled mockActivity when mockAuthState beginAuthorize any Activity class any AuthHandler class thenReturn true Verify that when SSO is available SSOAuthHandler is used to complete the authorization flow authClient authorize mockActivity mockCallback verify mockAuthState beginAuthorize eq mockActivity any SSOAuthHandler class public void testAuthorize ssoNotAvailable throws PackageManager NameNotFoundException final Activity mockActivity mock Activity class TestUtils setupNoSSOAppInstalled mockActivity when mockAuthState beginAuthorize any Activity class any AuthHandler class thenReturn true Verify that when SSO is not available OAuthHandler is used to complete the authorization flow authClient authorize mockActivity mockCallback verify mockAuthState beginAuthorize eq mockActivity any OAuthHandler class public void testAuthorize bothSsoAndOAuthFail throws PackageManager NameNotFoundException final Activity mockActivity mock Activity class TestUtils setupTwitterInstalled mockActivity when mockAuthState beginAuthorize any Activity class any AuthHandler class thenReturn false authClient authorize mockActivity mockCallback verify mockAuthState times 2 beginAuthorize eq mockActivity any AuthHandler class final ArgumentCaptor TwitterAuthException argCaptor ArgumentCaptor forClass TwitterAuthException class verify mockCallback failure argCaptor capture assertEquals Authorize failed argCaptor getValue getMessage public void testAuthorize scribesImpression throws PackageManager NameNotFoundException final Activity mockActivity mock Activity class TestUtils setupNoSSOAppInstalled mockActivity authClient new TwitterAuthClient mockContext mockAuthConfig mockSessionManager mockAuthState Override protected DefaultScribeClient getScribeClient return mockScribeClient authClient authorize mockActivity mockCallback verify mockScribeClient scribe any EventNamespace class public void testAuthorize scribeHandlesNullClient throws PackageManager NameNotFoundException final Activity mockActivity mock Activity class TestUtils setupNoSSOAppInstalled mockActivity authClient new TwitterAuthClient mockContext mockAuthConfig mockSessionManager mockAuthState Override protected DefaultScribeClient getScribeClient return null try authClient authorize mockActivity mockCallback catch NullPointerException e fail should not crash with null scribe client public void testOnActivityResult noAuthorizeInProgress when mockAuthState isAuthorizeInProgress thenReturn false Verify that if authorize is in progress onActivityResult returns early authClient onActivityResult TEST REQUEST CODE Activity RESULT OK mock Intent class verify mockAuthState isAuthorizeInProgress verifyNoMoreInteractions mockAuthState public void testOnActivityResult handleOnActivityResultTrue setUpAuthStateOnActivityResult true Verify that when the activity result is handled auth state is updated to end authClient onActivityResult TEST REQUEST CODE Activity RESULT OK mock Intent class verify mockAuthState isAuthorizeInProgress verify mockAuthState getAuthHandler verify mockAuthState endAuthorize public void testOnActivityResult handleOnActivityResultFalse setUpAuthStateOnActivityResult false Verify that when the activity result is not handled auth state is not updated to end authClient onActivityResult TEST REQUEST CODE Activity RESULT OK mock Intent class verify mockAuthState isAuthorizeInProgress verify mockAuthState getAuthHandler verifyNoMoreInteractions mockAuthState private void setUpAuthStateOnActivityResult boolean handled final AuthHandler mockAuthHandler mock AuthHandler class when mockAuthHandler handleOnActivityResult anyInt anyInt any Intent class thenReturn handled when mockAuthState isAuthorizeInProgress thenReturn true when mockAuthState getAuthHandler thenReturn mockAuthHandler public void testRequestEmail nullSession try authClient requestEmail null mock Callback class fail Expected IllegalArgumentException to be thrown catch IllegalArgumentException e assertEquals Session must not be null e getMessage public void testRequestEmail final TwitterSession mockSession mock TwitterSession class when mockSession getId thenReturn TestFixtures USER ID authClient requestEmail mockSession mock Callback class final ArgumentCaptor Intent argCaptor ArgumentCaptor forClass Intent class verify mockContext startActivity argCaptor capture assertShareEmailIntent argCaptor getValue public void testRequestEmail nullCallback try authClient requestEmail mock TwitterSession class null fail Expected IllegalArgumentException to be thrown catch IllegalArgumentException e assertEquals Callback must not be null e getMessage public void testRequestEmail scribesImpression final TwitterSession mockSession mock TwitterSession class when mockSession getId thenReturn TestFixtures USER ID authClient new TwitterAuthClient mockContext mockAuthConfig mockSessionManager mockAuthState Override protected DefaultScribeClient getScribeClient return mockScribeClient authClient requestEmail mockSession mock Callback class verify mockScribeClient scribe any EventNamespace class public void testReqestEmail scribeHandlesNullClient final TwitterSession mockSession mock TwitterSession class when mockSession getId thenReturn TestFixtures USER ID authClient new TwitterAuthClient mockContext mockAuthConfig mockSessionManager mockAuthState Override protected DefaultScribeClient getScribeClient return null try authClient requestEmail mockSession mock Callback class catch NullPointerException e fail should handle null scribe client public void testNewShareEmailIntent final TwitterSession mockSession mock TwitterSession class when mockSession getId thenReturn TestFixtures USER ID final Intent intent authClient newShareEmailIntent mockSession mock Callback class assertShareEmailIntent intent private void assertShareEmailIntent Intent intent final ComponentName component new ComponentName mockContext ShareEmailActivity class getName assertEquals component intent getComponent assertEquals Intent FLAG ACTIVITY NEW TASK intent getFlags assertEquals TestFixtures USER ID intent getLongExtra ShareEmailActivity EXTRA SESSION ID TwitterSession UNKNOWN USER ID assertNotNull intent getParcelableExtra ShareEmailActivity EXTRA RESULT RECEIVER public void testCallbackWrapper success final TwitterAuthClient CallbackWrapper callbackWrapper new TwitterAuthClient CallbackWrapper mockSessionManager mockCallback final TwitterSession mockSession mock TwitterSession class final Result TwitterSession mockResult new Result mockSession null callbackWrapper success mockResult verify mockSessionManager setActiveSession eq mockSession verify mockCallback success eq mockResult public void testCallbackWrapper failure final TwitterAuthClient CallbackWrapper callbackWrapper new TwitterAuthClient CallbackWrapper mockSessionManager mockCallback final TwitterAuthException mockException mock TwitterAuthException class callbackWrapper failure mockException verifyZeroInteractions mockSessionManager verify mockCallback failure eq mockExceptionpackage com twitter sdk android core import android os Parcel import android os Parcelable public class TwitterAuthConfig implements Parcelable public static final int DEFAULT AUTH REQUEST CODE 140 public static final Parcelable Creator TwitterAuthConfig CREATOR new Parcelable Creator TwitterAuthConfig public TwitterAuthConfig createFromParcel Parcel in return new TwitterAuthConfig in public TwitterAuthConfig newArray int size return new TwitterAuthConfig size private final String consumerKey private final String consumerSecret public TwitterAuthConfig String consumerKey String consumerSecret if consumerKey null consumerSecret null throw new IllegalArgumentException TwitterAuthConfig must not be created with null consumer key or secret this consumerKey sanitizeAttribute consumerKey this consumerSecret sanitizeAttribute consumerSecret private TwitterAuthConfig Parcel in consumerKey in readString consumerSecret in readString public String getConsumerKey return consumerKey public String getConsumerSecret return consumerSecret public int getRequestCode return DEFAULT AUTH REQUEST CODE static String sanitizeAttribute String input if input null return input trim else return null Override public int describeContents return 0 Override public void writeToParcel Parcel out int flags out writeString consumerKey out writeString consumerSecretpackage com twitter sdk android core import android os Parcel import io fabric sdk android FabricAndroidTestCase public class TwitterAuthConfigTest extends FabricAndroidTestCase private static final String NO PARAM ERROR MSG TwitterAuthConfig must not be created with null consumer key or secret private TwitterAuthConfig authConfig Override protected void setUp throws Exception super setUp authConfig new TwitterAuthConfig TestFixtures KEY TestFixtures SECRET public void testParcelable final Parcel parcel Parcel obtain authConfig writeToParcel parcel 0 parcel setDataPosition 0 final TwitterAuthConfig parceledAuthConfig TwitterAuthConfig CREATOR createFromParcel parcel assertEquals TestFixtures KEY parceledAuthConfig getConsumerKey assertEquals TestFixtures SECRET parceledAuthConfig getConsumerSecret public void testGetRequestCode assertEquals TwitterAuthConfig DEFAULT AUTH REQUEST CODE authConfig getRequestCode public void testSanitizeAttribute nullAttribute assertNull TwitterAuthConfig sanitizeAttribute null public void testSanitizeAttribute sanitizedString final String test test assertEquals test TwitterAuthConfig sanitizeAttribute test public void testSanitizeAttribute trailingWhitespace final String test test assertEquals test TwitterAuthConfig sanitizeAttribute test public void testConstructor nullKey try new TwitterAuthConfig null secret fail catch IllegalArgumentException ie assertEquals NO PARAM ERROR MSG ie getMessage public void testConstructor nullSecret try new TwitterAuthConfig key null fail catch IllegalArgumentException ie assertEquals NO PARAM ERROR MSG ie getMessage public void testConstructor nullArguments try new TwitterAuthConfig null null fail catch IllegalArgumentException ie assertEquals NO PARAM ERROR MSG ie getMessagepackage com twitter sdk android core public class TwitterAuthException extends TwitterException private static final long serialVersionUID 577033016879783994L public TwitterAuthException String detailMessage super detailMessage public TwitterAuthException String detailMessage Throwable throwable super detailMessage throwablepackage com twitter sdk android core import android os Parcel import android os Parcelable import com google gson annotations SerializedName public class TwitterAuthToken extends AuthToken implements Parcelable public static final Parcelable Creator TwitterAuthToken CREATOR new Parcelable Creator TwitterAuthToken public TwitterAuthToken createFromParcel Parcel in return new TwitterAuthToken in public TwitterAuthToken newArray int size return new TwitterAuthToken size SerializedName token public final String token SerializedName secret public final String secret public TwitterAuthToken String token String secret super this token token this secret secret for testing purposes TwitterAuthToken String token String secret long createdAt super createdAt this token token this secret secret private TwitterAuthToken Parcel in super this token in readString this secret in readString Override public boolean isExpired Twitter does not expire OAuth1a tokens return false Override public String toString final StringBuilder sb new StringBuilder append token append this token append secret append this secret return sb toString Override public int describeContents return 0 Override public void writeToParcel Parcel out int flags out writeString token out writeString secret Override public boolean equals Object o if this o return true if o instanceof TwitterAuthToken return false final TwitterAuthToken that TwitterAuthToken o if secret null secret equals that secret that secret null return false if token null token equals that token that token null return false return true Override public int hashCode int result token null token hashCode 0 result 31 result secret null secret hashCode 0 return resultpackage com twitter sdk android core internal import com google gson annotations SerializedName import com twitter sdk android core models Tweet import com twitter sdk android core models User import java util List import java util Map public class TwitterCollection public TwitterCollection Content contents Metadata metadata this contents contents this metadata metadata SerializedName objects public final Content contents SerializedName response public final Metadata metadata public static final class Content SerializedName tweets public final Map Long Tweet tweetMap SerializedName users public final Map Long User userMap public Content Map Long Tweet tweetMap Map Long User userMap this tweetMap tweetMap this userMap userMap public static final class Metadata public Metadata String timelineId Position position List TimelineItem timelines this timelineId timelineId this position position this timelineItems timelines SerializedName timeline id public final String timelineId SerializedName position public final Position position SerializedName timeline public final List TimelineItem timelineItems public static final class Position SerializedName min position public final Long minPosition SerializedName max position public final Long maxPosition public Position Long maxPosition Long minPosition this maxPosition maxPosition this minPosition minPosition public static class TimelineItem public TimelineItem TweetItem tweetItem this tweetItem tweetItem SerializedName tweet public final TweetItem tweetItem public static final class TweetItem public TweetItem Long id this id id SerializedName id public final Long idpackage com twitter sdk android core import android app Activity import io fabric sdk android Fabric import io fabric sdk android Kit import io fabric sdk android services network NetworkUtils import io fabric sdk android services persistence PreferenceStoreImpl import com twitter sdk android core identity TwitterAuthClient import com twitter sdk android core internal MigrationHelper import com twitter sdk android core internal SessionMonitor import com twitter sdk android core internal TwitterApi import com twitter sdk android core internal TwitterSessionVerifier import com twitter sdk android core internal oauth OAuth2Service import com twitter sdk android core internal scribe TwitterCoreScribeClientHolder import java util concurrent ConcurrentHashMap import javax net ssl SSLSocketFactory public class TwitterCore extends Kit Boolean public static final String TAG Twitter static final String PREF KEY ACTIVE TWITTER SESSION active twittersession static final String PREF KEY TWITTER SESSION twittersession static final String PREF KEY ACTIVE GUEST SESSION active guestsession static final String PREF KEY GUEST SESSION guestsession static final String SESSION PREF FILE NAME session store SessionManager TwitterSession twitterSessionManager SessionManager GuestSession guestSessionManager SessionMonitor TwitterSession sessionMonitor private final TwitterAuthConfig authConfig private final ConcurrentHashMap Session TwitterApiClient apiClients private volatile TwitterApiClient guestClient private volatile GuestSessionProvider guestSessionProvider private volatile SSLSocketFactory sslSocketFactory public TwitterCore TwitterAuthConfig authConfig this authConfig new ConcurrentHashMap Session TwitterApiClient null Testing only TwitterCore TwitterAuthConfig authConfig ConcurrentHashMap Session TwitterApiClient apiClients TwitterApiClient guestClient this authConfig authConfig this apiClients apiClients this guestClient guestClient public static TwitterCore getInstance checkInitialized return Fabric getKit TwitterCore class Override public String getVersion return BuildConfig VERSION NAME BuildConfig BUILD NUMBER public TwitterAuthConfig getAuthConfig return authConfig public SSLSocketFactory getSSLSocketFactory checkInitialized if sslSocketFactory null createSSLSocketFactory return sslSocketFactory private synchronized void createSSLSocketFactory if sslSocketFactory null try sslSocketFactory NetworkUtils getSSLSocketFactory new TwitterPinningInfoProvider getContext Fabric getLogger d TAG Custom SSL pinning enabled catch Exception e Fabric getLogger e TAG Exception setting up custom SSL pinning e Override protected boolean onPreExecute final MigrationHelper migrationHelper new MigrationHelper migrationHelper migrateSessionStore getContext getIdentifier getIdentifier SESSION PREF FILE NAME xml twitterSessionManager new PersistedSessionManager new PreferenceStoreImpl getContext SESSION PREF FILE NAME new TwitterSession Serializer PREF KEY ACTIVE TWITTER SESSION PREF KEY TWITTER SESSION guestSessionManager new PersistedSessionManager new PreferenceStoreImpl getContext SESSION PREF FILE NAME new GuestSession Serializer PREF KEY ACTIVE GUEST SESSION PREF KEY GUEST SESSION sessionMonitor new SessionMonitor twitterSessionManager getFabric getExecutorService new TwitterSessionVerifier return true Override protected Boolean doInBackground Trigger restoration of session twitterSessionManager getActiveSession guestSessionManager getActiveSession getSSLSocketFactory getGuestSessionProvider initializeScribeClient Monitor activity lifecycle after sessions have been restored Otherwise we would not have any sessions to monitor anyways sessionMonitor monitorActivityLifecycle getFabric getActivityLifecycleManager return true Override public String getIdentifier return BuildConfig GROUP BuildConfig ARTIFACT ID private static void checkInitialized if Fabric getKit TwitterCore class null throw new IllegalStateException Must start Twitter Kit with Fabric with first private void initializeScribeClient TwitterCoreScribeClientHolder initialize this getSessionManager getGuestSessionProvider getIdManager public void logIn Activity activity Callback TwitterSession callback checkInitialized new TwitterAuthClient authorize activity callback public void logOut checkInitialized final SessionManager TwitterSession sessionManager getSessionManager if sessionManager null sessionManager clearActiveSession public SessionManager TwitterSession getSessionManager checkInitialized return twitterSessionManager public GuestSessionProvider getGuestSessionProvider checkInitialized if guestSessionProvider null createGuestSessionProvider return guestSessionProvider private synchronized void createGuestSessionProvider if guestSessionProvider null final OAuth2Service service new OAuth2Service this getSSLSocketFactory new TwitterApi guestSessionProvider new GuestSessionProvider service guestSessionManager public TwitterApiClient getApiClient checkInitialized final TwitterSession session twitterSessionManager getActiveSession if session null return getGuestApiClient return getApiClient session public TwitterApiClient getApiClient TwitterSession session checkInitialized if apiClients containsKey session apiClients putIfAbsent session new TwitterApiClient session return apiClients get session public TwitterApiClient getGuestApiClient checkInitialized if guestClient null createGuestClient return guestClient private synchronized void createGuestClient if guestClient null guestClient new TwitterApiClientpackage com twitter sdk android core internal scribe import com twitter sdk android core GuestSessionProvider import com twitter sdk android core Session import com twitter sdk android core SessionManager import com twitter sdk android core TwitterAuthToken import com twitter sdk android core TwitterCore import io fabric sdk android services common IdManager public class TwitterCoreScribeClientHolder private static final String KIT NAME TwitterCore private static DefaultScribeClient instance public static DefaultScribeClient getScribeClient return instance public static void initialize TwitterCore kit SessionManager extends Session TwitterAuthToken sessionManagers GuestSessionProvider guestSessionProvider IdManager idManager instance new DefaultScribeClient kit KIT NAME sessionManagers guestSessionProvider idManagerpackage com twitter sdk android core import android app Activity import io fabric sdk android Fabric import io fabric sdk android FabricAndroidTestCase import io fabric sdk android FabricTestUtils import io fabric sdk android KitStub import java util Arrays import java util List import java util concurrent Callable import java util concurrent ExecutorService import java util concurrent Executors import java util concurrent Future import javax net ssl SSLSocketFactory import static org mockito Mockito mock import static org mockito Mockito when public class TwitterCoreTest extends FabricAndroidTestCase private static final String TWITTER NOT INIT ERROR MSG Must start Twitter Kit with Fabric with first private static final String FABRIC NOT INIT ERROR MSG Must Initialize Fabric before using singleton private TwitterCore twitterCore Override protected void setUp throws Exception super setUp twitterCore new TwitterCore new TwitterAuthConfig Override protected void tearDown throws Exception super tearDown FabricTestUtils resetFabric public void testLogOut noSdkStart try TwitterCore getInstance logOut fail Should fail if Fabric is not instantiated catch IllegalStateException ex assertEquals FABRIC NOT INIT ERROR MSG ex getMessage public void testLogOut sdkStartNoTwitterKit throws Exception FabricTestUtils with getContext new KitStub Result try TwitterCore getInstance logOut fail Should fail if Twitter is not instantiated with Fabric catch IllegalStateException ie assertEquals TWITTER NOT INIT ERROR MSG ie getMessage public void testLogIn noSdkStart final Callback TwitterSession mockCallback mock Callback class try TwitterCore getInstance logIn mock Activity class mockCallback fail Should fail if Fabric is not instantiated catch IllegalStateException ie assertEquals FABRIC NOT INIT ERROR MSG ie getMessage public void testLogIn sdkStartNoTwitterKit throws Exception FabricTestUtils with getContext new KitStub Result final Callback TwitterSession mockCallback mock Callback class try TwitterCore getInstance logIn mock Activity class mockCallback fail Should fail if Twitter is not instantiated with Fabric catch IllegalStateException ie assertEquals TWITTER NOT INIT ERROR MSG ie getMessage public void testGuestSessionManager noSdkStart try TwitterCore getInstance getGuestSessionProvider fail Should fail if Fabric is not instantiated catch IllegalStateException ie assertEquals FABRIC NOT INIT ERROR MSG ie getMessage public void testGuestSessionManager sdkStartNoTwitterKit throws Exception FabricTestUtils with getContext new KitStub Result try TwitterCore getInstance getGuestSessionProvider fail Should fail if Twitter is not instantiated with Fabric catch IllegalStateException ie assertEquals TWITTER NOT INIT ERROR MSG ie getMessage public void testGetIdentifier final String identifier BuildConfig GROUP BuildConfig ARTIFACT ID assertEquals identifier twitterCore getIdentifier public void testGetSSLSocketFactory noSdkStart try twitterCore getSSLSocketFactory fail Should fail if Fabric is not instantiated catch IllegalStateException ex assertEquals FABRIC NOT INIT ERROR MSG ex getMessage public void testGetSSLSocketFactory sdkStartNoTwitterKit throws Exception FabricTestUtils with getContext new KitStub Result try twitterCore getSSLSocketFactory fail Should fail if Twitter is not instantiated with Fabric catch IllegalStateException ex assertEquals TWITTER NOT INIT ERROR MSG ex getMessage public void testGetSessionManager throws Exception FabricTestUtils with getContext twitterCore assertNotNull twitterCore getSessionManager public void testGetSessionManager twitterNotInitialized throws Exception FabricTestUtils with getContext new KitStub try twitterCore getSessionManager fail Should fail if Twitter is not instantiated with Fabric catch IllegalStateException ex assertEquals TWITTER NOT INIT ERROR MSG ex getMessage public void testGetAppSessionManager throws Exception FabricTestUtils with getContext twitterCore assertNotNull twitterCore getGuestSessionProvider public void testGetAppSessionManager twitterNotInitialized throws Exception FabricTestUtils with getContext new KitStub try twitterCore getGuestSessionProvider fail Should fail if Twitter is not instantiated with Fabric catch IllegalStateException ex assertEquals TWITTER NOT INIT ERROR MSG ex getMessage public void testGetApiClient activeSessionExists throws Exception FabricTestUtils with getContext twitterCore twitterCore twitterSessionManager setUpSessionManager mock TwitterSession class assertNotNull twitterCore getApiClient public void testGetApiClient twitterNotInitialized throws Exception FabricTestUtils with getContext new KitStub Result try twitterCore getApiClient fail Should fail if Twitter is not instantiated with Fabric catch IllegalStateException ex assertEquals TWITTER NOT INIT ERROR MSG ex getMessage public void testGetApiClient withSession throws Exception FabricTestUtils with getContext twitterCore assertNotNull twitterCore getApiClient mock TwitterSession class public void testGetApiClient withSessionTwitterNotInitialized throws Exception FabricTestUtils with getContext new KitStub Result try twitterCore getApiClient mock TwitterSession class fail Should fail if Twitter is not instantiated with Fabric catch IllegalStateException ex assertEquals TWITTER NOT INIT ERROR MSG ex getMessage public void testGetGuestApiClient twitterNotInitialized throws Exception FabricTestUtils with getContext new KitStub Result try twitterCore getGuestApiClient fail Should fail if Twitter is not instantiated with Fabric catch IllegalStateException ex assertEquals TWITTER NOT INIT ERROR MSG ex getMessage private T extends Session SessionManager T setUpSessionManager T session final SessionManager T sessionManager mock SessionManager class when sessionManager getActiveSession thenReturn session return sessionManager public void testGetSSLSocketFactory contention throws Exception We don t want to use FabricTestUtils here because we want to test this when onBackground is also running Fabric with getContext twitterCore final List SSLSocketFactoryCallable callables Arrays asList new SSLSocketFactoryCallable twitterCore new SSLSocketFactoryCallable twitterCore final ExecutorService executorService Executors newFixedThreadPool callables size final List Future SSLSocketFactory socketFactories executorService invokeAll callables assertNotNull socketFactories get 0 get assertNotNull socketFactories get 1 get assertSame socketFactories get 0 get socketFactories get 1 get private static class SSLSocketFactoryCallable implements Callable SSLSocketFactory private TwitterCore twitter protected SSLSocketFactoryCallable TwitterCore twitter this twitter twitter Override public SSLSocketFactory call return twitter getSSLSocketFactorypackage com twitter sdk android core import java util concurrent ConcurrentHashMap public final class TwitterCoreTestUtils private TwitterCoreTestUtils public static TwitterCore createTwitterCore TwitterAuthConfig authConfig ConcurrentHashMap Session TwitterApiClient clients TwitterApiClient guestClient return new TwitterCore authConfig clients guestClientpackage com twitter sdk android core public class TwitterException extends RuntimeException public TwitterException String detailMessage super detailMessage public TwitterException String detailMessage Throwable throwable super detailMessage throwablepackage com twitter sdk android unity import android app Activity import android content Intent import android net Uri import com google gson Gson import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterSession import com twitter sdk android core TwitterSessionHelper import com twitter sdk android tweetcomposer Card import com twitter sdk android tweetcomposer ComposerActivity import com unity3d player UnityPlayer public class TwitterKit public static final String GAME OBJECT NAME TwitterGameObject public static final String EXTRA TWITTER SESSION EXTRA TWITTER SESSION public static void login final Activity currentActivity UnityPlayer currentActivity final Intent intent new Intent currentActivity LoginActivity class currentActivity startActivity intent public static void requestEmail String session final Activity currentActivity UnityPlayer currentActivity final Intent intent new Intent currentActivity RequestEmailActivity class intent putExtra EXTRA TWITTER SESSION session currentActivity startActivity intent public static void logout TwitterCore getInstance logOut public static String session final TwitterSession session TwitterCore getInstance getSessionManager getActiveSession return TwitterSessionHelper serialize session public static void compose String session String config String hashtags final Activity currentActivity UnityPlayer currentActivity final CardConfig cardConfig new Gson fromJson config CardConfig class final Card card new Card AppCardBuilder currentActivity imageUri Uri parse cardConfig imageUri googlePlayId cardConfig appGooglePlayId iPadId cardConfig appIPadId iPhoneId cardConfig appIPhoneId build final Intent intent new ComposerActivity Builder currentActivity session TwitterSessionHelper deserialize session card card hashtags hashtags createIntent currentActivity startActivity intent static class CardConfig final public String appIPhoneId final public String appIPadId final public String appGooglePlayId final public String imageUri CardConfig String imageUri String appGooglePlayId String appIPadId String appIPhoneId this imageUri imageUri this appGooglePlayId appGooglePlayId this appIPadId appIPadId this appIPhoneId appIPhoneIdpackage com twitter sdk android tweetui import com twitter sdk android core Callback import com twitter sdk android core TwitterCore import com twitter sdk android core models Tweet import java util List import retrofit2 Call public class TwitterListTimeline extends BaseTimeline implements Timeline Tweet private static final String SCRIBE SECTION list final Long listId final String slug final String ownerScreenName final Long ownerId final Integer maxItemsPerRequest final Boolean includeRetweets TwitterListTimeline TweetUi tweetUi Long listId String slug Long ownerId String ownerScreenName Integer maxItemsPerRequest Boolean includeRetweets super tweetUi this listId listId this slug slug this ownerId ownerId this ownerScreenName ownerScreenName this maxItemsPerRequest maxItemsPerRequest this includeRetweets includeRetweets Override public void next Long sinceId Callback TimelineResult Tweet cb createListTimelineRequest sinceId null enqueue new TweetsCallback cb Override public void previous Long maxId Callback TimelineResult Tweet cb lists statuses api provides results which are inclusive of the maxId decrement the maxId to get exclusive results createListTimelineRequest null decrementMaxId maxId enqueue new TweetsCallback cb Call List Tweet createListTimelineRequest final Long sinceId final Long maxId return TwitterCore getInstance getApiClient getListService statuses listId slug ownerScreenName ownerId sinceId maxId maxItemsPerRequest true includeRetweets Override String getTimelineType return SCRIBE SECTION public static class Builder private final TweetUi tweetUi private Long listId private String slug private Long ownerId private String ownerScreenName private Integer maxItemsPerRequest 30 private Boolean includeRetweets public Builder this TweetUi getInstance public Builder TweetUi tweetUi if tweetUi null throw new IllegalArgumentException TweetUi instance must not be null this tweetUi tweetUi public Builder id Long id this listId id return this public Builder slugWithOwnerId String slug Long ownerId this slug slug this ownerId ownerId return this public Builder slugWithOwnerScreenName String slug String ownerScreenName this slug slug this ownerScreenName ownerScreenName return this public Builder maxItemsPerRequest Integer maxItemsPerRequest this maxItemsPerRequest maxItemsPerRequest return this public Builder includeRetweets Boolean includeRetweets this includeRetweets includeRetweets return this public TwitterListTimeline build user must provide either an id or slug not both if listId null slug null throw new IllegalStateException must specify either a list id or slug owner pair user provides a slug but ownerId and ownerScreenName are null if slug null ownerId null ownerScreenName null throw new IllegalStateException slug owner pair must set owner via ownerId or ownerScreenName return new TwitterListTimeline tweetUi listId slug ownerId ownerScreenName maxItemsPerRequest includeRetweetspackage com twitter sdk android core identity import android app Activity import android annotation TargetApi import android content Context import android content Intent import android content res Resources import android graphics Typeface import android os Build import android util AttributeSet import android util TypedValue import android view View import android widget Button import com twitter sdk android core Callback import com twitter sdk android core R import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterSession import io fabric sdk android Fabric import java lang ref WeakReference import io fabric sdk android services common CommonUtils public class TwitterLoginButton extends Button final static String TAG TwitterCore TAG static final String ERROR MSG NO ACTIVITY TwitterLoginButton requires an activity Override getActivity to provide the activity for this button final WeakReference Activity activityRef volatile TwitterAuthClient authClient OnClickListener onClickListener Callback TwitterSession callback public TwitterLoginButton Context context this context null public TwitterLoginButton Context context AttributeSet attrs this context attrs android R attr buttonStyle public TwitterLoginButton Context context AttributeSet attrs int defStyle this context attrs defStyle null TwitterLoginButton Context context AttributeSet attrs int defStyle TwitterAuthClient authClient super context attrs defStyle this activityRef new WeakReference getActivity this authClient authClient setupButton checkTwitterCoreAndEnable TargetApi Build VERSION CODES LOLLIPOP private void setupButton final Resources res getResources super setCompoundDrawablesWithIntrinsicBounds res getDrawable R drawable tw ic logo default null null null super setCompoundDrawablePadding res getDimensionPixelSize R dimen tw login btn drawable padding super setText R string tw login btn txt super setTextColor res getColor R color tw solid white super setTextSize TypedValue COMPLEX UNIT PX res getDimensionPixelSize R dimen tw login btn text size super setTypeface Typeface DEFAULT BOLD super setPadding res getDimensionPixelSize R dimen tw login btn left padding 0 res getDimensionPixelSize R dimen tw login btn right padding 0 super setBackgroundResource R drawable tw login btn super setOnClickListener new LoginClickListener if Build VERSION SDK INT Build VERSION CODES LOLLIPOP super setAllCaps false public void setCallback Callback TwitterSession callback if callback null throw new IllegalArgumentException Callback cannot be null this callback callback public Callback TwitterSession getCallback return callback public void onActivityResult int requestCode int resultCode Intent data if requestCode getTwitterAuthClient getRequestCode getTwitterAuthClient onActivityResult requestCode resultCode data protected Activity getActivity if getContext instanceof Activity return Activity getContext else if isInEditMode return null else throw new IllegalStateException ERROR MSG NO ACTIVITY Override public void setOnClickListener OnClickListener onClickListener this onClickListener onClickListener private class LoginClickListener implements OnClickListener Override public void onClick View view checkCallback callback checkActivity activityRef get getTwitterAuthClient authorize activityRef get callback if onClickListener null onClickListener onClick view private void checkCallback Callback callback if callback null CommonUtils logOrThrowIllegalStateException TwitterCore TAG Callback must not be null did you call setCallback private void checkActivity Activity activity if activity null activity isFinishing CommonUtils logOrThrowIllegalStateException TwitterCore TAG ERROR MSG NO ACTIVITY TwitterAuthClient getTwitterAuthClient if authClient null synchronized TwitterLoginButton class if authClient null authClient new TwitterAuthClient return authClient private void checkTwitterCoreAndEnable Default Enabled in edit mode if isInEditMode return try TwitterCore getInstance catch IllegalStateException ex Disable if TwitterCore hasn t started Fabric getLogger e TAG ex getMessage setEnabled falsepackage com twitter sdk android core identity import android app Activity import android content Intent import android util Log import android view View import io fabric sdk android Fabric import io fabric sdk android FabricAndroidTestCase import io fabric sdk android FabricTestUtils import io fabric sdk android KitStub import io fabric sdk android Logger import com twitter sdk android core Callback import com twitter sdk android core TwitterAuthConfig import com twitter sdk android core TwitterCore import com twitter sdk android core TwitterSession import org mockito ArgumentCaptor import static org mockito Mockito public class TwitterLoginButtonTest extends FabricAndroidTestCase private static final int TEST REQUEST CODE 100 private Activity mockActivity private TwitterAuthClient mockAuthClient private Callback TwitterSession mockCallback private View OnClickListener mockViewClickListener private TwitterLoginButton loginButton Override protected void setUp throws Exception super setUp mockActivity mock Activity class mockAuthClient mock TwitterAuthClient class when mockAuthClient getRequestCode thenReturn TEST REQUEST CODE doNothing when mockAuthClient authorize any Activity class any Callback class doNothing when mockAuthClient onActivityResult anyInt anyInt any Intent class mockCallback mock Callback class mockViewClickListener mock View OnClickListener class loginButton new TwitterLoginButton getContext null 0 mockAuthClient This is to allow us to test TwitterLoginButton without having to set up a real activity Override protected Activity getActivity return mockActivity public void testConstructor contextNotActivity try loginButton new TwitterLoginButton getContext null 0 mockAuthClient fail Constructor should throw an exception when provided context is not an activity catch IllegalStateException e assertEquals TwitterLoginButton ERROR MSG NO ACTIVITY e getMessage public void testConstructor contextNotActivityEditModeTrue loginButton new TwitterLoginButton getContext null 0 mockAuthClient Override public boolean isInEditMode return true assertNull loginButton getActivity public void testConstructor nullTwitterAuthClient final TwitterLoginButton button new TwitterLoginButton getContext Override protected Activity getActivity return mock Activity class assertNull button authClient public void testConstructor editMode throws Exception final TwitterLoginButton button new TwitterLoginButton getContext Override protected Activity getActivity return mock Activity class Override public boolean isInEditMode return true assertTrue button isEnabled public void testConstructor twitterNotStarted throws Exception try final Fabric fabric new Fabric Builder getContext debuggable true logger mock Logger class kits new KitStub build FabricTestUtils with fabric final TwitterLoginButton button new TwitterLoginButton getContext Override protected Activity getActivity return mock Activity class final Logger logger Fabric getLogger verify logger e eq TwitterLoginButton TAG eq Must start Twitter Kit with Fabric with first assertFalse button isEnabled finally FabricTestUtils resetFabric public void testConstructor twitterStarted throws Exception try final Fabric fabric new Fabric Builder getContext debuggable true kits new TwitterCore new TwitterAuthConfig logger mock Logger class build FabricTestUtils with fabric final TwitterLoginButton button new TwitterLoginButton getContext Override protected Activity getActivity return mock Activity class final Logger logger Fabric getLogger verify logger never e eq TwitterLoginButton TAG eq Must start Twitter Kit with Fabric with first assertTrue button isEnabled finally FabricTestUtils resetFabric public void testSetCallback callbackNull try loginButton setCallback null fail setCallback should throw an exception when called with null callback catch IllegalArgumentException e assertEquals Callback cannot be null e getMessage public void testGetCallback final Callback TwitterSession mockCallback mock Callback class loginButton setCallback mockCallback assertSame mockCallback loginButton getCallback public void testOnClick loginButton setCallback mockCallback loginButton performClick verify mockAuthClient authorize eq mockActivity eq mockCallback public void testOnClick withOnClickListener loginButton setCallback mockCallback loginButton setOnClickListener mockViewClickListener loginButton performClick verify mockAuthClient authorize eq mockActivity eq mockCallback verify mockViewClickListener onClick eq loginButton public void testOnClick callbackNullDebuggableTrue throws Exception final Fabric fabric new Fabric Builder getContext kits new KitStub debuggable true build FabricTestUtils with fabric try loginButton performClick fail onClick should throw an exception when called and there is no callback catch IllegalStateException e assertEquals Callback must not be null did you call setCallback e getMessage finally FabricTestUtils resetFabric public void testOnClick callbackNullDebuggableFalse throws Exception final Fabric fabric setUpLogTest FabricTestUtils with fabric try loginButton performClick assertLogMessage Callback must not be null did you call setCallback finally FabricTestUtils resetFabric public void testOnClick activityNullDebuggableTrue throws Exception final Fabric fabric new Fabric Builder getContext kits new KitStub debuggable true build FabricTestUtils with fabric loginButton new TwitterLoginButton getContext null 0 mockAuthClient This is to allow us to test TwitterLoginButton without having to set up a real activity Override protected Activity getActivity return null loginButton setCallback mockCallback try loginButton performClick fail onClick should throw an exception when called and there is no activity catch IllegalStateException e assertEquals TwitterLoginButton ERROR MSG NO ACTIVITY e getMessage finally FabricTestUtils resetFabric public void testOnClick activityNullDebuggableFalse throws Exception final Fabric fabric setUpLogTest FabricTestUtils with fabric loginButton new TwitterLoginButton getContext null 0 mockAuthClient This is to allow us to test TwitterLoginButton without having to set up a real activity Override protected Activity getActivity return null loginButton setCallback mockCallback try loginButton performClick assertLogMessage TwitterLoginButton ERROR MSG NO ACTIVITY finally FabricTestUtils resetFabric public void testOnClick activityFinishingDebuggableFalse throws Exception final Fabric fabric setUpLogTest FabricTestUtils with fabric loginButton new TwitterLoginButton getContext null 0 mockAuthClient This is to allow us to test TwitterLoginButton without having to set up a real activity Override protected Activity getActivity final Activity mockActivity mock Activity class when mockActivity isFinishing thenReturn true return mockActivity loginButton setCallback mockCallback try loginButton performClick assertLogMessage TwitterLoginButton ERROR MSG NO ACTIVITY finally FabricTestUtils resetFabric private Fabric setUpLogTest final Logger mockLogger mock Logger class when mockLogger isLoggable TwitterCore TAG Log WARN thenReturn true final Fabric fabric new Fabric Builder getContext kits new KitStub debuggable false logger mockLogger build return fabric private void assertLogMessage String expectedMessage final ArgumentCaptor String argumentCaptor ArgumentCaptor forClass String class verify Fabric getLogger w eq TwitterCore TAG argumentCaptor capture assertEquals expectedMessage argumentCaptor getValue public void testOnActivityResult requestCodeMatches final int requestCode TEST REQUEST CODE final int resultCode Activity RESULT OK final Intent mockData mock Intent class loginButton onActivityResult requestCode resultCode mockData verify mockAuthClient getRequestCode verify mockAuthClient onActivityResult requestCode resultCode mockData public void testOnActivityResult requestCodeDoesNotMatch final int requestCode 1 final int resultCode Activity RESULT OK final Intent mockData mock Intent class loginButton onActivityResult requestCode resultCode mockData verify mockAuthClient getRequestCode verifyNoMoreInteractions mockAuthClient public void testGetTwitterAuthClient throws Exception try final Fabric fabric new Fabric Builder getContext kits new TwitterCore new TwitterAuthConfig build FabricTestUtils with fabric final TwitterLoginButton button new TwitterLoginButton getContext Override protected Activity getActivity return mock Activity class final TwitterAuthClient client button getTwitterAuthClient assertNotNull client finally FabricTestUtils resetFabric public void testGetTwitterAuthClient duplicateCalls throws Exception try final Fabric fabric new Fabric Builder getContext kits new TwitterCore new TwitterAuthConfig build FabricTestUtils with fabric final TwitterLoginButton button new TwitterLoginButton getContext Override protected Activity getActivity return mock Activity class final TwitterAuthClient client button getTwitterAuthClient final TwitterAuthClient client2 button getTwitterAuthClient assertSame client client2 finally FabricTestUtils resetFabricpackage com twitter sdk android mopub import android app Activity import android support annotation NonNull import android support annotation Nullable import android text TextUtils import android widget Adapter import com mopub nativeads MoPubAdAdapter import com mopub nativeads MoPubNativeAdPositioning import com mopub nativeads RequestParameters public class TwitterMoPubAdAdapter extends MoPubAdAdapter private final static String TWITTERKIT KEYWORD src twitterkit public TwitterMoPubAdAdapter Activity activity Adapter originalAdapter super activity originalAdapter public TwitterMoPubAdAdapter Activity activity Adapter originalAdapter MoPubNativeAdPositioning MoPubServerPositioning adPositioning super activity originalAdapter adPositioning public TwitterMoPubAdAdapter Activity activity Adapter originalAdapter MoPubNativeAdPositioning MoPubClientPositioning adPositioning super activity originalAdapter adPositioning Override public void loadAds NonNull final String adUnitId loadAds adUnitId null Override public void loadAds NonNull final String adUnitId Nullable final RequestParameters requestParams final RequestParameters Builder builder new RequestParameters Builder if requestParams null final String keywords TextUtils isEmpty requestParams getKeywords TWITTERKIT KEYWORD requestParams getKeywords TWITTERKIT KEYWORD builder keywords keywords builder location requestParams getLocation else builder keywords TWITTERKIT KEYWORD super loadAds adUnitId builder buildpackage com twitter sdk android core import android content Context import io fabric sdk android services network PinningInfoProvider import java io InputStream import java util Collection import java util HashMap class TwitterPinningInfoProvider implements PinningInfoProvider private static final String PINS static final HashMap String String pinMap new HashMap pinMap put VERISIGN CLASS1 2343d148a255899b947d461a797ec04cfed170b7 pinMap put VERISIGN CLASS1 G3 5519b278acb281d7eda7abc18399c3bb690424b5 pinMap put VERISIGN CLASS2 G2 1237ba4517eead2926fdc1cdfebeedf2ded9145c pinMap put VERISIGN CLASS2 G3 5abec575dcaef3b08e271943fc7f250c3df661e3 pinMap put VERISIGN CLASS3 G2 1a21b4952b6293ce18b365ec9c0e934cb381e6d4 pinMap put VERISIGN CLASS3 G3 22f19e2ec6eaccfc5d2346f4c2e8f6c554dd5e07 pinMap put VERISIGN CLASS3 G4 ed663135d31bd4eca614c429e319069f94c12650 pinMap put VERISIGN CLASS3 G5 b181081a19a4c0941ffae89528c124c99b34acc7 pinMap put VERISIGN CLASS4 G3 3c03436868951cf3692ab8b426daba8fe922e5bd pinMap put VERISIGN UNIVERSAL bbc23e290bb328771dad3ea24dbdf423bd06b03d pinMap put GEOTRUST GLOBAL c07a98688d89fbab05640c117daa7d65b8cacc4e pinMap put GEOTRUST GLOBAL2 713836f2023153472b6eba6546a9101558200509 pinMap put GEOTRUST PRIMARY b01989e7effb4aafcb148f58463976224150e1ba pinMap put GEOTRUST PRIMARY G2 bdbea71bab7157f9e475d954d2b727801a822682 pinMap put GEOTRUST PRIMARY G3 9ca98d00af740ddd8180d21345a58b8f2e9438d6 pinMap put GEOTRUST UNIVERAL 87e85b6353c623a3128cb0ffbbf551fe59800e22 pinMap put GEOTRUST UNIVERSAL2 5e4f538685dd4f9eca5fdc0d456f7d51b1dc9b7b pinMap put DIGICERT GLOBAL ROOT d52e13c1abe349dae8b49594ef7c3843606466bd pinMap put DIGICERT EV ROOT 83317e62854253d6d7783190ec919056e991b9e3 pinMap put DIGICERT ASSUREDID ROOT 68330e61358521592983a3c8d2d2e1406e7ab3c1 pinMap put TWITTER1 56fef3c2147d4ed38837fdbd3052387201e5778d final Collection String values pinMap values PINS values toArray new String values size private final Context appContext public TwitterPinningInfoProvider Context context appContext context getApplicationContext Override public InputStream getKeyStoreStream return appContext getResources openRawResource R raw tw cacerts Override public String getKeyStorePassword keystore required to have a password but these certificates are public return changeit Override public String getPins return PINS Override public long getPinCreationTimeInMillis return BuildConfig BUILD TIMEpackage com twitter sdk android core import okhttp3 Headers public class TwitterRateLimit private final static String LIMIT KEY x rate limit limit private final static String REMAINING KEY x rate limit remaining private final static String RESET KEY x rate limit reset private int requestLimit private int remainingRequest private long resetSeconds TwitterRateLimit final Headers headers if headers null throw new IllegalArgumentException headers must not be null for int i 0 i headers size i if LIMIT KEY equals headers name i requestLimit Integer valueOf headers value i else if REMAINING KEY equals headers name i remainingRequest Integer valueOf headers value i else if RESET KEY equals headers name i resetSeconds Long valueOf headers value i public int getLimit return requestLimit public int getRemaining return remainingRequest public long getReset return resetSecondspackage com twitter sdk android core import android text TextUtils import io fabric sdk android Fabric import io fabric sdk android services persistence SerializationStrategy import com google gson annotations SerializedName import com google gson Gson public class TwitterSession extends Session TwitterAuthToken public static final long UNKNOWN USER ID 1L public static final String UNKNOWN USER NAME SerializedName user name private final String userName public TwitterSession TwitterAuthToken authToken long userId String userName super authToken userId this userName userName public long getUserId return getId public String getUserName return userName Override public boolean equals Object o if this o return true if o null getClass o getClass return false if super equals o return false final TwitterSession that TwitterSession o return userName null userName equals that userName that userName null Override public int hashCode int result super hashCode result 31 result userName null userName hashCode 0 return result static class Serializer implements SerializationStrategy TwitterSession private final Gson gson public Serializer this gson new Gson Override public String serialize TwitterSession session if session null session getAuthToken null try return gson toJson session catch Exception e Fabric getLogger d TwitterCore TAG e getMessage return Override public TwitterSession deserialize String serializedSession if TextUtils isEmpty serializedSession try return gson fromJson serializedSession TwitterSession class catch Exception e Fabric getLogger d TwitterCore TAG e getMessage return nullpackage com twitter sdk android core public class TwitterSessionHelper public static String serialize TwitterSession session final TwitterSession Serializer serializer new TwitterSession Serializer return serializer serialize session public static TwitterSession deserialize String session final TwitterSession Serializer serializer new TwitterSession Serializer return serializer deserialize sessionpackage com twitter sdk android core internal import com twitter sdk android core TwitterApiClient import com twitter sdk android core TwitterSession import com twitter sdk android core internal scribe DefaultScribeClient import com twitter sdk android core internal scribe EventNamespace import com twitter sdk android core internal scribe TwitterCoreScribeClientHolder import com twitter sdk android core services AccountService import java io IOException public class TwitterSessionVerifier implements SessionVerifier TwitterSession static final String SCRIBE CLIENT android static final String SCRIBE PAGE credentials static final String SCRIBE SECTION intentionally blank static final String SCRIBE COMPONENT intentionally blank static final String SCRIBE ELEMENT intentionally blank static final String SCRIBE ACTION impression private final AccountServiceProvider accountServiceProvider private final DefaultScribeClient scribeClient public TwitterSessionVerifier this accountServiceProvider new AccountServiceProvider this scribeClient TwitterCoreScribeClientHolder getScribeClient TwitterSessionVerifier AccountServiceProvider accountServiceProvider DefaultScribeClient scribeClient this accountServiceProvider accountServiceProvider this scribeClient scribeClient public void verifySession final TwitterSession session final AccountService accountService accountServiceProvider getAccountService session try scribeVerifySession accountService verifyCredentials true false execute catch IOException RuntimeException e We ignore failures since we will attempt the verification again the next time the verification period comes up This has the potential to lose events but we are not aiming towards 100 capture rate private void scribeVerifySession if scribeClient null return final EventNamespace ns new EventNamespace Builder setClient SCRIBE CLIENT setPage SCRIBE PAGE setSection SCRIBE SECTION setComponent SCRIBE COMPONENT setElement SCRIBE ELEMENT setAction SCRIBE ACTION builder scribeClient scribe ns protected static class AccountServiceProvider public AccountService getAccountService TwitterSession session return new TwitterApiClient session getAccountServicepackage com twitter sdk android mopub import android content Context import android content res TypedArray import android graphics drawable Drawable import android graphics drawable GradientDrawable import android graphics drawable LayerDrawable import android graphics drawable ShapeDrawable import android graphics drawable StateListDrawable import android graphics drawable shapes RectShape import android os Build import android util AttributeSet import android view LayoutInflater import android widget FrameLayout import android widget ImageView import android widget LinearLayout import android widget RelativeLayout import android widget TextView import com twitter sdk android mopub internal RoundedImageView public class TwitterStaticNativeAd extends FrameLayout LinearLayout containerLayout RoundedImageView mainImageView RelativeLayout cardLayout ImageView adIconView TextView adTitleView TextView adTextView TextView callToActionView ImageView privacyInfoView style colors int containerBackgroundColor int cardBackgroundColor int primaryTextColor int ctaBackgroundColor int cardBorderColor private static final int DEFAULT AD STYLE R style tw ad LightStyle public TwitterStaticNativeAd Context context this context null public TwitterStaticNativeAd Context context AttributeSet attrs this context attrs DEFAULT AD STYLE public TwitterStaticNativeAd Context context AttributeSet attrs int styleResId super context attrs findSubviews initAttributes styleResId setStyleAttributes private void findSubviews LayoutInflater from getContext inflate R layout tw native ad this true containerLayout LinearLayout findViewById R id tw ad mopub layout mainImageView RoundedImageView findViewById R id native ad main image cardLayout RelativeLayout findViewById R id native ad card adIconView ImageView findViewById R id native ad icon image adTitleView TextView findViewById R id native ad title adTextView TextView findViewById R id native ad text callToActionView TextView findViewById R id native ad cta privacyInfoView ImageView findViewById R id native ad privacy info icon image private void initAttributes int styleResId final TypedArray a getContext getTheme obtainStyledAttributes styleResId R styleable tw native ad try readStyleAttributes a finally a recycle private void readStyleAttributes TypedArray typedArray containerBackgroundColor typedArray getColor R styleable tw native ad tw ad container bg color getResources getColor R color tw ad light container bg color cardBackgroundColor typedArray getColor R styleable tw native ad tw ad card bg color getResources getColor R color tw ad light card bg color primaryTextColor typedArray getColor R styleable tw native ad tw ad text primary color getResources getColor R color tw ad light text primary color ctaBackgroundColor typedArray getColor R styleable tw native ad tw ad cta button color getResources getColor R color tw ad cta default private void setStyleAttributes containerLayout setBackgroundColor containerBackgroundColor adTitleView setTextColor primaryTextColor adTextView setTextColor primaryTextColor final int adViewRadius int getResources getDimension R dimen tw ad view radius mainImageView setCornerRadii adViewRadius adViewRadius 0 0 final TextView privacyTextView TextView findViewById R id native ad privacy text privacyTextView setTextColor ColorUtils calculateContrastingColor containerBackgroundColor setCardStyling setCallToActionStyling private void setCardStyling final boolean isLightBg ColorUtils isLightColor containerBackgroundColor if isLightBg cardBorderColor getResources getColor R color tw ad light card border color else cardBorderColor getResources getColor R color tw ad dark card border color final ShapeDrawable bgDrawable new ShapeDrawable new RectShape bgDrawable getPaint setColor cardBackgroundColor final ShapeDrawable borderDrawable new ShapeDrawable new RectShape borderDrawable getPaint setColor cardBorderColor final Drawable layers new Drawable 2 layers 0 borderDrawable layers 1 bgDrawable final LayerDrawable layerDrawable new LayerDrawable layers layerDrawable setLayerInset 0 0 0 0 0 layerDrawable setLayerInset 1 1 0 1 0 if Build VERSION SDK INT Build VERSION CODES JELLY BEAN cardLayout setBackground layerDrawable else cardLayout setBackgroundDrawable layerDrawable private void setCallToActionStyling final int calculatedCTATextColor ColorUtils calculateCtaTextColor ctaBackgroundColor callToActionView setTextColor calculatedCTATextColor Setup StateListDrawable obj with two gradient drawables First is the selected item with lighter darker bg color of original Second is unselected item with the call to action background color Also set the default ad view radius for bottomLeft and bottomRight corners final StateListDrawable stateListDrawable new StateListDrawable final int adViewRadius int getResources getDimension R dimen tw ad view radius final float ctaViewRadii new float 0 0 0 0 adViewRadius adViewRadius adViewRadius adViewRadius final GradientDrawable selectedItem new GradientDrawable selectedItem setCornerRadii ctaViewRadii final int ctaPressedBgColor ColorUtils calculateCtaOnTapColor ctaBackgroundColor selectedItem setColor ctaPressedBgColor stateListDrawable addState new int android R attr state pressed selectedItem final GradientDrawable unselectedItem new GradientDrawable unselectedItem setCornerRadii ctaViewRadii unselectedItem setColor ctaBackgroundColor stateListDrawable addState new int unselectedItem if Build VERSION SDK INT Build VERSION CODES JELLY BEAN callToActionView setBackground stateListDrawable else callToActionView setBackgroundDrawable stateListDrawablepackage com twitter sdk android mopub import android app Activity import android view View import android view ViewGroup import com mopub nativeads BaseNativeAd import com mopub nativeads MoPubAdRenderer import com mopub nativeads NativeImageHelper import com mopub nativeads NativeRendererHelper import com mopub nativeads StaticNativeAd public class TwitterStaticNativeAdRenderer implements MoPubAdRenderer StaticNativeAd private static final int DEFAULT STYLE R style tw ad LightStyle private final int styleResId public TwitterStaticNativeAdRenderer this styleResId DEFAULT STYLE public TwitterStaticNativeAdRenderer int styleResId this styleResId styleResId Override public View createAdView final Activity activity final ViewGroup parent return new TwitterStaticNativeAd activity null styleResId Override public void renderAdView final View view final StaticNativeAd staticNativeAd update TwitterStaticNativeAd view staticNativeAd Override public boolean supports final BaseNativeAd nativeAd return nativeAd instanceof StaticNativeAd private void update final TwitterStaticNativeAd staticNativeView final StaticNativeAd staticNativeAd NativeRendererHelper addTextView staticNativeView adTitleView staticNativeAd getTitle NativeRendererHelper addTextView staticNativeView adTextView staticNativeAd getText NativeRendererHelper addTextView staticNativeView callToActionView staticNativeAd getCallToAction NativeImageHelper loadImageView staticNativeAd getMainImageUrl staticNativeView mainImageView NativeImageHelper loadImageView staticNativeAd getIconImageUrl staticNativeView adIconView NativeRendererHelper addPrivacyInformationIcon staticNativeView privacyInfoView staticNativeAd getPrivacyInformationIconImageUrl staticNativeAd getPrivacyInformationIconClickThroughUrlpackage com twitter sdk android mopub import android graphics Bitmap import android graphics drawable Drawable import android view View import android view ViewGroup import android widget ImageView import android widget TextView import com mopub nativeads BaseNativeAd import com mopub nativeads MoPubCustomEventVideoNative import com mopub nativeads StaticNativeAd import com mopub network MaxWidthImageLoader import com mopub network Networking import com mopub volley toolbox ImageLoader import com twitter sdk android mopub internal RoundedImageView import org junit Before import org junit Rule import org junit Test import org junit rules ExpectedException import org junit runner RunWith import org mockito Mock import org mockito MockitoAnnotations import org mockito invocation InvocationOnMock import org mockito stubbing Answer import org robolectric RobolectricGradleTestRunner import org robolectric RuntimeEnvironment import org robolectric annotation Config import static org junit Assert assertFalse import static org junit Assert assertTrue import static org mockito Matchers any import static org mockito Matchers anyString import static org mockito Mockito doAnswer import static org mockito Mockito doReturn import static org mockito Mockito mock import static org mockito Mockito verify RunWith RobolectricGradleTestRunner class Config constants BuildConfig class sdk 21 public class TwitterStaticNativeAdRendererTest private static final String TEST TITLE title private static final String TEST TEXT text private static final String TEST CTA cta private static final String TEST URL https twitter com private TwitterStaticNativeAdRenderer twitterStaticNativeAdRenderer private StaticNativeAd staticNativeAd private TwitterStaticNativeAd twitterStaticNativeAd Mock private ViewGroup viewGroup Mock private MaxWidthImageLoader mockImageLoader Mock private ImageLoader ImageContainer mockImageContainer Mock private Bitmap mockBitmap Rule public ExpectedException thrown ExpectedException none Before public void setUp throws Exception MockitoAnnotations initMocks this Networking setImageLoaderForTesting mockImageLoader doReturn mockBitmap when mockImageContainer getBitmap doAnswer new Answer Void Override public Void answer InvocationOnMock invocation throws Throwable final Object args invocation getArguments ImageLoader ImageListener args 1 onResponse mockImageContainer true return null when mockImageLoader get anyString any ImageLoader ImageListener class twitterStaticNativeAdRenderer new TwitterStaticNativeAdRenderer twitterStaticNativeAd new TwitterStaticNativeAd RuntimeEnvironment application twitterStaticNativeAd adTextView mock TextView class twitterStaticNativeAd adTitleView mock TextView class twitterStaticNativeAd callToActionView mock TextView class twitterStaticNativeAd mainImageView mock RoundedImageView class twitterStaticNativeAd adIconView mock ImageView class twitterStaticNativeAd privacyInfoView mock ImageView class staticNativeAd new StaticNativeAd staticNativeAd setTitle TEST TITLE staticNativeAd setText TEST TEXT staticNativeAd setCallToAction TEST CTA staticNativeAd setClickDestinationUrl TEST URL staticNativeAd setMainImageUrl TEST URL staticNativeAd setIconImageUrl TEST URL Test expected NullPointerException class public void testCreateAdView withNullContext shouldThrowNPE twitterStaticNativeAdRenderer createAdView null viewGroup Test expected NullPointerException class public void testRenderAdView withNullView shouldThrowNPE twitterStaticNativeAdRenderer renderAdView null staticNativeAd Test expected NullPointerException class public void testRenderAdView withNullNativeAd shouldThrowNPE twitterStaticNativeAdRenderer renderAdView twitterStaticNativeAd null Test public void testRenderAdView shouldReturnPopulatedView twitterStaticNativeAdRenderer renderAdView twitterStaticNativeAd staticNativeAd verify twitterStaticNativeAd adTitleView setText TEST TITLE verify twitterStaticNativeAd adTextView setText TEST TEXT verify twitterStaticNativeAd callToActionView setText TEST CTA verify twitterStaticNativeAd mainImageView setImageBitmap mockBitmap verify twitterStaticNativeAd adIconView setImageBitmap mockBitmap verify twitterStaticNativeAd privacyInfoView setImageDrawable any Drawable class verify twitterStaticNativeAd privacyInfoView setOnClickListener any View OnClickListener class Test public void testSupports withCorrectInstanceOfBaseNativeAd shouldReturnTrue throws Exception assertTrue twitterStaticNativeAdRenderer supports new StaticNativeAd assertFalse twitterStaticNativeAdRenderer supports mock BaseNativeAd class assertFalse twitterStaticNativeAdRenderer supports mock MoPubCustomEventVideoNative MoPubVideoNativeAd classpackage com twitter sdk android mopub import android test AndroidTestCase import org junit Test import org junit runner RunWith import org robolectric RobolectricGradleTestRunner import org robolectric RuntimeEnvironment import org robolectric annotation Config RunWith RobolectricGradleTestRunner class Config constants BuildConfig class sdk 21 public class TwitterStaticNativeAdTest extends AndroidTestCase Test public void testStyleAttrsForDefaultTheme final TwitterStaticNativeAd nativeAd new TwitterStaticNativeAd RuntimeEnvironment application final int expectedContainerBgColor nativeAd getResources getColor R color tw ad light container bg color final int expectedCardBgColor nativeAd getResources getColor R color tw ad light card bg color final int expectedPrimaryTextColor nativeAd getResources getColor R color tw ad light text primary color final int ctaBackgroundColor nativeAd getResources getColor R color tw ad cta default final int cardBorderColor nativeAd getResources getColor R color tw ad light card border color assertEquals expectedContainerBgColor nativeAd containerBackgroundColor assertEquals expectedCardBgColor nativeAd cardBackgroundColor assertEquals expectedPrimaryTextColor nativeAd primaryTextColor assertEquals ctaBackgroundColor nativeAd ctaBackgroundColor assertEquals cardBorderColor nativeAd cardBorderColor Test public void testStyleAttrsForDarkTheme final TwitterStaticNativeAd nativeAd new TwitterStaticNativeAd RuntimeEnvironment application null R style tw ad DarkStyle final int expectedContainerBgColor nativeAd getResources getColor R color tw ad dark container bg color final int expectedCardBgColor nativeAd getResources getColor R color tw ad dark card bg color final int expectedPrimaryTextColor nativeAd getResources getColor R color tw ad dark text primary color final int ctaBackgroundColor nativeAd getResources getColor R color tw ad cta default final int cardBorderColor nativeAd getResources getColor R color tw ad dark card border color assertEquals expectedContainerBgColor nativeAd containerBackgroundColor assertEquals expectedCardBgColor nativeAd cardBackgroundColor assertEquals expectedPrimaryTextColor nativeAd primaryTextColor assertEquals ctaBackgroundColor nativeAd ctaBackgroundColor assertEquals cardBorderColor nativeAd cardBorderColorpackage com twitter sdk android unity import com unity3d player UnityPlayer class UnityMessage final String data final String method UnityMessage String method String data this method method this data data public static class Builder String data String method public Builder setData String data this data data return this public Builder setMethod String method this method method return this public UnityMessage build return new UnityMessage method data public void send UnityPlayer UnitySendMessage TwitterKit GAME OBJECT NAME method datapackage com twitter sdk android core models import com google gson annotations SerializedName public class UrlEntity extends Entity SerializedName url public final String url SerializedName expanded url public final String expandedUrl SerializedName display url public final String displayUrl public UrlEntity String url String expandedUrl String displayUrl int start int end super start end this url url this expandedUrl expandedUrl this displayUrl displayUrlpackage com kaku colorfulnews widget import android graphics drawable ColorDrawable import android graphics drawable Drawable import android support annotation NonNull import android support annotation Nullable import android text Html import android widget TextView import com kaku colorfulnews App import com kaku colorfulnews R import com kaku colorfulnews common HostType import com kaku colorfulnews repository network RetrofitManager import com kaku colorfulnews utils MyUtils import com socks library KLog import java io File import java io FileOutputStream import java io IOException import java io InputStream import okhttp3 ResponseBody import rx Subscriber import rx Subscription import rx android schedulers AndroidSchedulers import rx functions Func1 import rx schedulers Schedulers public class URLImageGetter implements Html ImageGetter private TextView mTextView private int mPicWidth private String mNewsBody private int mPicCount private int mPicTotal private static final String mFilePath App getAppContext getCacheDir getAbsolutePath public Subscription mSubscription public URLImageGetter TextView textView String newsBody int picTotal mTextView textView mPicWidth mTextView getWidth mNewsBody newsBody mPicTotal picTotal Override public Drawable getDrawable final String source Drawable drawable File file new File mFilePath source hashCode if file exists mPicCount drawable getDrawableFromDisk file else drawable getDrawableFromNet source return drawable Nullable private Drawable getDrawableFromDisk File file Drawable drawable Drawable createFromPath file getAbsolutePath if drawable null int picHeight calculatePicHeight drawable drawable setBounds 0 0 mPicWidth picHeight return drawable private int calculatePicHeight Drawable drawable float imgWidth drawable getIntrinsicWidth float imgHeight drawable getIntrinsicHeight float rate imgHeight imgWidth return int mPicWidth rate NonNull private Drawable getDrawableFromNet final String source mSubscription RetrofitManager getInstance HostType NEWS DETAIL HTML PHOTO getNewsBodyHtmlPhoto source unsubscribeOn Schedulers io subscribeOn Schedulers io observeOn AndroidSchedulers mainThread map new Func1 ResponseBody Boolean Override public Boolean call ResponseBody response return WritePicToDisk response source subscribe new Subscriber Boolean Override public void onCompleted KLog i Override public void onError Throwable e KLog e e toString Override public void onNext Boolean isLoadSuccess KLog i mPicCount if isLoadSuccess mPicCount mPicTotal 1 mTextView setText Html fromHtml mNewsBody URLImageGetter this null return createPicPlaceholder NonNull private Boolean WritePicToDisk ResponseBody response String source File file new File mFilePath source hashCode InputStream in null FileOutputStream out null try in response byteStream out new FileOutputStream file byte buffer new byte 1024 int len while len in read buffer 1 out write buffer 0 len return true catch Exception e KLog e e toString return false finally try if in null in close if out null out close catch IOException e KLog e SuppressWarnings deprecation NonNull private Drawable createPicPlaceholder Drawable drawable int color MyUtils getColor R color image place holder R color image place holder night drawable new ColorDrawable App getAppContext getResources getColor color drawable setBounds 0 0 mPicWidth mPicWidth 3 return drawablepackage com twitter sdk android core models import com google gson annotations SerializedName import java io Serializable import java util List public class User implements Serializable Identifiable private static final long serialVersionUID 4663450696842173958L public static final long INVALID ID 1L SerializedName contributors enabled public final boolean contributorsEnabled SerializedName created at public final String createdAt SerializedName default profile public final boolean defaultProfile SerializedName default profile image public final boolean defaultProfileImage SerializedName description public final String description SerializedName email public final String email SerializedName entities public final UserEntities entities SerializedName favourites count public final int favouritesCount SerializedName follow request sent public final boolean followRequestSent SerializedName followers count public final int followersCount SerializedName friends count public final int friendsCount SerializedName geo enabled public final boolean geoEnabled SerializedName id public final long id SerializedName id str public final String idStr SerializedName is translator public final boolean isTranslator SerializedName lang public final String lang SerializedName listed count public final int listedCount SerializedName location public final String location SerializedName name public final String name SerializedName profile background color public final String profileBackgroundColor SerializedName profile background image url public final String profileBackgroundImageUrl SerializedName profile background image url https public final String profileBackgroundImageUrlHttps SerializedName profile background tile public final boolean profileBackgroundTile SerializedName profile banner url public final String profileBannerUrl SerializedName profile image url public final String profileImageUrl SerializedName profile image url https public final String profileImageUrlHttps SerializedName profile link color public final String profileLinkColor SerializedName profile sidebar border color public final String profileSidebarBorderColor SerializedName profile sidebar fill color public final String profileSidebarFillColor SerializedName profile text color public final String profileTextColor SerializedName profile use background image public final boolean profileUseBackgroundImage SerializedName protected public final boolean protectedUser SerializedName screen name public final String screenName SerializedName show all inline media public final boolean showAllInlineMedia SerializedName status public final Tweet status SerializedName statuses count public final int statusesCount SerializedName time zone public final String timeZone SerializedName url public final String url SerializedName utc offset public final int utcOffset SerializedName verified public final boolean verified SerializedName withheld in countries public final List String withheldInCountries SerializedName withheld scope public final String withheldScope public User boolean contributorsEnabled String createdAt boolean defaultProfile boolean defaultProfileImage String description String emailAddress UserEntities entities int favouritesCount boolean followRequestSent int followersCount int friendsCount boolean geoEnabled long id String idStr boolean isTranslator String lang int listedCount String location String name String profileBackgroundColor String profileBackgroundImageUrl String profileBackgroundImageUrlHttps boolean profileBackgroundTile String profileBannerUrl String profileImageUrl String profileImageUrlHttps String profileLinkColor String profileSidebarBorderColor String profileSidebarFillColor String profileTextColor boolean profileUseBackgroundImage boolean protectedUser String screenName boolean showAllInlineMedia Tweet status int statusesCount String timeZone String url int utcOffset boolean verified List String withheldInCountries String withheldScope this contributorsEnabled contributorsEnabled this createdAt createdAt this defaultProfile defaultProfile this defaultProfileImage defaultProfileImage this description description this email emailAddress this entities entities this favouritesCount favouritesCount this followRequestSent followRequestSent this followersCount followersCount this friendsCount friendsCount this geoEnabled geoEnabled this id id this idStr idStr this isTranslator isTranslator this lang lang this listedCount listedCount this location location this name name this profileBackgroundColor profileBackgroundColor this profileBackgroundImageUrl profileBackgroundImageUrl this profileBackgroundImageUrlHttps profileBackgroundImageUrlHttps this profileBackgroundTile profileBackgroundTile this profileBannerUrl profileBannerUrl this profileImageUrl profileImageUrl this profileImageUrlHttps profileImageUrlHttps this profileLinkColor profileLinkColor this profileSidebarBorderColor profileSidebarBorderColor this profileSidebarFillColor profileSidebarFillColor this profileTextColor profileTextColor this profileUseBackgroundImage profileUseBackgroundImage this protectedUser protectedUser this screenName screenName this showAllInlineMedia showAllInlineMedia this status status this statusesCount statusesCount this timeZone timeZone this url url this utcOffset utcOffset this verified verified this withheldInCountries withheldInCountries this withheldScope withheldScope Override public long getId return this idpackage com twitter sdk android core models import java util List public class UserBuilder private boolean contributorsEnabled private String createdAt private boolean defaultProfile private boolean defaultProfileImage private String description private String email private UserEntities entities private int favouritesCount private boolean followRequestSent private int followersCount private int friendsCount private boolean geoEnabled private long id User INVALID ID private String idStr private boolean isTranslator private String lang private int listedCount private String location private String name private String profileBackgroundColor private String profileBackgroundImageUrl private String profileBackgroundImageUrlHttps private boolean profileBackgroundTile private String profileBannerUrl private String profileImageUrl private String profileImageUrlHttps private String profileLinkColor private String profileSidebarBorderColor private String profileSidebarFillColor private String profileTextColor private boolean profileUseBackgroundImage private boolean protectedUser private String screenName private boolean showAllInlineMedia private Tweet status private int statusesCount private String timeZone private String url private int utcOffset private boolean verified private List String withheldInCountries private String withheldScope public UserBuilder setContributorsEnabled boolean contributorsEnabled this contributorsEnabled contributorsEnabled return this public UserBuilder setCreatedAt String createdAt this createdAt createdAt return this public UserBuilder setDefaultProfile boolean defaultProfile this defaultProfile defaultProfile return this public UserBuilder setDefaultProfileImage boolean defaultProfileImage this defaultProfileImage defaultProfileImage return this public UserBuilder setDescription String description this description description return this public UserBuilder setEmail String email this email email return this public UserBuilder setEntities UserEntities entities this entities entities return this public UserBuilder setFavouritesCount int favouritesCount this favouritesCount favouritesCount return this public UserBuilder setFollowRequestSent boolean followRequestSent this followRequestSent followRequestSent return this public UserBuilder setFollowersCount int followersCount this followersCount followersCount return this public UserBuilder setFriendsCount int friendsCount this friendsCount friendsCount return this public UserBuilder setGeoEnabled boolean geoEnabled this geoEnabled geoEnabled return this public UserBuilder setId long id this id id return this public UserBuilder setIdStr String idStr this idStr idStr return this public UserBuilder setIsTranslator boolean isTranslator this isTranslator isTranslator return this public UserBuilder setLang String lang this lang lang return this public UserBuilder setListedCount int listedCount this listedCount listedCount return this public UserBuilder setLocation String location this location location return this public UserBuilder setName String name this name name return this public UserBuilder setProfileBackgroundColor String profileBackgroundColor this profileBackgroundColor profileBackgroundColor return this public UserBuilder setProfileBackgroundImageUrl String profileBackgroundImageUrl this profileBackgroundImageUrl profileBackgroundImageUrl return this public UserBuilder setProfileBackgroundImageUrlHttps String profileBackgroundImageUrlHttps this profileBackgroundImageUrlHttps profileBackgroundImageUrlHttps return this public UserBuilder setProfileBackgroundTile boolean profileBackgroundTile this profileBackgroundTile profileBackgroundTile return this public UserBuilder setProfileBannerUrl String profileBannerUrl this profileBannerUrl profileBannerUrl return this public UserBuilder setProfileImageUrl String profileImageUrl this profileImageUrl profileImageUrl return this public UserBuilder setProfileImageUrlHttps String profileImageUrlHttps this profileImageUrlHttps profileImageUrlHttps return this public UserBuilder setProfileLinkColor String profileLinkColor this profileLinkColor profileLinkColor return this public UserBuilder setProfileSidebarBorderColor String profileSidebarBorderColor this profileSidebarBorderColor profileSidebarBorderColor return this public UserBuilder setProfileSidebarFillColor String profileSidebarFillColor this profileSidebarFillColor profileSidebarFillColor return this public UserBuilder setProfileTextColor String profileTextColor this profileTextColor profileTextColor return this public UserBuilder setProfileUseBackgroundImage boolean profileUseBackgroundImage this profileUseBackgroundImage profileUseBackgroundImage return this public UserBuilder setProtectedUser boolean protectedUser this protectedUser protectedUser return this public UserBuilder setScreenName String screenName this screenName screenName return this public UserBuilder setShowAllInlineMedia boolean showAllInlineMedia this showAllInlineMedia showAllInlineMedia return this public UserBuilder setStatus Tweet status this status status return this public UserBuilder setStatusesCount int statusesCount this statusesCount statusesCount return this public UserBuilder setTimeZone String timeZone this timeZone timeZone return this public UserBuilder setUrl String url this url url return this public UserBuilder setUtcOffset int utcOffset this utcOffset utcOffset return this public UserBuilder setVerified boolean verified this verified verified return this public UserBuilder setWithheldInCountries List String withheldInCountries this withheldInCountries withheldInCountries return this public UserBuilder setWithheldScope String withheldScope this withheldScope withheldScope return this public User build return new User contributorsEnabled createdAt defaultProfile defaultProfileImage description email entities favouritesCount followRequestSent followersCount friendsCount geoEnabled id idStr isTranslator lang listedCount location name profileBackgroundColor profileBackgroundImageUrl profileBackgroundImageUrlHttps profileBackgroundTile profileBannerUrl profileImageUrl profileImageUrlHttps profileLinkColor profileSidebarBorderColor profileSidebarFillColor profileTextColor profileUseBackgroundImage protectedUser screenName showAllInlineMedia status statusesCount timeZone url utcOffset verified withheldInCountries withheldScopepackage com twitter sdk android core models import com google gson annotations SerializedName import java util Collections import java util List public class UserEntities SerializedName url public final UrlEntities url SerializedName description public final UrlEntities description public UserEntities UrlEntities url UrlEntities description this url url this description description public static class UrlEntities SerializedName urls public final List UrlEntity urls public UrlEntities List UrlEntity urls this urls getSafeList urls private T List T getSafeList List T entities Entities may be null if Gson does not find object to parse When that happens make sure to return an empty list if entities null return Collections EMPTY LIST else return Collections unmodifiableList entitiespackage com twitter sdk android tweetui import com twitter sdk android core Callback import com twitter sdk android core TwitterCore import com twitter sdk android core models Tweet import java util List import retrofit2 Call public class UserTimeline extends BaseTimeline implements Timeline Tweet private static final String SCRIBE SECTION user final Long userId final String screenName final Integer maxItemsPerRequest final Boolean includeReplies final Boolean includeRetweets UserTimeline TweetUi tweetUi Long userId String screenName Integer maxItemsPerRequest Boolean includeReplies Boolean includeRetweets super tweetUi this userId userId this screenName screenName this maxItemsPerRequest maxItemsPerRequest null includeReplies should default to false this includeReplies includeReplies null false includeReplies this includeRetweets includeRetweets Override public void next Long sinceId Callback TimelineResult Tweet cb createUserTimelineRequest sinceId null enqueue new TweetsCallback cb Override public void previous Long maxId Callback TimelineResult Tweet cb user timeline api provides results which are inclusive decrement the maxId to get exclusive results createUserTimelineRequest null decrementMaxId maxId enqueue new TweetsCallback cb Override String getTimelineType return SCRIBE SECTION Call List Tweet createUserTimelineRequest final Long sinceId final Long maxId return TwitterCore getInstance getApiClient getStatusesService userTimeline userId screenName maxItemsPerRequest sinceId maxId false includeReplies null includeRetweets public static class Builder private final TweetUi tweetUi private Long userId private String screenName private Integer maxItemsPerRequest 30 private Boolean includeReplies private Boolean includeRetweets public Builder this TweetUi getInstance public Builder TweetUi tweetUi if tweetUi null throw new IllegalArgumentException TweetUi instance must not be null this tweetUi tweetUi public Builder userId Long userId this userId userId return this public Builder screenName String screenName this screenName screenName return this public Builder maxItemsPerRequest Integer maxItemsPerRequest this maxItemsPerRequest maxItemsPerRequest return this public Builder includeReplies Boolean includeReplies this includeReplies includeReplies return this public Builder includeRetweets Boolean includeRetweets this includeRetweets includeRetweets return this public UserTimeline build return new UserTimeline tweetUi userId screenName maxItemsPerRequest includeReplies includeRetweetspackage com twitter sdk android core internal import android text TextUtils import com twitter sdk android core models User public final class UserUtils private UserUtils see https dev twitter com overview general user profile images and banners see also https confluence twitter biz display PLATFORM Image Types and Sizes public enum AvatarSize NORMAL normal BIGGER bigger MINI mini ORIGINAL original REASONABLY SMALL reasonably small private final String suffix AvatarSize String suffix this suffix suffix String getSuffix return suffix public static String getProfileImageUrlHttps User user AvatarSize size if user null user profileImageUrlHttps null final String url user profileImageUrlHttps if size null url null return url switch size case NORMAL case BIGGER case MINI case ORIGINAL case REASONABLY SMALL return url replace AvatarSize NORMAL getSuffix size getSuffix default return url else return null public static CharSequence formatScreenName CharSequence screenName if TextUtils isEmpty screenName return if screenName charAt 0 return screenName return screenNamepackage com twitter sdk android core models import com google gson annotations SerializedName public class UserValue SerializedName id str public final String idStr public UserValue String idStr this idStr idStrpackage com twitter sdk android tweetui import com twitter sdk android core models Tweet import java util ArrayList import java util HashMap import java util List final class Utils private Utils static Long numberOrDefault String candidate long defaultLong try return Long parseLong candidate catch NumberFormatException e return defaultLong static String stringOrEmpty String candidate return stringOrDefault candidate static String stringOrDefault String candidate String defaultString return candidate null candidate defaultString static CharSequence charSeqOrEmpty CharSequence candidate return charSeqOrDefault candidate static CharSequence charSeqOrDefault CharSequence candidate CharSequence defaultSequence return candidate null candidate defaultSequence static List Tweet orderTweets List Long tweetIds List Tweet tweets final HashMap Long Tweet idToTweet new HashMap final ArrayList Tweet ordered new ArrayList for Tweet tweet tweets idToTweet put tweet id tweet for Long id tweetIds if idToTweet containsKey id ordered add idToTweet get id return orderedpackage com twitter sdk android tweetui internal import android annotation SuppressLint import android content Context import android os Handler import android os Message import android util AttributeSet import android view LayoutInflater import android view View import android widget FrameLayout import android widget ImageButton import android widget SeekBar import android widget TextView import com twitter sdk android tweetui R public class VideoControlView extends FrameLayout static final long PROGRESS BAR TICKS 1000L static final int FADE DURATION MS 150 private static final int SHOW PROGRESS MSG 1001 MediaPlayerControl player ImageButton stateControl TextView currentTime TextView duration SeekBar seekBar public VideoControlView Context context super context public VideoControlView Context context AttributeSet attrs super context attrs public VideoControlView Context context AttributeSet attrs int defStyleAttr super context attrs defStyleAttr SuppressLint HandlerLeak private final Handler handler new Handler Override public void handleMessage Message msg if msg what SHOW PROGRESS MSG if player null return updateProgress updateStateControl if isShowing player isPlaying msg obtainMessage SHOW PROGRESS MSG sendMessageDelayed msg 500 public void setMediaPlayer MediaPlayerControl player this player player Override protected void onFinishInflate super onFinishInflate initSubviews void initSubviews final LayoutInflater inflater LayoutInflater getContext getSystemService Context LAYOUT INFLATER SERVICE inflater inflate R layout tw video control this stateControl ImageButton findViewById R id tw state control currentTime TextView findViewById R id tw current time duration TextView findViewById R id tw duration seekBar SeekBar findViewById R id tw progress seekBar setMax int PROGRESS BAR TICKS seekBar setOnSeekBarChangeListener createProgressChangeListener stateControl setOnClickListener createStateControlClickListener setDuration 0 setCurrentTime 0 setProgress 0 0 0 OnClickListener createStateControlClickListener return new OnClickListener Override public void onClick View view if player isPlaying player pause else player start show SeekBar OnSeekBarChangeListener createProgressChangeListener return new SeekBar OnSeekBarChangeListener Override public void onProgressChanged SeekBar seekBar int progress boolean fromUser if fromUser return final int duration player getDuration final long position duration progress PROGRESS BAR TICKS player seekTo int position setCurrentTime int position Override public void onStartTrackingTouch SeekBar seekBar handler removeMessages SHOW PROGRESS MSG Override public void onStopTrackingTouch SeekBar seekBar handler sendEmptyMessage SHOW PROGRESS MSG void updateProgress final int duration player getDuration final int currentTime player getCurrentPosition final int bufferPercentage player getBufferPercentage setDuration duration setCurrentTime currentTime setProgress currentTime duration bufferPercentage void setDuration int durationMillis duration setText MediaTimeUtils getPlaybackTime durationMillis void setCurrentTime int currentTimeMillis currentTime setText MediaTimeUtils getPlaybackTime currentTimeMillis void setProgress int currentTimeMillis int durationMillis int bufferPercentage final long pos durationMillis 0 PROGRESS BAR TICKS currentTimeMillis durationMillis 0 seekBar setProgress int pos seekBar setSecondaryProgress bufferPercentage 10 void updateStateControl if player isPlaying setPauseDrawable else if player getCurrentPosition Math max player getDuration 500 0 setReplayDrawable else setPlayDrawable void setPlayDrawable stateControl setImageResource R drawable tw video play btn stateControl setContentDescription getContext getString R string tw play void setPauseDrawable stateControl setImageResource R drawable tw video pause btn stateControl setContentDescription getContext getString R string tw pause void setReplayDrawable stateControl setImageResource R drawable tw video replay btn stateControl setContentDescription getContext getString R string tw replay void hide handler removeMessages SHOW PROGRESS MSG AnimationUtils fadeOut this FADE DURATION MS void show handler sendEmptyMessage SHOW PROGRESS MSG AnimationUtils fadeIn this FADE DURATION MS public boolean isShowing return getVisibility View VISIBLE public void update handler sendEmptyMessage SHOW PROGRESS MSG public interface MediaPlayerControl void start void pause int getDuration int getCurrentPosition void seekTo int position boolean isPlaying int getBufferPercentagepackage com twitter sdk android core models import com google gson annotations SerializedName import java io Serializable import java util List public class VideoInfo implements Serializable SerializedName aspect ratio public final List Integer aspectRatio SerializedName duration millis public final long durationMillis SerializedName variants public final List Variant variants public VideoInfo List Integer aspectRatio long durationMillis List Variant variants this aspectRatio aspectRatio this durationMillis durationMillis this variants variants public static class Variant implements Serializable SerializedName bitrate public final long bitrate SerializedName content type public final String contentType SerializedName url public final String url public Variant long bitrate String contentType String url this bitrate bitrate this contentType contentType this url urlpackage com twitter sdk android tweetui import com twitter sdk android core internal scribe ScribeItem public interface VideoScribeClient void impression ScribeItem card void play ScribeItem cardpackage com twitter sdk android tweetui import com twitter sdk android core internal scribe EventNamespace import com twitter sdk android core internal scribe ScribeItem import com twitter sdk android core internal scribe SyndicationClientEvent import java util ArrayList import java util List class VideoScribeClientImpl implements VideoScribeClient static final String TFW CLIENT EVENT PAGE android static final String TFW CLIENT EVENT SECTION video static final String SCRIBE IMPRESSION ACTION impression static final String SCRIBE PLAY ACTION play final TweetUi tweetUi VideoScribeClientImpl TweetUi tweetUi this tweetUi tweetUi Override public void impression ScribeItem scribeItem final List ScribeItem items new ArrayList items add scribeItem tweetUi scribe getTfwImpressionNamespace items Override public void play ScribeItem scribeItem final List ScribeItem items new ArrayList items add scribeItem tweetUi scribe getTfwPlayNamespace items static EventNamespace getTfwImpressionNamespace return new EventNamespace Builder setClient SyndicationClientEvent CLIENT NAME setPage TFW CLIENT EVENT PAGE setSection TFW CLIENT EVENT SECTION setAction SCRIBE IMPRESSION ACTION builder static EventNamespace getTfwPlayNamespace return new EventNamespace Builder setClient SyndicationClientEvent CLIENT NAME setPage TFW CLIENT EVENT PAGE setSection TFW CLIENT EVENT SECTION setAction SCRIBE PLAY ACTION builderpackage com twitter sdk android tweetui internal import android content Context import android media AudioManager import android media MediaPlayer import android media MediaPlayer OnCompletionListener import android media MediaPlayer OnErrorListener import android media MediaPlayer OnInfoListener import android net Uri import android util AttributeSet import android util Log import android view KeyEvent import android view MotionEvent import android view SurfaceHolder import android view SurfaceView public class VideoView extends SurfaceView implements VideoControlView MediaPlayerControl private String TAG VideoView settable by the client private Uri mUri all possible internal states private static final int STATE ERROR 1 private static final int STATE IDLE 0 private static final int STATE PREPARING 1 private static final int STATE PREPARED 2 private static final int STATE PLAYING 3 private static final int STATE PAUSED 4 private static final int STATE PLAYBACK COMPLETED 5 mCurrentState is a VideoView object s current state mTargetState is the state that a method caller intends to reach For instance regardless the VideoView object s current state calling pause intends to bring the object to a target state of STATE PAUSED private int mCurrentState STATE IDLE private int mTargetState STATE IDLE All the stuff we need for playing and showing a video private SurfaceHolder mSurfaceHolder null private MediaPlayer mMediaPlayer null private int mAudioSession private int mVideoWidth private int mVideoHeight private int mSurfaceWidth private int mSurfaceHeight private VideoControlView mMediaController private OnCompletionListener mOnCompletionListener private MediaPlayer OnPreparedListener mOnPreparedListener private int mCurrentBufferPercentage private OnErrorListener mOnErrorListener private OnInfoListener mOnInfoListener private int mSeekWhenPrepared recording the seek position while preparing private boolean mLooping public VideoView Context context super context initVideoView public VideoView Context context AttributeSet attrs this context attrs 0 public VideoView Context context AttributeSet attrs int defStyleAttr super context attrs defStyleAttr initVideoView Override protected void onMeasure int widthMeasureSpec int heightMeasureSpec Log i onMeasure MeasureSpec toString widthMeasureSpec MeasureSpec toString heightMeasureSpec int width getDefaultSize mVideoWidth widthMeasureSpec int height getDefaultSize mVideoHeight heightMeasureSpec if mVideoWidth 0 mVideoHeight 0 int widthSpecMode MeasureSpec getMode widthMeasureSpec int widthSpecSize MeasureSpec getSize widthMeasureSpec int heightSpecMode MeasureSpec getMode heightMeasureSpec int heightSpecSize MeasureSpec getSize heightMeasureSpec if widthSpecMode MeasureSpec EXACTLY heightSpecMode MeasureSpec EXACTLY the size is fixed width widthSpecSize height heightSpecSize for compatibility we adjust size based on aspect ratio if mVideoWidth height width mVideoHeight Log i image too wide correcting width height mVideoWidth mVideoHeight else if mVideoWidth height width mVideoHeight Log i image too tall correcting height width mVideoHeight mVideoWidth else if widthSpecMode MeasureSpec EXACTLY only the width is fixed adjust the height to match aspect ratio if possible width widthSpecSize height width mVideoHeight mVideoWidth if heightSpecMode MeasureSpec AT MOST height heightSpecSize couldn t match aspect ratio within the constraints height heightSpecSize else if heightSpecMode MeasureSpec EXACTLY only the height is fixed adjust the width to match aspect ratio if possible height heightSpecSize width height mVideoWidth mVideoHeight if widthSpecMode MeasureSpec AT MOST width widthSpecSize couldn t match aspect ratio within the constraints width widthSpecSize else neither the width nor the height are fixed try to use actual video size width mVideoWidth height mVideoHeight if heightSpecMode MeasureSpec AT MOST height heightSpecSize too tall decrease both width and height height heightSpecSize width height mVideoWidth mVideoHeight if widthSpecMode MeasureSpec AT MOST width widthSpecSize too wide decrease both width and height width widthSpecSize height width mVideoHeight mVideoWidth setMeasuredDimension width height private void initVideoView mVideoWidth 0 mVideoHeight 0 getHolder addCallback mSHCallback getHolder setType SurfaceHolder SURFACE TYPE PUSH BUFFERS setFocusable true setFocusableInTouchMode true requestFocus mCurrentState STATE IDLE mTargetState STATE IDLE public void setVideoURI Uri uri boolean looping mUri uri mLooping looping mSeekWhenPrepared 0 openVideo requestLayout invalidate public void stopPlayback if mMediaPlayer null mMediaPlayer stop mMediaPlayer release mMediaPlayer null mCurrentState STATE IDLE mTargetState STATE IDLE private void openVideo if mUri null mSurfaceHolder null not ready for playback just yet will try again later return we shouldn t clear the target state because somebody might have called start previously release false try mMediaPlayer new MediaPlayer if mAudioSession 0 mMediaPlayer setAudioSessionId mAudioSession else mAudioSession mMediaPlayer getAudioSessionId mMediaPlayer setOnPreparedListener mPreparedListener mMediaPlayer setOnVideoSizeChangedListener mSizeChangedListener mMediaPlayer setOnCompletionListener mCompletionListener mMediaPlayer setOnErrorListener mErrorListener mMediaPlayer setOnInfoListener mInfoListener mMediaPlayer setOnBufferingUpdateListener mBufferingUpdateListener mCurrentBufferPercentage 0 mMediaPlayer setLooping mLooping mMediaPlayer setDataSource getContext mUri mMediaPlayer setDisplay mSurfaceHolder mMediaPlayer setAudioStreamType AudioManager STREAM MUSIC mMediaPlayer setScreenOnWhilePlaying true mMediaPlayer prepareAsync we don t set the target state here either but preserve the target state that was there before mCurrentState STATE PREPARING attachMediaController catch Exception ex Log w TAG Unable to open content mUri ex mCurrentState STATE ERROR mTargetState STATE ERROR mErrorListener onError mMediaPlayer MediaPlayer MEDIA ERROR UNKNOWN 0 public void setMediaController VideoControlView controller if mMediaController null mMediaController hide mMediaController controller attachMediaController private void attachMediaController if mMediaPlayer null mMediaController null mMediaController setMediaPlayer this mMediaController setEnabled isInPlaybackState MediaPlayer OnVideoSizeChangedListener mSizeChangedListener new MediaPlayer OnVideoSizeChangedListener public void onVideoSizeChanged MediaPlayer mp int width int height mVideoWidth mp getVideoWidth mVideoHeight mp getVideoHeight if mVideoWidth 0 mVideoHeight 0 getHolder setFixedSize mVideoWidth mVideoHeight requestLayout MediaPlayer OnPreparedListener mPreparedListener new MediaPlayer OnPreparedListener public void onPrepared MediaPlayer mp mCurrentState STATE PREPARED if mOnPreparedListener null mOnPreparedListener onPrepared mMediaPlayer if mMediaController null mMediaController setEnabled true mVideoWidth mp getVideoWidth mVideoHeight mp getVideoHeight int seekToPosition mSeekWhenPrepared mSeekWhenPrepared may be changed after seekTo call if seekToPosition 0 seekTo seekToPosition if mVideoWidth 0 mVideoHeight 0 Log i video size mVideoWidth mVideoHeight getHolder setFixedSize mVideoWidth mVideoHeight if mSurfaceWidth mVideoWidth mSurfaceHeight mVideoHeight We didn t actually change the size it was already at the size we need so we won t get a surface changed callback so start the video here instead of in the callback if mTargetState STATE PLAYING start if mMediaController null mMediaController show else if isPlaying seekToPosition 0 getCurrentPosition 0 if mMediaController null Show the media controls when we re paused into a video and make em stick mMediaController show else We don t know the video size yet but should start anyway The video size might be reported to us later if mTargetState STATE PLAYING start private MediaPlayer OnCompletionListener mCompletionListener new MediaPlayer OnCompletionListener public void onCompletion MediaPlayer mp mCurrentState STATE PLAYBACK COMPLETED mTargetState STATE PLAYBACK COMPLETED if mOnCompletionListener null mOnCompletionListener onCompletion mMediaPlayer private MediaPlayer OnInfoListener mInfoListener new MediaPlayer OnInfoListener public boolean onInfo MediaPlayer mp int arg1 int arg2 if mOnInfoListener null mOnInfoListener onInfo mp arg1 arg2 return true private MediaPlayer OnErrorListener mErrorListener new MediaPlayer OnErrorListener public boolean onError MediaPlayer mp int framework err int impl err Log d TAG Error framework err impl err mCurrentState STATE ERROR mTargetState STATE ERROR if mMediaController null mMediaController hide if mOnErrorListener null if mOnErrorListener onError mMediaPlayer framework err impl err return true return true private MediaPlayer OnBufferingUpdateListener mBufferingUpdateListener new MediaPlayer OnBufferingUpdateListener public void onBufferingUpdate MediaPlayer mp int percent mCurrentBufferPercentage percent public void setOnPreparedListener MediaPlayer OnPreparedListener l mOnPreparedListener l public void setOnCompletionListener OnCompletionListener l mOnCompletionListener l public void setOnErrorListener OnErrorListener l mOnErrorListener l public void setOnInfoListener OnInfoListener l mOnInfoListener l SurfaceHolder Callback mSHCallback new SurfaceHolder Callback public void surfaceChanged SurfaceHolder holder int format int w int h mSurfaceWidth w mSurfaceHeight h boolean isValidState mTargetState STATE PLAYING boolean hasValidSize mVideoWidth w mVideoHeight h if mMediaPlayer null isValidState hasValidSize if mSeekWhenPrepared 0 seekTo mSeekWhenPrepared start if mMediaController null mMediaController show public void surfaceCreated SurfaceHolder holder mSurfaceHolder holder openVideo public void surfaceDestroyed SurfaceHolder holder after we return from this we can t use the surface any more mSurfaceHolder null if mMediaController null mMediaController hide release true private void release boolean cleartargetstate if mMediaPlayer null mMediaPlayer reset mMediaPlayer release mMediaPlayer null mCurrentState STATE IDLE if cleartargetstate mTargetState STATE IDLE Override public boolean onTouchEvent MotionEvent ev if isInPlaybackState mMediaController null toggleMediaControlsVisiblity return super onTouchEvent ev Override public boolean onTrackballEvent MotionEvent ev if isInPlaybackState mMediaController null toggleMediaControlsVisiblity return super onTrackballEvent ev Override public boolean onKeyDown int keyCode KeyEvent event boolean isKeyCodeSupported keyCode KeyEvent KEYCODE BACK keyCode KeyEvent KEYCODE VOLUME UP keyCode KeyEvent KEYCODE VOLUME DOWN keyCode KeyEvent KEYCODE MENU keyCode KeyEvent KEYCODE CALL keyCode KeyEvent KEYCODE ENDCALL if isInPlaybackState isKeyCodeSupported mMediaController null if keyCode KeyEvent KEYCODE HEADSETHOOK keyCode KeyEvent KEYCODE MEDIA PLAY PAUSE if mMediaPlayer isPlaying pause mMediaController show else start mMediaController hide return true else if keyCode KeyEvent KEYCODE MEDIA PLAY if mMediaPlayer isPlaying start mMediaController hide return true else if keyCode KeyEvent KEYCODE MEDIA STOP keyCode KeyEvent KEYCODE MEDIA PAUSE if mMediaPlayer isPlaying pause mMediaController show return true else toggleMediaControlsVisiblity return super onKeyDown keyCode event private void toggleMediaControlsVisiblity if mMediaController isShowing mMediaController hide else mMediaController show Override public void start if isInPlaybackState mMediaPlayer start mCurrentState STATE PLAYING mTargetState STATE PLAYING Override public void pause if isInPlaybackState if mMediaPlayer isPlaying mMediaPlayer pause mCurrentState STATE PAUSED mTargetState STATE PAUSED Override public int getDuration if isInPlaybackState return mMediaPlayer getDuration return 1 Override public int getCurrentPosition if isInPlaybackState return mMediaPlayer getCurrentPosition return 0 Override public void seekTo int msec if isInPlaybackState mMediaPlayer seekTo msec mSeekWhenPrepared 0 else mSeekWhenPrepared msec Override public boolean isPlaying return isInPlaybackState mMediaPlayer isPlaying Override public int getBufferPercentage if mMediaPlayer null return mCurrentBufferPercentage return 0 private boolean isInPlaybackState return mMediaPlayer null mCurrentState STATE ERROR mCurrentState STATE IDLE mCurrentState STATE PREPARINGpackage com twitter sdk android core internal import com twitter sdk android core models Card import com twitter sdk android core models ImageValue import com twitter sdk android core models UserValue public class VineCardUtils public static final String PLAYER CARD player public static final String VINE CARD vine public static final long VINE USER ID 586671909 private VineCardUtils public static boolean isVine Card card return PLAYER CARD equals card name VINE CARD equals card name isVineUser card private static boolean isVineUser Card card final UserValue user card bindingValues get site try if user null Long parseLong user idStr VINE USER ID return true catch NumberFormatException ex return false return false public static String getPublisherId Card card final UserValue user value card bindingValues get site return user value idStr public static String getStreamUrl Card card return card bindingValues get player stream url public static String getCallToActionUrl Card card return card bindingValues get card url public static ImageValue getImageValue Card card return card bindingValues get player imagepackage com twitter sdk android core identity class WebViewException extends Exception private static final long serialVersionUID 7397331487240298819L private final int errorCode private final String failingUrl public WebViewException int errorCode String description String failingUrl super description this errorCode errorCode this failingUrl failingUrl public int getErrorCode return errorCode public String getDescription return getMessage public String getFailingUrl return failingUrl